// cz: code modified from tutorials/tmva/TMVAClassification.C

#include <cstdlib>
#include <iostream>
#include <fstream>
#include <map>
#include <string>
#include <set>

#include "TChain.h"
#include "TFile.h"
#include "TTree.h"
#include "TString.h"
#include "TObjString.h"
#include "TSystem.h"
#include "TROOT.h"
#include "TMath.h"

#include "WCPLEEANA/tagger.h"

#include "TMVA/Factory.h"
#include "TMVA/DataLoader.h"
#include "TMVA/Tools.h"
#include "TMVA/TMVAGui.h"
#include "TMVA/Reader.h"


#include "WCPLEEANA/eval.h"

using namespace std;
using namespace LEEana;

#include "WCPLEEANA/bdt.h"
#include "WCPLEEANA/pot.h"
#include "WCPLEEANA/pfeval.h"
#include "WCPLEEANA/kine.h"

int main( int argc, char** argv )
{
  if (argc < 3) {
    std::cout << "bdt_convert #input_file #output_file -c[weight_cut_val] -l[traing_list] -g[global_file_type]" << std::endl;
    return -1;
  }

  TString input_file = argv[1];
  TString out_file = argv[2];

  float weight_cut_val = 30;
  float fail_percentage = 0.15;

  TString training_list = "";
  string global_file_type = "";
  int skip_cut = 0;
  
  for (Int_t i=1;i!=argc;i++){
    switch(argv[i][1]){
    case 'c':
      weight_cut_val = atof(&argv[i][2]);
      break;
    case 't':
      fail_percentage = atof(&argv[i][2]);
      break;
    case 'l':
      training_list = &argv[i][2];
      break;
    case 'g':
      global_file_type = &argv[i][2];
      break;
    case 's':
      skip_cut = atoi(&argv[i][2]);
      break;
    }
  }
  
  bool flag_check_run_subrun = false;
  bool flag_use_global_file_type = false;
  if (global_file_type != "") flag_use_global_file_type = true;
  
  
  std::map<string, std::set<std::pair<int, int> > > map_type_run_subrun;
  if (training_list != ""){
    flag_check_run_subrun = true;
    
    ifstream infile(training_list);
    string tmp_type;
    int run, subrun;
    while(!infile.eof()){
      infile >> tmp_type >> run >> subrun;
      map_type_run_subrun[tmp_type].insert(std::make_pair(run, subrun));
    }
    // std::cout << map_type_run_subrun.size() << std::endl;
    // return 0;
  }

  
  if (skip_cut == 0)
    std::cout << "Skip runs for BNB side " << std::endl;
  else
    std::cout << "Do not skip runs  " << std::endl;
    
  bool flag_data = true;
  //std::cout << input_file << " " << out_file << std::endl;


  TFile *file1 = new TFile(input_file);
  TTree *T_BDTvars = (TTree*)file1->Get("wcpselection/T_BDTvars");
  
  TTree *T_eval = (TTree*)file1->Get("wcpselection/T_eval");
  TTree *T_pot = (TTree*)file1->Get("wcpselection/T_pot");
  TTree *T_PFeval = (TTree*)file1->Get("wcpselection/T_PFeval");
  TTree *T_KINEvars = (TTree*)file1->Get("wcpselection/T_KINEvars");

  

  
  if (T_eval->GetBranch("weight_cv")) flag_data =false;
  //  if (T_eval->GetBranch("file_type")) flag_use_global_file_type = false;

  // std::cout << flag_use_global_file_type << " " << flag_check_run_subrun << std::endl;
  // return 0;

   std::vector<int> good_run_list_vec{4952, 4953, 4954, 4955, 4957, 4958, 4961, 4962, 4966, 4967, 4968, 4969, 4971, 4974, 4975, 4977, 4978, 4979, 4981, 4982, 4983, 4986, 4987,
4988, 4989, 4991, 4992, 4995, 4997, 4998, 4999, 5000, 5001, 5002, 5005, 5009, 5010, 5011, 5012, 5013, 5015, 5016, 5017, 5019, 5021, 5022, 5023, 5024,
5025, 5027, 5029, 5031, 5034, 5036, 5037, 5038, 5039, 5041, 5042, 5044, 5046, 5047, 5048, 5049, 5051, 5055, 5056, 5059, 5060, 5061, 5062, 5064, 5065,
5066, 5067, 5068, 5069, 5070, 5071, 5074, 5075, 5076, 5077, 5078, 5079, 5082, 5084, 5086, 5087, 5089, 5090, 5091, 5092, 5093, 5095, 5097, 5098, 5099,
5100, 5102, 5103, 5104, 5106, 5108, 5109, 5110, 5114, 5121, 5122, 5124, 5125, 5127, 5128, 5130, 5133, 5134, 5135, 5136, 5137, 5138, 5139, 5142, 5143,
5144, 5145, 5146, 5147, 5151, 5153, 5154, 5155, 5157, 5159, 5160, 5161, 5162, 5164, 5165, 5166, 5167, 5168, 5169, 5170, 5171, 5176, 5177, 5179, 5181,
5182, 5183, 5184, 5185, 5187, 5189, 5190, 5191, 5192, 5194, 5195, 5197, 5198, 5201, 5203, 5204, 5205, 5207, 5208, 5211, 5212, 5213, 5214, 5215, 5216,
5217, 5219, 5222, 5223, 5226, 5227, 5229, 5233, 5235, 5237, 5262, 5263, 5264, 5265, 5266, 5267, 5268, 5269, 5270, 5271, 5272, 5273, 5274, 5275, 5277,
5278, 5279, 5280, 5281, 5315, 5320, 5321, 5322, 5326, 5328, 5329, 5330, 5331, 5332, 5333, 5334, 5337, 5338, 5339, 5340, 5341, 5343, 5344, 5345, 5347,
5348, 5349, 5351, 5353, 5354, 5359, 5360, 5361, 5362, 5363, 5364, 5365, 5366, 5367, 5368, 5370, 5371, 5374, 5375, 5376, 5377, 5380, 5382, 5383, 5384,
5385, 5386, 5387, 5388, 5389, 5390, 5391, 5392, 5393, 5394, 5395, 5396, 5397, 5399, 5401, 5403, 5404, 5408, 5409, 5411, 5412, 5413, 5415, 5417, 5418,
5419, 5422, 5423, 5424, 5425, 5427, 5428, 5430, 5431, 5432, 5433, 5435, 5436, 5437, 5440, 5441, 5442, 5444, 5445, 5448, 5449, 5450, 5451, 5452, 5454,
5455, 5456, 5457, 5458, 5459, 5460, 5462, 5463, 5464, 5465, 5466, 5470, 5474, 5476, 5478, 5480, 5482, 5484, 5485, 5487, 5488, 5489, 5490, 5491, 5492,
5493, 5495, 5497, 5498, 5499, 5500, 5501, 5504, 5506, 5507, 5508, 5509, 5510, 5511, 5512, 5513, 5514, 5515, 5516, 5517, 5518, 5519, 5520, 5521, 5522,
5523, 5524, 5525, 5526, 5527, 5528, 5530, 5531, 5532, 5533, 5535, 5536, 5538, 5539, 5540, 5541, 5544, 5545, 5546, 5547, 5553, 5555, 5557, 5561, 5564,
5565, 5566, 5567, 5568, 5569, 5570, 5573, 5574, 5575, 5576, 5577, 5578, 5579, 5581, 5582, 5583, 5584, 5585, 5586, 5587, 5588, 5589, 5593, 5597, 5598,
5600, 5601, 5602, 5603, 5604, 5605, 5606, 5607, 5608, 5609, 5611, 5614, 5616, 5617, 5618, 5619, 5622, 5623, 5624, 5625, 5627, 5628, 5630, 5632, 5634,
5635, 5636, 5637, 5638, 5639, 5643, 5646, 5647, 5650, 5652, 5653, 5654, 5656, 5657, 5659, 5661, 5680, 5684, 5685, 5686, 5691, 5693, 5694, 5695, 5697,
5698, 5699, 5702, 5703, 5704, 5705, 5706, 5707, 5708, 5709, 5710, 5712, 5713, 5715, 5718, 5719, 5720, 5721, 5722, 5723, 5724, 5725, 5726, 5727, 5728,
5729, 5730, 5731, 5733, 5735, 5739, 5740, 5741, 5743, 5745, 5746, 5748, 5749, 5752, 5753, 5754, 5755, 5756, 5758, 5760, 5761, 5762, 5765, 5766, 5767,
5768, 5769, 5771, 5772, 5773, 5774, 5776, 5777, 5778, 5779, 5781, 5782, 5783, 5891, 5892, 5894, 5895, 5896, 5897, 5899, 5900, 5901, 5904, 5905, 5906,
5908, 5909, 5910, 5911, 5912, 5914, 5915, 5916, 5918, 5919, 5920, 5921, 5922, 5923, 5924, 5925, 5926, 5929, 5930, 5931, 5932, 5933, 5934, 5935, 5936,
5937, 5938, 5940, 5941, 5942, 5946, 5947, 5948, 5949, 5952, 5953, 5956, 5957, 5959, 5960, 5961, 5963, 5964, 5965, 5966, 5968, 5969, 5971, 5975, 5976,
5977, 5979, 5982, 5983, 5984, 5985, 5986, 5987, 5988, 5989, 5990, 5993, 5994, 5996, 5998, 6000, 6001, 6002, 6003, 6004, 6007, 6011, 6012, 6021, 6022,
6023, 6024, 6025, 6026, 6027, 6028, 6030, 6031, 6032, 6035, 6036, 6037, 6041, 6043, 6044, 6045, 6046, 6047, 6050, 6052, 6055, 6056, 6058, 6059, 6060,
6063, 6064, 6065, 6070, 6072, 6073, 6074, 6075, 6076, 6078, 6079, 6080, 6081, 6082, 6083, 6084, 6085, 6086, 6089, 6090, 6091, 6092, 6093, 6094, 6095,
6096, 6098, 6099, 6100, 6101, 6102, 6103, 6105, 6106, 6107, 6108, 6110, 6111, 6113, 6114, 6115, 6117, 6118, 6119, 6120, 6121, 6122, 6123, 6125, 6130,
6134, 6138, 6139, 6140, 6141, 6143, 6144, 6145, 6146, 6147, 6148, 6149, 6151, 6153, 6154, 6155, 6156, 6157, 6158, 6159, 6160, 6161, 6162, 6163, 6164,
6165, 6166, 6168, 6170, 6172, 6173, 6176, 6178, 6179, 6180, 6182, 6183, 6184, 6185, 6187, 6190, 6191, 6192, 6194, 6195, 6197, 6198, 6199, 6201, 6203,
6205, 6206, 6207, 6210, 6211, 6213, 6214, 6216, 6217, 6218, 6219, 6220, 6221, 6223, 6224, 6226, 6227, 6228, 6229, 6230, 6231, 6233, 6234, 6235, 6236,
6238, 6239, 6241, 6244, 6246, 6247, 6254, 6260, 6261, 6262, 6265, 6266, 6276, 6277, 6278, 6279, 6280, 6281, 6282, 6283, 6284, 6285, 6286, 6288, 6295,
6296, 6297, 6298, 6299, 6300, 6301, 6302, 6303, 6304, 6305, 6307, 6308, 6309, 6310, 6311, 6312, 6313, 6314, 6315, 6318, 6319, 6320, 6321, 6322, 6323,
6324, 6325, 6326, 6327, 6329, 6330, 6332, 6333, 6334, 6335, 6336, 6337, 6338, 6339, 6340, 6341, 6342, 6343, 6344, 6346, 6347, 6348, 6349, 6350, 6352,
6353, 6354, 6355, 6356, 6358, 6359, 6360, 6361, 6362, 6363, 6365, 6366, 6367, 6369, 6370, 6371, 6374, 6375, 6376, 6377, 6378, 6379, 6380, 6381, 6382,
6383, 6384, 6385, 6386, 6387, 6388, 6397, 6401, 6402, 6404, 6405, 6406, 6407, 6408, 6409, 6410, 6412, 6417, 6419, 6420, 6421, 6423, 6425, 6426, 6427,
6428, 6429, 6430, 6431, 6432, 6433, 6436, 6437, 6438, 6439, 6440, 6441, 6442, 6443, 6444, 6445, 6446, 6448, 6450, 6451, 6453, 6454, 6455, 6457, 6460,
6461, 6462, 6466, 6467, 6468, 6475, 6478, 6479, 6480, 6481, 6482, 6483, 6484, 6487, 6488, 6489, 6490, 6493, 6494, 6497, 6501, 6502, 6503, 6506, 6507,
6508, 6510, 6517, 6520, 6521, 6525, 6527, 6528, 6529, 6530, 6533, 6534, 6535, 6540, 6542, 6544, 6546, 6547, 6548, 6549, 6551, 6552, 6553, 6559, 6560,
6562, 6563, 6564, 6565, 6566, 6567, 6568, 6569, 6571, 6572, 6573, 6575, 6577, 6579, 6580, 6581, 6582, 6583, 6588, 6589, 6590, 6591, 6592, 6593, 6594,
6596, 6598, 6599, 6600, 6602, 6603, 6605, 6606, 6608, 6609, 6611, 6614, 6615, 6616, 6617, 6619, 6620, 6621, 6622, 6623, 6625, 6626, 6628, 6629, 6630,
6631, 6632, 6633, 6634, 6635, 6637, 6638, 6639, 6640, 6641, 6642, 6645, 6647, 6649, 6650, 6653, 6655, 6656, 6657, 6658, 6659, 6663, 6664, 6665, 6666,
6667, 6668, 6669, 6670, 6671, 6672, 6674, 6675, 6676, 6680, 6681, 6683, 6684, 6685, 6686, 6687, 6688, 6689, 6690, 6691, 6692, 6693, 6694, 6695, 6696,
6697, 6698, 6699, 6710, 6711, 6712, 6714, 6717, 6720, 6722, 6725, 6747, 6748, 6749, 6751, 6752, 6756, 6758, 6761, 6763, 6765, 6766, 6767, 6768, 6769,
6772, 6773, 6775, 6776, 6777, 6778, 6779, 6780, 6782, 6783, 6784, 6785, 6786, 6787, 6788, 6789, 6790, 6792, 6793, 6794, 6795, 6797, 6798, 6799, 6800,
6801, 6802, 6803, 6804, 6805, 6806, 6810, 6811, 6812, 6813, 6814, 6822, 6823, 6824, 6825, 6826, 6827, 6828, 6829, 6830, 6831, 6832, 6835, 6836, 6837,
6840, 6841, 6850, 6851, 6853, 6854, 6855, 6856, 6857, 6859, 6861, 6863, 6865, 6866, 6867, 6869, 6870, 6871, 6873, 6874, 6875, 6876, 6879, 6880, 6881,
6882, 6883, 6884, 6885, 6886, 6887, 6888, 6890, 6891, 6893, 6894, 6895, 6896, 6901, 6902, 6903, 6905, 6906, 6907, 6908, 6911, 6912, 6913, 6914, 6915,
6916, 6917, 6918, 6919, 6921, 6922, 6923, 6925, 6926, 6928, 6930, 6932, 6933, 6934, 6935, 6936, 6937, 6938, 6939, 6940, 6942, 6944, 6945, 6946, 6947,
6949, 6950, 6951, 6952, 6953, 6954, 6955, 6956, 6957, 6958, 6959, 6960, 6963, 6964, 6965, 6966, 6967, 6968, 6969, 6970, 6971, 6972, 6973, 6974, 6975,
6976, 6977, 6978, 6979, 6980, 6981, 6982, 6983, 6984, 6985, 6986, 6987, 6989, 6990, 6991, 6992, 6993, 6995, 6997, 6998, 6999, 7001, 7003, 7004, 7006,
7007, 7008, 7010, 7011, 7012, 7013, 7014, 7016, 7017, 7018, 7019, 7020, 7021, 7022, 7023, 7025, 7026, 7046, 7047, 7048, 7049, 7051, 7053, 7054, 7055,
7057, 7058, 7059, 7078, 7079, 7080, 7082, 7084, 7085, 7086, 7090, 7093, 7095, 7096, 7097, 7098, 7099, 7100, 7103, 7105, 7107, 7108, 7110, 7112, 7113,
7114, 7115, 7116, 7117, 7123, 7124, 7125, 7126, 7127, 7128, 7129, 7130, 7131, 7132, 7133, 7134, 7135, 7136, 7139, 7141, 7142, 7143, 7144, 7145, 7146,
7165, 7166, 7167, 7279, 7280, 7282, 7283, 7285, 7287, 7288, 7289, 7290, 7291, 7292, 7293, 7294, 7295, 7297, 7298, 7299, 7301, 7302, 7303, 7305, 7306,
7307, 7308, 7309, 7310, 7311, 7312, 7314, 7315, 7318, 7319, 7320, 7322, 7323, 7324, 7326, 7327, 7328, 7331, 7332, 7333, 7334, 7336, 7337, 7338, 7341,
7343, 7344, 7345, 7346, 7349, 7350, 7351, 7352, 7353, 7354, 7355, 7356, 7357, 7359, 7360, 7361, 7362, 7365, 7368, 7369, 7371, 7372, 7373, 7375, 7376,
7377, 7378, 7380, 7381, 7382, 7383, 7384, 7385, 7386, 7387, 7388, 7389, 7390, 7391, 7392, 7393, 7394, 7397, 7398, 7400, 7401, 7403, 7404, 7406, 7407,
7408, 7409, 7411, 7412, 7413, 7414, 7415, 7416, 7417, 7418, 7419, 7420, 7421, 7422, 7426, 7427, 7429, 7430, 7431, 7432, 7434, 7435, 7436, 7437, 7438,
7439, 7440, 7441, 7442, 7443, 7444, 7445, 7455, 7456, 7457, 7458, 7459, 7461, 7462, 7463, 7464, 7465, 7466, 7468, 7469, 7470, 7471, 7473, 7474, 7476,
7477, 7478, 7479, 7480, 7481, 7482, 7483, 7484, 7485, 7486, 7487, 7488, 7490, 7491, 7492, 7493, 7494, 7495, 7496, 7497, 7498, 7499, 7500, 7501, 7502,
7503, 7504, 7505, 7506, 7507, 7508, 7509, 7510, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520, 7521, 7522, 7523, 7524, 7525, 7526, 7527, 7528,
7529, 7531, 7532, 7534, 7535, 7537, 7538, 7539, 7540, 7542, 7543, 7544, 7546, 7547, 7556, 7557, 7558, 7559, 7560, 7561, 7562, 7563, 7564, 7565, 7567,
7568, 7571, 7573, 7574, 7575, 7576, 7577, 7578, 7580, 7583, 7584, 7586, 7587, 7588, 7611, 7623, 7625, 7626, 7627, 7628, 7631, 7633, 7634, 7635, 7636,
7637, 7638, 7639, 7640, 7641, 7642, 7643, 7644, 7645, 7648, 7649, 7650, 7652, 7653, 7654, 7655, 7656, 7657, 7660, 7662, 7663, 7665, 7666, 7667, 7668,
7669, 7670, 7671, 7673, 7674, 7675, 7676, 7677, 7678, 7680, 7681, 7682, 7683, 7685, 7687, 7688, 7689, 7690, 7691, 7693, 7694, 7695, 7696, 7699, 7700,
7704, 7705, 7707, 7708, 7709, 7710, 7711, 7712, 7713, 7714, 7715, 7716, 7717, 7718, 7719, 7720, 7721, 7722, 7723, 7724, 7725, 7726, 7727, 7728, 7729,
7730, 7731, 7736, 7738, 7739, 7740, 7741, 7742, 7744, 7745, 7746, 7747, 7748, 7749, 7750, 7751, 7753, 7754, 7755, 7756, 7757, 7759, 7760, 7761, 7762,
       7764, 7765, 7766, 7767, 7768, 7769, 7770, // run 1 good run list ...
       13697, 13698, 13699, 13700, 13701, 13702, 13705, 13707, 13708, 13709, 13712, 13713, 13714, 13715, 13717, 13719, 13720, 13721, 13723, 13724,
13725, 13728, 13729, 13730, 13731, 13732, 13733, 13736, 13737, 13738, 13739, 13740, 13741, 13742, 13743, 13744, 13745, 13746, 13755, 13756, 13757,
13762, 13763, 13764, 13765, 13766, 13767, 13769, 13770, 13771, 13772, 13773, 13774, 13775, 13776, 13777, 13779, 13780, 13782, 13787, 13789, 13790,
13791, 13792, 13793, 13794, 13797, 13799, 13800, 13801, 13802, 13803, 13805, 13806, 13807, 13809, 13810, 13811, 13812, 13860, 13861, 13862, 13864,
13865, 13867, 13868, 13869, 13871, 13872, 13873, 13874, 13875, 13876, 13877, 13878, 13879, 13883, 13884, 13888, 13889, 13894, 13895, 13896, 13897,
13898, 13899, 13900, 13902, 13904, 13905, 13906, 13907, 13908, 13909, 13910, 13911, 13912, 13913, 13917, 13918, 13919, 13921, 13922, 13923, 13926,
13928, 13929, 13930, 13935, 13936, 13937, 13938, 13939, 13940, 13942, 13943, 13944, 13945, 13947, 13948, 13950, 13951, 13954, 13955, 13956, 13957,
13959, 13960, 13962, 13963, 13964, 13965, 13969, 13970, 13971, 13972, 13977, 13978, 13979, 13982, 13984, 13985, 13986, 13988, 13989, 13990, 13991,
13992, 13993, 13996, 13997, 13998, 14000, 14001, 14002, 14004, 14006, 14007, 14008, 14009, 14010, 14011, 14012, 14014, 14015, 14016, 14017, 14020,
14021, 14022, 14023, 14024, 14025, 14026, 14028, 14030, 14031, 14032, 14034, 14035, 14036, 14038, 14039, 14040, 14042, 14043, 14044, 14045, 14046,
14047, 14049, 14053, 14055, 14056, 14058, 14059, 14060, 14062, 14063, 14064, 14065, 14066, 14067, 14068, 14069, 14073, 14074, 14075, 14076, 14077,
14079, 14080, 14082, 14083, 14084, 14087, 14088, 14089, 14090, 14091, 14093, 14095, 14096, 14097, 14098, 14099, 14101, 14102, 14103, 14104, 14105,
14107, 14108, 14109, 14110, 14111, 14112, 14114, 14115, 14116, 14117, 14121, 14122, 14123, 14124, 14125, 14127, 14128, 14129, 14131, 14132, 14133,
14134, 14135, 14136, 14138, 14139, 14140, 14141, 14142, 14143, 14146, 14147, 14148, 14149, 14150, 14151, 14152, 14153, 14154, 14156, 14157, 14158,
14159, 14161, 14162, 14163, 14164, 14165, 14171, 14172, 14173, 14174, 14175, 14177, 14181, 14182, 14183, 14184, 14185, 14186, 14187, 14188, 14189,
14190, 14191, 14192, 14193, 14194, 14195, 14196, 14201, 14202, 14203, 14205, 14206, 14207, 14209, 14211, 14212, 14213, 14214, 14216, 14217, 14218,
14219, 14220, 14222, 14223, 14224, 14225, 14226, 14227, 14228, 14229, 14231, 14232, 14233, 14234, 14235, 14238, 14239, 14240, 14241, 14242, 14243,
14244, 14245, 14246, 14248, 14250, 14251, 14253, 14256, 14257, 14259, 14260, 14261, 14262, 14263, 14264, 14265, 14266, 14268, 14269, 14270, 14271,
14272, 14274, 14275, 14276, 14277, 14278, 14279, 14280, 14281, 14282, 14283, 14284, 14285, 14286, 14287, 14290, 14291, 14292, 14293, 14294, 14295,
14297, 14298, 14299, 14300, 14301, 14302, 14306, 14307, 14308, 14310, 14313, 14314, 14315, 14316, 14317, 14319, 14320, 14321, 14323, 14324, 14325,
14327, 14328, 14329, 14332, 14333, 14334, 14335, 14336, 14337, 14338, 14340, 14341, 14342, 14343, 14344, 14347, 14349, 14350, 14351, 14355, 14356,
14357, 14358, 14359, 14360, 14361, 14362, 14363, 14366, 14367, 14368, 14369, 14370, 14372, 14375, 14376, 14377, 14379, 14381, 14382, 14383, 14384,
14385, 14388, 14390, 14391, 14392, 14393, 14394, 14396, 14399, 14401, 14403, 14404, 14406, 14407, 14408, 14409, 14410, 14411, 14412, 14413, 14414,
14417, 14418, 14420, 14421, 14423, 14425, 14427, 14428, 14430, 14431, 14432, 14436, 14438, 14439, 14441, 14443, 14445, 14446, 14450, 14451, 14452,
14453, 14454, 14455, 14456, 14458, 14459, 14460, 14461, 14463, 14464, 14467, 14468, 14469, 14470, 14473, 14475, 14478, 14480, 14481, 14488, 14490,
14497, 14500, 14505, 14509, 14510, 14512, 14516, 14517, 14521, 14524, 14526, 14527, 14529, 14530, 14531, 14534, 14535, 14536, 14537, 14538, 14539,
14541, 14542, 14543, 14544, 14545, 14546, 14548, 14549, 14550, 14551, 14552, 14553, 14554, 14555, 14556, 14557, 14558, 14559, 14560, 14561, 14562,
14563, 14564, 14568, 14569, 14571, 14572, 14573, 14575, 14576, 14577, 14578, 14580, 14582, 14583, 14584, 14585, 14586, 14587, 14590, 14592, 14596,
14597, 14598, 14600, 14601, 14603, 14607, 14609, 14610, 14611, 14613, 14614, 14615, 14617, 14618, 14619, 14621, 14622, 14623, 14625, 14626, 14630,
14631, 14632, 14633, 14634, 14635, 14636, 14637, 14639, 14640, 14641, 14642, 14643, 14644, 14645, 14647, 14664, 14667, 14669, 14671, 14672, 14673,
14675, 14676, 14677, 14681, 14682, 14684, 14685, 14686, 14687, 14688, 14689, 14690, 14692, 14693, 14694, 14695, 14697, 14698, 14699, 14700, 14701,
14702, 14704, 14706, 14707, 14708, 14709, 14710, 14712, 14713, 14715, 14716, 14717, 14719, 14720, 14721, 14722, 14724, 14725, 14726, 14727, 14729,
14730, 14731, 14733, 14734, 14736, 14737, 14738, 14739, 14740, 14741, 14742, 14743, 14745, 14746, 14747, 14748, 14749, 14750, 14751, 14754, 14755,
14756, 14758, 14759, 14760, 14761, 14763, 14764, 14766, 14767, 14768, 14770, 14771, 14772, 14773, 14774, 14775, 14779, 14780, 14782, 14783, 14784,
14785, 14787, 14788, 14789, 14790, 14793, 14794, 14795, 14796, 14797, 14798, 14799, 14801, 14802, 14805, 14806, 14807, 14808, 14810, 14811, 14812,
14813, 14814, 14816, 14817, 14818, 14819, 14820, 14822, 14824, 14825, 14826, 14828, 14829, 14830, 14831, 14852, 14857, 14860, 14866, 14870, 14871,
14872, 14873, 14874, 14875, 14876, 14877, 14878, 14880, 14881, 14882, 14883, 14884, 14885, 14886, 14887, 14888, 14890, 14891, 14893, 14897, 14899,
14900, 14901, 14902, 14903, 14904, 14905, 14907, 14908, 14909, 14911, 14912, 14913, 14914, 14915, 14916, 14917, 14918, 14919, 14920, 14921, 14922,
14923, 14924, 14925, 14926, 14927, 14929, 14930, 14931, 14932, 14934, 14935, 14936, 14937, 14938, 14939, 14940, 14942, 14944, 14945, 14947, 14948,
14949, 14954, 14955, 14956, 14957, 14958, 14959, 14965, 14967, 14968, 14970, 14971, 14972, 14973, 14974, 14975, 14976, 14977, 14978, 14979, 14980,
14981, 14983, 14985, 14986, 14987, 14989, 14990, 14991, 14993, 14994, 14995, 14997, 14998, 15000, 15001, 15002, 15003, 15004, 15006, 15010, 15011,
15012, 15013, 15014, 15016, 15017, 15018, 15019, 15021, 15025, 15027, 15031, 15035, 15042, 15043, 15045, 15047, 15051, 15052, 15053, 15054, 15055,
15057, 15060, 15061, 15062, 15064, 15065, 15073, 15074, 15077, 15078, 15079, 15080, 15081, 15082, 15083, 15086, 15090, 15092, 15093, 15097, 15098,
15099, 15100, 15101, 15102, 15103, 15104, 15106, 15111, 15113, 15114, 15115, 15116, 15117, 15118, 15120, 15121, 15122, 15123, 15124, 15125, 15127,
15128, 15129, 15130, 15133, 15135, 15136, 15138, 15140, 15141, 15144, 15145, 15146, 15147, 15148, 15149, 15150, 15151, 15152, 15153, 15154, 15155,
15156, 15160, 15161, 15162, 15163, 15165, 15166, 15167, 15170, 15172, 15174, 15176, 15177, 15179, 15181, 15182, 15183, 15206, 15222, 15223, 15225,
15227, 15228, 15231, 15234, 15236, 15238, 15242, 15243, 15244, 15246, 15247, 15249, 15250, 15251, 15252, 15254, 15256, 15257, 15259, 15261, 15262,
15264, 15265, 15266, 15267, 15270, 15271, 15273, 15274, 15275, 15276, 15277, 15279, 15281, 15282, 15283, 15286, 15287, 15288, 15289, 15290, 15291,
15292, 15293, 15294, 15295, 15296, 15297, 15299, 15301, 15303, 15305, 15306, 15308, 15309, 15311, 15312, 15314, 15315, 15316, 15318, 15319, 15320,
15322, 15323, 15324, 15326, 15327, 15328, 15330, 15334, 15335, 15336, 15337, 15339, 15341, 15342, 15343, 15345, 15346, 15348, 15350, 15351, 15353,
15354, 15355, 15356, 15358, 15360, 15361, 15362, 15364, 15366, 15367, 15368, 15369, 15370, 15376, 15377, 15378, 15382, 15383, 15386, 15387, 15388,
15389, 15391, 15392, 15393, 15394, 15395, 15396, 15397, 15398, 15399, 15402, 15403, 15407, 15409, 15410, 15411, 15412, 15413, 15415, 15416, 15417,
15419, 15420, 15421, 15422, 15423, 15425, 15426, 15427, 15428, 15429, 15430, 15431, 15432, 15433, 15434, 15436, 15437, 15438, 15439, 15440, 15442,
15443, 15445, 15446, 15447, 15448, 15449, 15450, 15451, 15456, 15457, 15458, 15460, 15461, 15462, 15463, 15464, 15465, 15466, 15467, 15469, 15470,
15471, 15473, 15474, 15477, 15478, 15479, 15481, 15482, 15483, 15484, 15485, 15486, 15488, 15489, 15491, 15492, 15494, 15495, 15496, 15497, 15498,
15499, 15500, 15501, 15502, 15503, 15504, 15505, 15507, 15509, 15510, 15511, 15514, 15516, 15517, 15519, 15520, 15521, 15527, 15528, 15529, 15530,
15550, 15554, 15580, 15587, 15588, 15589, 15590, 15591, 15592, 15593, 15595, 15596, 15597, 15599, 15601, 15603, 15632, 15633, 15634, 15636, 15637,
15638, 15639, 15640, 15641, 15643, 15644, 15647, 15652, 15655, 15656, 15657, 15662, 15667, 15668, 15669, 15670, 15673, 15676, 15677, 15678, 15680,
15681, 15682, 15683, 15687, 15688, 15689, 15692, 15696, 15697, 15698, 15700, 15701, 15702, 15703, 15704, 15706, 15708, 15709, 15710, 15713, 15714,
15715, 15718, 15719, 15720, 15721, 15722, 15724, 15727, 15728, 15729, 15730, 15731, 15733, 15734, 15737, 15738, 15741, 15742, 15748, 15751, 15753,
15757, 15762, 15764, 15766, 15767, 15771, 15773, 15774, 15775, 15776, 15777, 15778, 15779, 15780, 15782, 15783, 15784, 15785, 15789, 15790, 15792,
15794, 15797, 15799, 15800, 15801, 15803, 15805, 15806, 15807, 15808, 15822, 15824, 15825, 15827, 15828, 15829, 15832, 15834, 15836, 15838, 15840,
15843, 15844, 15846, 15851, 15857, 15858, 15859, 15861, 15862, 15863, 15865, 15867, 15870, 15871, 15872, 15873, 15875, 15876, 15877, 15878, 15880,
15882, 15883, 15885, 15886, 15888, 15890, 15892, 15893, 15894, 15895, 15897, 15898, 15900, 15901, 15902, 15903, 15904, 15907, 15909, 15910, 15913,
15915, 15916, 15917, 15918, 15919, 15920, 15921, 15922, 15923, 15924, 15926, 15927, 15928, 15930, 15931, 15932, 15933, 15935, 15939, 15940, 15941,
15943, 15946, 15948, 15949, 15952, 15954, 15955, 15957, 15959, 15960, 15961, 15963, 15965, 15966, 15967, 15969, 15970, 15973, 15975, 15976, 15978,
15979, 15980, 15981, 15983, 15986, 15987, 15988, 15989, 15990, 15993, 15997, 15998, 15999, 16002, 16004, 16006, 16008, 16011, 16013, 16017, 16018,
16021, 16022, 16023, 16024, 16026, 16028, 16031, 16034, 16036, 16038, 16039, 16040, 16041, 16042, 16043, 16047, 16048, 16051, 16052, 16057, 16058,
16059, 16060, 16061, 16063, 16064, 16065, 16066, 16067, 16069, 16071, 16072, 16073, 16075, 16076, 16078, 16079, 16080, 16081, 16088, 16089, 16090,
16091, 16092, 16094, 16095, 16096, 16099, 16101, 16102, 16104, 16105, 16106, 16107, 16108, 16109, 16110, 16112, 16113, 16114, 16115, 16116, 16117,
16118, 16119, 16121, 16122, 16125, 16126, 16134, 16137, 16138, 16140, 16141, 16142, 16144, 16145, 16147, 16148, 16150, 16151, 16152, 16155, 16158,
16159, 16160, 16161, 16162, 16166, 16167, 16168, 16169, 16171, 16172, 16173, 16175, 16176, 16178, 16179, 16180, 16184, 16185, 16186, 16187, 16188,
16191, 16196, 16197, 16198, 16199, 16200, 16203, 16204, 16205, 16206, 16207, 16208, 16209, 16210, 16211, 16212, 16214, 16215, 16216, 16218, 16219,
16220, 16221, 16222, 16225, 16226, 16227, 16228, 16230, 16231, 16232, 16239, 16242, 16243, 16247, 16250, 16252, 16253, 16254, 16256, 16257, 16258,
16260, 16262, 16263, 16265, 16266, 16267, 16270, 16271, 16272, 16274, 16275, 16276, 16277, 16278, 16279, 16280, 16281, 16283, 16285, 16286, 16288,
16289, 16290, 16292, 16293, 16295, 16298, 16299, 16301, 16303, 16304, 16305, 16307, 16310, 16312, 16313, 16314, 16315, 16317, 16319, 16320, 16322,
16323, 16325, 16326, 16329, 16330, 16331, 16332, 16333, 16335, 16336, 16337, 16338, 16339, 16340, 16341, 16344, 16346, 16347, 16348, 16350, 16352,
16355, 16356, 16357, 16358, 16363, 16364, 16370, 16374, 16376, 16378, 16379, 16381, 16382, 16384, 16385, 16386, 16387, 16389, 16391, 16392, 16394,
16396, 16403, 16404, 16405, 16406, 16408, 16410, 16411, 16414, 16415, 16416, 16420, 16422, 16424, 16425, 16426, 16431, 16432, 16433, 16434, 16437,
16438, 16439, 16440, 16442, 16444, 16445, 16446, 16448, 16451, 16453, 16457, 16458, 16459, 16462, 16464, 16466, 16467, 16468, 16469, 16470, 16471,
16472, 16473, 16476, 16477, 16479, 16480, 16481, 16483, 16485, 16486, 16489, 16491, 16492, 16493, 16494, 16495, 16497, 16498, 16499, 16504, 16506,
16507, 16508, 16509, 16510, 16511, 16513, 16514, 16515, 16517, 16518, 16519, 16520, 16521, 16522, 16524, 16525, 16526, 16527, 16529, 16530, 16532,
16536, 16540, 16542, 16544, 16545, 16546, 16547, 16548, 16549, 16551, 16552, 16553, 16554, 16555, 16557, 16558, 16562, 16563, 16565, 16568, 16569,
16570, 16571, 16573, 16576, 16578, 16579, 16581, 16583, 16584, 16585, 16586, 16587, 16588, 16593, 16594, 16645, 16650, 16659, 16664, 16666, 16668,
16670, 16672, 16676, 16679, 16680, 16683, 16684, 16685, 16687, 16689, 16690, 16692, 16693, 16694, 16696, 16697, 16724, 16726, 16730, 16731, 16733,
16734, 16735, 16736, 16738, 16739, 16741, 16742, 16743, 16744, 16746, 16747, 16749, 16750, 16751, 16752, 16753, 16757, 16759, 16760, 16761, 16762,
16763, 16764, 16765, 16769, 16770, 16772, 16776, 16778, 16782, 16783, 16785, 16786, 16787, 16788, 16789, 16793, 16794, 16795, 16797, 16798, 16801,
16802, 16803, 16804, 16805, 16807, 16808, 16809, 16813, 16814, 16815, 16816, 16817, 16818, 16819, 16820, 16821, 16823, 16824, 16825, 16826, 16828,
16830, 16831, 16832, 16834, 16835, 16836, 16839, 16840, 16841, 16842, 16843, 16845, 16846, 16847, 16848, 16849, 16850, 16851, 16852, 16853, 16854,
16855, 16856, 16858, 16864, 16867, 16869, 16872, 16873, 16874, 16875, 16877, 16878, 16879, 16880, 16882, 16883, 16884, 16885, 16886, 16888, 16889,
16890, 16891, 16893, 16894, 16895, 16896, 16898, 16901, 16903, 16904, 16906, 16907, 16909, 16910, 16912, 16913, 16916, 16919, 16920, 16921, 16923,
16925, 16926, 16927, 16929, 16931, 16932, 16934, 16935, 16937, 16939, 16941, 16942, 16944, 16945, 16946, 16947, 16948, 16949, 16950, 16951, 16952,
16955, 16956, 16960, 16962, 16963, 16964, 16965, 16966, 16970, 16973, 16975, 16976, 16978, 16979, 16985, 16986, 16990, 16992, 16993, 16994, 16996,
17001, 17002, 17004, 17005, 17009, 17010, 17011, 17013, 17019, 17021, 17022, 17023, 17024, 17027, 17028, 17029, 17030, 17031, 17032, 17033, 17034,
17035, 17036, 17037, 17039, 17041, 17043, 17044, 17045, 17046, 17047, 17048, 17052, 17053, 17055, 17056, 17057, 17060, 17065, 17067, 17068, 17070,
17072, 17073, 17075, 17076, 17077, 17078, 17079, 17080, 17082, 17083, 17084, 17087, 17088, 17089, 17090, 17091, 17092, 17093, 17095, 17096, 17097,
17098, 17099, 17100, 17101, 17102, 17103, 17106, 17108, 17109, 17110, 17111, 17112, 17114, 17116, 17118, 17119, 17120, 17121, 17122, 17123, 17124,
17125, 17126, 17128, 17129, 17131, 17132, 17133, 17134, 17135, 17136, 17137, 17138, 17139, 17140, 17141, 17142, 17143, 17144, 17146, 17147, 17149,
17150, 17152, 17155, 17156, 17157, 17158, 17159, 17160, 17161, 17162, 17164, 17165, 17166, 17168, 17169, 17170, 17171, 17172, 17173, 17174, 17175,
17177, 17178, 17179, 17181, 17182, 17183, 17184, 17185, 17186, 17188, 17190, 17191, 17193, 17194, 17195, 17196, 17197, 17198, 17199, 17201, 17203,
17204, 17205, 17206, 17208, 17209, 17210, 17212, 17213, 17214, 17215, 17217, 17218, 17219, 17220, 17222, 17223, 17224, 17226, 17227, 17228, 17229,
17231, 17232, 17235, 17237, 17238, 17239, 17240, 17242, 17243, 17244, 17245, 17246, 17249, 17250, 17251, 17252, 17254, 17255, 17256, 17257, 17258,
17259, 17260, 17264, 17265, 17266, 17267, 17268, 17269, 17270, 17271, 17274, 17275, 17276, 17279, 17280, 17281, 17282, 17283, 17287, 17295, 17300,
17301, 17302, 17303, 17304, 17305, 17306, 17307, 17308, 17309, 17310, 17311, 17312, 17313, 17314, 17316, 17317, 17318, 17320, 17322, 17323, 17324,
17325, 17326, 17327, 17328, 17331, 17332, 17333, 17334, 17335, 17336, 17337, 17338, 17339, 17341, 17343, 17344, 17345, 17348, 17349, 17351, 17352,
17353, 17354, 17355, 17356, 17357, 17358, 17360, 17361, 17363, 17364, 17365, 17366, 17367, 17368, 17369, 17370, 17371, 17372, 17373, 17379, 17380,
17382, 17383, 17386, 17387, 17388, 17389, 17390, 17391, 17393, 17394, 17395, 17396, 17397, 17398, 17400, 17401, 17402, 17404, 17406, 17407, 17408,
17409, 17410, 17413, 17414, 17415, 17417, 17418, 17419, 17420, 17421, 17422, 17423, 17426, 17427, 17428, 17429, 17430, 17431, 17432, 17433, 17434,
17435, 17438, 17439, 17440, 17441, 17443, 17444, 17447, 17448, 17449, 17451, 17452, 17453, 17455, 17456, 17457, 17458, 17459, 17460, 17461, 17462,
17463, 17466, 17467, 17468, 17469, 17471, 17472, 17474, 17475, 17476, 17478, 17479, 17480, 17481, 17482, 17484, 17486, 17487, 17488, 17489, 17491,
17492, 17493, 17494, 17495, 17496, 17497, 17498, 17499, 17500, 17501, 17502, 17503, 17504, 17505, 17506, 17508, 17509, 17510, 17511, 17513, 17514,
17517, 17518, 17520, 17521, 17522, 17523, 17524, 17525, 17526, 17528, 17529, 17530, 17531, 17532, 17534, 17535, 17536, 17537, 17540, 17541, 17543,
17544, 17545, 17547, 17549, 17550, 17552, 17555, 17556, 17557, 17559, 17560, 17561, 17563, 17564, 17566, 17567, 17568, 17569, 17571, 17572, 17573,
17575, 17577, 17578, 17579, 17580, 17581, 17582, 17584, 17585, 17586, 17587, 17589, 17590, 17591, 17592, 17594, 17596, 17597, 17598, 17599, 17600,
17601, 17602, 17603, 17604, 17605, 17606, 17607, 17608, 17609, 17611, 17612, 17614, 17615, 17616, 17618, 17619, 17620, 17621, 17622, 17623, 17626,
17630, 17631, 17633, 17634, 17636, 17637, 17638, 17641, 17644, 17645, 17646, 17647, 17648, 17650, 17651, 17652, 17653, 17655, 17657, 17658, 17660,
17661, 17662, 17663, 17664, 17665, 17666, 17667, 17668, 17669, 17670, 17671, 17674, 17675, 17678, 17679, 17680, 17681, 17683, 17684, 17686, 17687,
17688, 17689, 17691, 17692, 17693, 17694, 17695, 17696, 17697, 17698, 17699, 17700, 17701, 17702, 17703, 17719, 17720, 17721, 17722, 17723, 17724,
17725, 17726, 17727, 17729, 17730, 17731, 17732, 17734, 17736, 17738, 17739, 17742, 17743, 17744, 17745, 17746, 17749, 17751, 17753, 17754, 17755,
17756, 17757, 17758, 17759, 17760, 17761, 17762, 17763, 17765, 17766, 17768, 17769, 17771, 17774, 17776, 17779, 17780, 17781, 17783, 17784, 17787,
17788, 17789, 17790, 17791, 17792, 17793, 17795, 17797, 17798, 17799, 17800, 17801, 17802, 17805, 17818, 17822, 17823, 17824, 17825, 17827, 17829,
17830, 17831, 17833, 17834, 17835, 17840, 17841, 17846, 17847, 17849, 17850, 17851, 17853, 17855, 17856, 17857, 17858, 17860, 17861, 17862, 17865,
17866, 17869, 17870, 17871, 17872, 17874, 17875, 17876, 17877, 17955, 17956, 17958, 17960, 17961, 17963, 17965, 17966, 17972, 17973, 17974, 17975,
17978, 17983, 17984, 17985, 17986, 17987, 17989, 17990, 17992, 17994, 17996, 17998, 18001, 18005, 18007, 18008, 18009, 18010, 18011, 18014, 18018,
18021, 18024, 18026, 18027, 18028, 18030, 18031, 18032, 18034, 18035, 18037, 18039, 18040, 18041, 18044, 18045, 18048, 18049, 18050, 18052, 18054,
18057, 18059, 18062, 18202, 18208, 18210, 18212, 18213, 18215, 18218, 18219, 18220, 18224, 18225, 18226, 18228, 18229, 18232, 18233, 18234, 18235,
18237, 18238, 18240, 18241, 18242, 18244, 18245, 18246, 18248, 18249, 18250, 18251, 18253, 18257, 18258, 18261, 18263, 18265, 18266, 18267, 18268,
18269, 18270, 18272, 18282, 18283, 18285, 18286, 18463, 18465, 18466, 18467, 18468, 18469, 18470, 18472, 18474, 18476, 18479, 18480, 18481, 18482,
18484, 18488, 18489, 18490, 18491, 18492, 18495, 18496, 18497, 18499, 18502, 18505, 18506, 18508, 18509, 18510, 18511, 18512, 18514, 18515, 18516,
18519, 18520, 18523, 18525, 18526, 18527, 18574, 18575, 18577, 18595, 18603, 18604, 18605, 18607, 18609, 18610, 18612, 18615, 18617, 18619, 18621,
18622, 18623, 18625, 18628, 18630, 18631, 18632, 18634, 18636, 18637, 18639, 18643, 18644, 18645, 18646, 18647, 18650, 18651, 18653, 18654, 18657,
18658, 18659, 18662, 18663, 18665, 18666, 18668, 18673, 18674, 18676, 18677, 18678, 18679, 18685, 18686, 18687, 18689, 18690, 18692, 18694, 18696,
18697, 18699, 18701, 18703, 18704, 18708, 18709, 18710, 18711, 18712, 18713, 18714, 18717, 18719, 18723, 18724, 18731, 18732, 18733, 18737, 18740,
18741, 18743, 18746, 18747, 18748, 18750, 18752, 18753, 18754, 18756, 18758, 18760, 18761, 18762, 18763, 18764, 18765, 18766, 18767, 18768, 18769,
18770, 18771, 18773, 18777, 18779, 18780, 18781, 18782, 18784, 18786, 18788, 18790, 18792, 18793, 18794, 18795, 18796, 18841, 18845, 18846, 18852,
18856, 18860, 18861, 18862, 18863, 18864, 18865, 18867, 18868, 18872, 18873, 18874, 18876, 18882, 18883, 18885, 18900, 18901, 18903, 18907, 18910,
18911, 18913, 18915, 18918, 18919, 18920, 18921, 18922, 18923, 18924, 18926, 18927, 18928, 18929, 18930, 18931, 18933, 18935, 18937, 18938, 18941,
       18944, 18947, 18948, 18949, 18950, 18951, 18952, 18953, 18954, 18955, 18957, 18958, 18959, 18960, // run 3
       8321, 8334, 8335, 8336, 8341, 8343, 8344, 8348, 8354, 8360, 8361, 8362, 8363, 8364, 8365, 8366, 8368, 8371, 8372, 8373, 8374, 8375, 8377,
8378, 8379, 8380, 8382, 8390, 8391, 8404, 8406, 8407, 8408, 8409, 8410, 8411, 8412, 8413, 8414, 8415, 8416, 8418, 8419, 8420, 8421, 8423, 8424, 8427,
8430, 8431, 8433, 8434, 8435, 8436, 8438, 8439, 8440, 8441, 8443, 8444, 8445, 8446, 8447, 8448, 8454, 8455, 8458, 8459, 8460, 8461, 8462, 8464, 8465,
8467, 8468, 8469, 8470, 8471, 8472, 8473, 8475, 8476, 8487, 8489, 8490, 8492, 8493, 8495, 8498, 8504, 8506, 8507, 8508, 8510, 8513, 8514, 8518, 8520,
8522, 8526, 8528, 8529, 8531, 8534, 8536, 8537, 8538, 8539, 8540, 8541, 8543, 8546, 8547, 8548, 8549, 8550, 8553, 8554, 8555, 8556, 8562, 8565, 8566,
8567, 8571, 8572, 8573, 8578, 8579, 8580, 8581, 8584, 8585, 8586, 8587, 8588, 8589, 8590, 8601, 8613, 8614, 8615, 8616, 8617, 8618, 8619, 8620, 8621,
8622, 8624, 8626, 8627, 8635, 8638, 8644, 8646, 8647, 8648, 8649, 8650, 8652, 8653, 8654, 8655, 8656, 8658, 8659, 8660, 8661, 8663, 8664, 8666, 8668,
8669, 8670, 8671, 8672, 8673, 8675, 8677, 8680, 8681, 8682, 8683, 8686, 8687, 8688, 8689, 8690, 8691, 8693, 8695, 8697, 8698, 8699, 8700, 8701, 8702,
8703, 8704, 8705, 8706, 8707, 8708, 8709, 8711, 8712, 8714, 8715, 8716, 8718, 8719, 8720, 8721, 8724, 8735, 8736, 8738, 8739, 8740, 8742, 8743, 8744,
8745, 8746, 8747, 8748, 8749, 8750, 8751, 8752, 8754, 8755, 8756, 8757, 8758, 8759, 8762, 8763, 8764, 8766, 8767, 8768, 8769, 8770, 8771, 8772, 8773,
8774, 8776, 8777, 8778, 8780, 8782, 8783, 8784, 8786, 8787, 8789, 8790, 8791, 8792, 8793, 8794, 8795, 8796, 8797, 8798, 8799, 8800, 8801, 8802, 8804,
8806, 8807, 8809, 8810, 8811, 8813, 8814, 8817, 8825, 8830, 8832, 8836, 8841, 8852, 8853, 8855, 8856, 8857, 8859, 8860, 8861, 8862, 8863, 8866, 8867,
8868, 8873, 8874, 8876, 8877, 8878, 8879, 8882, 8883, 8885, 8886, 8888, 8889, 8890, 8891, 8893, 8894, 8897, 8899, 8900, 8902, 8903, 8904, 8905, 8906,
8907, 8908, 8909, 8911, 8912, 8914, 8915, 8917, 8918, 8919, 8920, 8921, 8922, 8923, 8925, 8926, 8927, 8928, 8931, 8934, 8935, 8936, 8937, 8938, 8939,
8940, 8941, 8943, 8954, 8955, 8957, 8958, 8959, 8960, 8962, 8963, 8964, 8966, 8968, 8971, 8972, 8974, 8975, 8976, 8977, 8979, 8981, 8982, 8987, 8989,
8990, 8991, 8993, 8994, 8995, 8996, 8997, 8998, 8999, 9001, 9002, 9004, 9005, 9007, 9008, 9009, 9014, 9018, 9022, 9023, 9024, 9025, 9026, 9028, 9030,
9033, 9034, 9035, 9037, 9038, 9039, 9040, 9041, 9044, 9049, 9050, 9052, 9053, 9055, 9056, 9057, 9059, 9060, 9061, 9062, 9063, 9064, 9065, 9066, 9067,
9068, 9069, 9072, 9073, 9074, 9075, 9076, 9079, 9080, 9081, 9083, 9084, 9085, 9087, 9088, 9089, 9090, 9092, 9093, 9094, 9095, 9096, 9108, 9109, 9113,
9114, 9116, 9134, 9136, 9138, 9142, 9144, 9146, 9148, 9149, 9158, 9169, 9175, 9186, 9188, 9191, 9192, 9194, 9195, 9196, 9199, 9201, 9202, 9203, 9205,
9206, 9207, 9208, 9209, 9210, 9212, 9214, 9215, 9216, 9217, 9218, 9223, 9225, 9226, 9228, 9230, 9231, 9232, 9233, 9236, 9237, 9238, 9239, 9240, 9241,
9242, 9243, 9245, 9246, 9247, 9249, 9250, 9252, 9254, 9255, 9262, 9265, 9266, 9267, 9268, 9269, 9272, 9273, 9275, 9277, 9278, 9279, 9280, 9281, 9282,
9284, 9285, 9286, 9287, 9288, 9289, 9290, 9291, 9292, 9293, 9295, 9297, 9298, 9299, 9300, 9301, 9302, 9303, 9304, 9305, 9307, 9308, 9310, 9311, 9313,
9316, 9317, 9319, 9320, 9321, 9324, 9325, 9326, 9327, 9328, 9329, 9331, 9332, 9333, 9336, 9337, 9338, 9340, 9341, 9343, 9344, 9345, 9346, 9347, 9348,
9349, 9350, 9351, 9354, 9356, 9358, 9360, 9361, 9362, 9363, 9364, 9366, 9367, 9369, 9370, 9372, 9373, 9374, 9375, 9377, 9378, 9379, 9383, 9384, 9385,
9386, 9390, 9391, 9392, 9394, 9395, 9396, 9397, 9398, 9401, 9403, 9404, 9405, 9406, 9407, 9408, 9410, 9411, 9412, 9414, 9415, 9416, 9417, 9421, 9422,
9423, 9425, 9427, 9428, 9429, 9431, 9432, 9433, 9434, 9435, 9436, 9437, 9438, 9439, 9440, 9442, 9444, 9445, 9446, 9447, 9448, 9449, 9452, 9453, 9454,
9456, 9457, 9458, 9459, 9460, 9461, 9463, 9464, 9465, 9466, 9467, 9468, 9470, 9471, 9472, 9473, 9474, 9477, 9479, 9480, 9481, 9482, 9483, 9485, 9486,
9488, 9489, 9491, 9492, 9494, 9497, 9498, 9499, 9500, 9501, 9503, 9504, 9505, 9506, 9507, 9508, 9509, 9510, 9511, 9512, 9513, 9515, 9516, 9517, 9518,
9519, 9521, 9523, 9524, 9525, 9526, 9527, 9529, 9530, 9531, 9532, 9533, 9534, 9535, 9536, 9538, 9539, 9542, 9543, 9545, 9546, 9548, 9550, 9551, 9553,
9554, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9567, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9581,
9582, 9583, 9584, 9585, 9586, 9587, 9589, 9590, 9591, 9592, 9593, 9594, 9595, 9597, 9598, 9599, 9601, 9602, 9603, 9604, 9605, 9607, 9608, 9609, 9610,
9612, 9613, 9614, 9615, 9617, 9618, 9619, 9620, 9621, 9627, 9628, 9629, 9630, 9631, 9632, 9633, 9634, 9636, 9637, 9639, 9640, 9644, 9645, 9649, 9650,
9651, 9653, 9654, 9655, 9656, 9657, 9658, 9660, 9661, 9662, 9665, 9667, 9668, 9669, 9670, 9672, 9674, 9675, 9677, 9678, 9679, 9681, 9682, 9683, 9684,
9685, 9689, 9690, 9694, 9695, 9696, 9698, 9699, 9700, 9702, 9703, 9704, 9706, 9708, 9709, 9710, 9712, 9713, 9716, 9717, 9718, 9719, 9720, 9721, 9722,
9724, 9725, 9726, 9727, 9729, 9730, 9741, 9742, 9744, 9749, 9750, 9751, 9757, 9758, 9760, 9761, 9762, 9765, 9767, 10307, 10308, 10353, 10354, 10355,
10356, 10357, 10359, 10362, 10363, 10366, 10371, 10374, 10375, 10379, 10380, 10381, 10382, 10383, 10385, 10386, 10389, 10390, 10394, 10396, 10432,
10433, 10434, 10436, 10437, 10438, 10439, 10441, 10442, 10444, 10445, 10446, 10447, 10448, 10449, 10450, 10452, 10453, 10471, 10472, 10473, 10475,
10478, 10479, 10480, 10481, 10482, 10483, 10484, 10485, 10486, 10487, 10488, 10489, 10490, 10491, 10492, 10493, 10500, 10501, 10502, 10504, 10505,
10508, 10512, 10516, 10517, 10518, 10519, 10520, 10521, 10522, 10523, 10525, 10529, 10530, 10532, 10533, 10534, 10535, 10537, 10538, 10540, 10544,
10545, 10546, 10547, 10551, 10553, 10555, 10556, 10558, 10560, 10561, 10562, 10563, 10565, 10567, 10568, 10569, 10570, 10571, 10573, 10574, 10575,
10577, 10578, 10579, 10580, 10581, 10583, 10584, 10585, 10586, 10590, 10591, 10592, 10593, 10594, 10595, 10597, 10598, 10599, 10600, 10601, 10602,
10603, 10605, 10606, 10608, 10609, 10610, 10611, 10612, 10613, 10616, 10618, 10622, 10623, 10624, 10625, 10626, 10627, 10629, 10630, 10631, 10633,
10634, 10635, 10639, 10640, 10641, 10643, 10644, 10645, 10646, 10647, 10648, 10649, 10652, 10654, 10655, 10656, 10657, 10658, 10660, 10662, 10663,
10665, 10666, 10667, 10668, 10669, 10670, 10672, 10673, 10674, 10675, 10678, 10680, 10681, 10682, 10683, 10685, 10687, 10688, 10689, 10690, 10692,
10693, 10694, 10695, 10696, 10697, 10698, 10700, 10701, 10702, 10704, 10705, 10706, 10707, 10708, 10710, 10711, 10712, 10713, 10714, 10716, 10719,
10720, 10721, 10724, 10725, 10726, 10727, 10728, 10729, 10730, 10732, 10733, 10734, 10735, 10736, 10737, 10741, 10743, 10744, 10745, 10746, 10747,
10748, 10750, 10752, 10755, 10756, 10757, 10758, 10760, 10761, 10762, 10763, 10764, 10765, 10766, 10767, 10768, 10769, 10771, 10772, 10773, 10774,
10778, 10781, 10782, 10784, 10786, 10787, 10788, 10789, 10790, 10791, 10792, 10793, 10794, 10795, 10796, 10797, 10798, 10799, 10800, 10801, 10803,
10804, 10805, 10807, 10809, 10810, 10811, 10813, 10815, 10816, 10818, 10819, 10820, 10821, 10822, 10823, 10824, 10827, 10828, 10829, 10830, 10831,
10832, 10833, 10834, 10836, 10837, 10838, 10839, 10840, 10841, 10842, 10843, 10844, 10845, 10846, 10847, 10848, 10849, 10850, 10855, 10856, 10857,
10858, 10861, 10862, 10863, 10864, 10865, 10867, 10868, 10869, 10870, 10873, 10874, 10877, 10878, 10881, 10882, 10883, 10884, 10885, 10886, 10887,
10888, 10890, 10892, 10893, 10894, 10897, 10898, 10900, 10901, 10902, 10903, 10905, 10906, 10908, 10910, 10911, 10913, 10918, 10920, 10921, 10922,
10923, 10924, 10925, 10926, 10927, 10928, 10929, 10931, 10933, 10936, 10937, 10938, 10939, 10940, 10942, 10946, 10947, 10948, 10949, 10950, 10951,
10952, 10953, 10954, 10955, 10956, 10958, 10959, 10960, 10961, 10963, 10965, 10966, 10967, 10968, 10969, 10970, 10971, 10972, 10973, 10974, 10975,
10976, 10979, 10983, 10984, 10987, 10988, 10989, 10990, 10991, 10992, 10993, 10994, 10995, 10997, 10998, 11000, 11001, 11002, 11005, 11024, 11025,
11026, 11027, 11029, 11030, 11031, 11032, 11036, 11039, 11041, 11042, 11044, 11045, 11046, 11047, 11048, 11049, 11050, 11059, 11064, 11065, 11066,
11067, 11068, 11069, 11070, 11071, 11072, 11073, 11074, 11075, 11076, 11077, 11078, 11080, 11081, 11083, 11085, 11086, 11087, 11088, 11090, 11091,
11093, 11094, 11095, 11096, 11103, 11108, 11110, 11111, 11112, 11115, 11116, 11118, 11119, 11120, 11127, 11128, 11129, 11131, 11132, 11133, 11134,
11135, 11137, 11138, 11139, 11141, 11142, 11143, 11144, 11145, 11146, 11147, 11149, 11150, 11153, 11154, 11157, 11162, 11164, 11166, 11168, 11169,
11170, 11171, 11172, 11173, 11174, 11176, 11177, 11179, 11182, 11184, 11186, 11187, 11188, 11189, 11190, 11192, 11193, 11194, 11196, 11197, 11198,
11201, 11202, 11203, 11204, 11205, 11206, 11208, 11210, 11211, 11212, 11213, 11214, 11215, 11217, 11218, 11219, 11224, 11225, 11226, 11227, 11228,
11229, 11230, 11232, 11233, 11234, 11235, 11236, 11237, 11238, 11239, 11240, 11242, 11243, 11244, 11247, 11249, 11253, 11255, 11256, 11259, 11260,
11263, 11264, 11265, 11269, 11270, 11271, 11274, 11275, 11278, 11279, 11281, 11282, 11283, 11284, 11285, 11286, 11288, 11290, 11291, 11292, 11293,
11294, 11296, 11297, 11492, 11493, 11494, 11495, 11500, 11501, 11502, 11503, 11504, 11505, 11506, 11507, 11508, 11509, 11510, 11512, 11514, 11515,
11518, 11519, 11520, 11521, 11524, 11526, 11527, 11528, 11529, 11531, 11532, 11535, 11537, 11538, 11539, 11540, 11543, 11544, 11545, 11546, 11550,
11551, 11553, 11554, 11557, 11558, 11559, 11561, 11564, 11565, 11568, 11570, 11571, 11572, 11574, 11575, 11576, 11577, 11578, 11579, 11581, 11582,
11583, 11584, 11586, 11587, 11589, 11591, 11593, 11598, 11599, 11601, 11603, 11604, 11605, 11606, 11608, 11609, 11610, 11611, 11613, 11614, 11617,
11618, 11619, 11621, 11622, 11623, 11624, 11625, 11626, 11628, 11629, 11630, 11631, 11632, 11634, 11636, 11637, 11638, 11639, 11640, 11644, 11646,
11647, 11648, 11649, 11650, 11652, 11653, 11655, 11656, 11657, 11658, 11659, 11660, 11664, 11665, 11666, 11667, 11668, 11672, 11673, 11674, 11675,
11677, 11678, 11679, 11680, 11681, 11682, 11684, 11685, 11686, 11687, 11691, 11692, 11693, 11695, 11696, 11698, 11700, 11702, 11707, 11709, 11710,
11712, 11713, 11714, 11715, 11716, 11719, 11720, 11721, 11723, 11724, 11726, 11727, 11728, 11729, 11730, 11733, 11737, 11738, 11739, 11740, 11741,
11742, 11744, 11745, 11746, 11747, 11749, 11751, 11753, 11754, 11755, 11756, 11758, 11759, 11761, 11762, 11763, 11765, 11766, 11767, 11769, 11771,
11772, 11774, 11775, 11776, 11777, 11778, 11779, 11780, 11781, 11782, 11783, 11784, 11785, 11786, 11787, 11791, 11792, 11793, 11794, 11795, 11796,
11797, 11799, 11800, 11801, 11802, 11803, 11804, 11807, 11809, 11811, 11813, 11814, 11815, 11816, 11817, 11818, 11819, 11820, 11821, 11822, 11824,
11828, 11829, 11830, 11831, 11832, 11833, 11836, 11840, 11841, 11842, 11844, 11845, 11846, 11847, 11848, 11849, 11851, 11852, 11853, 11854, 11857,
11858, 11861, 11865, 11866, 11867, 11868, 11869, 11870, 11872, 11873, 11874, 11875, 11876, 11878, 11879, 11880, 11881, 11882, 11884, 11885, 11886,
11887, 11888, 11889, 11891, 11892, 11893, 11894, 11895, 11896, 11897, 11898, 11900, 11901, 11904, 11905, 11906, 11907, 11909, 11910, 11911, 11912,
11913, 11914, 11915, 11917, 11919, 11920, 11921, 11922, 11923, 11924, 11925, 11926, 11927, 11928, 11929, 11930, 11931, 11933, 11934, 11935, 11936,
11937, 11938, 11939, 11940, 11943, 11945, 11946, 11947, 11952, 11953, 11956, 11957, 11958, 11959, 11960, 11961, 11963, 11964, 11965, 11969, 11970,
11971, 11972, 11973, 11974, 11976, 11977, 11979, 11981, 11984, 11988, 11989, 11990, 11991, 11993, 11994, 11995, 11996, 11998, 12000, 12001, 12002,
12004, 12005, 12006, 12008, 12009, 12010, 12011, 12012, 12013, 12015, 12016, 12017, 12020, 12021, 12023, 12024, 12025, 12026, 12027, 12028, 12029,
12030, 12031, 12032, 12034, 12036, 12039, 12040, 12041, 12042, 12043, 12044, 12045, 12046, 12048, 12052, 12053, 12054, 12056, 12057, 12060, 12061,
12062, 12063, 12066, 12067, 12068, 12069, 12070, 12071, 12072, 12073, 12075, 12076, 12077, 12079, 12080, 12083, 12084, 12086, 12089, 12090, 12091,
12093, 12094, 12095, 12097, 12098, 12100, 12102, 12103, 12104, 12106, 12107, 12108, 12109, 12110, 12111, 12116, 12117, 12118, 12120, 12121, 12122,
12125, 12127, 12130, 12131, 12132, 12133, 12135, 12136, 12137, 12139, 12140, 12142, 12143, 12145, 12146, 12331, 12364, 12365, 12366, 12367, 12368,
12369, 12374, 12377, 12378, 12379, 12380, 12381, 12382, 12383, 12384, 12389, 12392, 12401, 12402, 12403, 12404, 12406, 12418, 12419, 12420, 12422,
12425, 12426, 12429, 12430, 12431, 12432, 12433, 12434, 12436, 12438, 12441, 12442, 12444, 12446, 12447, 12448, 12449, 12450, 12451, 12453, 12454,
12456, 12459, 12460, 12461, 12462, 12464, 12466, 12469, 12479, 12480, 12481, 12482, 12485, 12486, 12492, 12493, 12495, 12496, 12497, 12498, 12499,
12502, 12503, 12504, 12505, 12506, 12507, 12508, 12513, 12514, 12515, 12516, 12517, 12518, 12520, 12521, 12522, 12526, 12527, 12528, 12529, 12530,
12533, 12534, 12535, 12537, 12538, 12539, 12540, 12541, 12542, 12543, 12544, 12545, 12549, 12550, 12551, 12552, 12553, 12554, 12555, 12556, 12557,
12558, 12560, 12561, 12565, 12566, 13452, 13453, 13454, 13455, 13457, 13460, 13461, 13462, 13463, 13464, 13465, 13466, 13467, 13468, 13469, 13470,
13471, 13472, 13473, 13474, 13475, 13476, 13477, 13478, 13479, 13480, 13481, 13483, 13484, 13487, 13488, 13491, 13492, 13503, 13504, 13505, 13506,
13507, 13509, 13510, 13511, 13517, 13518, 13519, 13520, 13521, 13522, 13523, 13524, 13525, 13526, 13527, 13528, 13529, 13530, 13531, 13532, 13533,
13535, 13536, 13537, 13538, 13539, 13540, 13542, 13543, 13544, 13545, 13546, 13547, 13548, 13549, 13550, 13552, 13553, 13554, 13555, 13557, 13558,
13559, 13561, 13562, 13563, 13564, 13565, 13567, 13568, 13569, 13570, 13571, 13572, 13573, 13574, 13579, 13580, 13582, 13583, 13584, 13586, 13587,
13588, 13591, 13592, 13593, 13612, 13614, 13616, 13617, 13618, 13619, 13620, 13621, 13623, 13624, 13625, 13626, 13627, 13629, 13630, 13631, 13632,
13633, 13634, 13635, 13636, 13637, 13638, 13639, 13641, 13642, 13643, 13644, 13645, 13647, 13648, 13649, 13650, 13651, 13652, 13653, 13654, 13655,
13656, 13658, 13659, 13660, 13661, 13662, 13664, 13665, 13667, 13668, 13669, 13670, 13671, 13672, 13674, 13675, 13676, 13678, 13680, 13681, 13683,
       13684, 13685, 13687, 13688, 13689, 13690, 13691, 13692, 13693, 13695, 13696 // run 2
       };

  std::set<int> good_runlist_set(good_run_list_vec.begin(), good_run_list_vec.end());

  std::vector<int> low_lifetime_runs{5262, 5263, 5264, 5265, 5266, 5267, 5269, 5270, 5271, 5272, 5273, 5274, 5275, 5277, 5278, 5279, 5280, 5281,
5315, 5320, 5321, 5632, 5634, 5635, 5636, 5637, 5638, 5639, 5643, 5646, 5647, 5650, 5652, 5653, 5654, 5656, 5657, 5659, 5661, 5680, 5684, 5685, 5686,
5691, 5693, 5694, 5695, 5697, 5698, 5699, 5702, 5703, 5704, 5705, 5706, 5707, 5708, 5709, 5710, 5712, 5713, 5715, 5718, 5719, 5720, 5721, 5722, 5723,
5724, 5725, 5726, 5727, 5728, 5729, 5730, 5731, 5733, 5735, 5739, 5740, 5741, 5743, 5745, 5746, 5748, 5749, 5752, 5753, 5754, 5755, 5756, 5758, 5760,
      5761, 5762, 5765, 5766, 5767, // run 1 low electron lifetime runs
      14643, 14644, 14645, 14646, 14647, 14648, 14649, 14650, 14651, 14652, 14653, 14654, 14655, 14656, 14657, 14658, 14659, 14660, 14661, 14662, 14663, 14664, 14665, 14666, 14667, 14668, 14669, 14670, 14671, 14672, 14673, 14674, 14675, 14676, 14677, 14678, 14679, 14680, 14681, 14682, 14683, 14684, 14685, 14686, 14687, 14688, 14689, 14690, 14691, 14692, 14693, 14694, 14695, 14696, 14697, 14698, 14699, 14700, 14701, 14702, 14703, 14704, 14705, 14706, 14707, 14708, 14709, 14710, 14711, 14712, 14713, 14714, 14715, 14716, 14717, 14718, 14719, 14720, 14721, 14722, 14723, 14724, 14725, 14726, 14727, 14728, 14729, 14730, 14731, 14732, 14733, 14734, 14735, 14736, 16724, 16725, 16726, 16727, 16728, 16729, 16730, 16731, 16732, 16733, 16734, 16735, 16736, 16737, 16738, 16739, 16740, 16741, 16742, 16743, 16744, 16745, 16746, 16747, 16748, 16749, 16750, 16751, 16752, 16753, 16754, 16755, 16756, 16757, 16758, 16759, 16760, 16761, 16762, 16763, 16764, 16765, 16766, 16767, 16768, 16769, 16770, 16771, 16772, 16773, 16774, 16775, 16776, 16777, 16778, 16779, 16780, 16781, 16782, 16783 // run 3 low electron lifetime runs
      };
  std::set<int> low_lifetime_set(low_lifetime_runs.begin(), low_lifetime_runs.end());
  
  
  
  //  std::cout << T_eval->GetEntries() << std::endl;
  TFile *file2 = new TFile(out_file,"RECREATE");
  file2->mkdir("wcpselection");
  file2->cd("wcpselection");
  TTree *t4 = new TTree("T_BDTvars","T_BDTvars");
  TTree *t1 = new TTree("T_eval","T_eval");
  TTree *t2 = new TTree("T_pot","T_pot");
  TTree *t3 = new TTree("T_PFeval", "T_PFeval");
  TTree *t5 = new TTree("T_KINEvars", "T_KINEvars");
  //TTree *t1 = T_eval->CloneTree(-1,"");
  //TTree *t2 = T_pot->CloneTree(-1,"");
  //TTree *t3 = T_PFeval->CloneTree(-1,"");
  //  TTree *t5 = T_KINEvars->CloneTree(-1,"");
  
  
  EvalInfo eval;
  eval.file_type = new std::string();
  
  POTInfo pot;
  TaggerInfo tagger;
  PFevalInfo pfeval;
  KineInfo kine;

  kine.kine_energy_particle = new std::vector<float>;
  kine.kine_energy_info = new std::vector<int>;
  kine.kine_particle_type = new std::vector<int>;
  kine.kine_energy_included = new std::vector<int>;
  
  
  tagger.pio_2_v_dis2 = new std::vector<float>;
  tagger.pio_2_v_angle2 = new std::vector<float>;
  tagger.pio_2_v_acc_length = new std::vector<float>;
  tagger.pio_2_v_flag = new std::vector<float>;
  tagger.sig_1_v_angle = new std::vector<float>;
  tagger.sig_1_v_flag_single_shower = new std::vector<float>;
  tagger.sig_1_v_energy = new std::vector<float>;
  tagger.sig_1_v_energy_1 = new std::vector<float>;
  tagger.sig_1_v_flag = new std::vector<float>;
  tagger.sig_2_v_energy = new std::vector<float>;
  tagger.sig_2_v_shower_angle = new std::vector<float>;
  tagger.sig_2_v_flag_single_shower = new std::vector<float>;
  tagger.sig_2_v_medium_dQ_dx = new std::vector<float>;
  tagger.sig_2_v_start_dQ_dx = new std::vector<float>;
  tagger.sig_2_v_flag = new std::vector<float>;
  tagger.stw_2_v_medium_dQ_dx = new std::vector<float>;
  tagger.stw_2_v_energy = new std::vector<float>;
  tagger.stw_2_v_angle = new std::vector<float>;
  tagger.stw_2_v_dir_length = new std::vector<float>;
  tagger.stw_2_v_max_dQ_dx = new std::vector<float>;
  tagger.stw_2_v_flag = new std::vector<float>;
  tagger.stw_3_v_angle = new std::vector<float>;
  tagger.stw_3_v_dir_length = new std::vector<float>;
  tagger.stw_3_v_energy = new std::vector<float>;
  tagger.stw_3_v_medium_dQ_dx = new std::vector<float>;
  tagger.stw_3_v_flag = new std::vector<float>;
  tagger.stw_4_v_angle = new std::vector<float>;
  tagger.stw_4_v_dis = new std::vector<float>;
  tagger.stw_4_v_energy = new std::vector<float>;
  tagger.stw_4_v_flag = new std::vector<float>;
  tagger.br3_3_v_energy = new std::vector<float>;
  tagger.br3_3_v_angle = new std::vector<float>;
  tagger.br3_3_v_dir_length = new std::vector<float>;
  tagger.br3_3_v_length = new std::vector<float>;
  tagger.br3_3_v_flag = new std::vector<float>;
  tagger.br3_5_v_dir_length = new std::vector<float>;
  tagger.br3_5_v_total_length = new std::vector<float>;
  tagger.br3_5_v_flag_avoid_muon_check = new std::vector<float>;
  tagger.br3_5_v_n_seg = new std::vector<float>;
  tagger.br3_5_v_angle = new std::vector<float>;
  tagger.br3_5_v_sg_length = new std::vector<float>;
  tagger.br3_5_v_energy = new std::vector<float>;
  tagger.br3_5_v_n_main_segs = new std::vector<float>;
  tagger.br3_5_v_n_segs = new std::vector<float>;
  tagger.br3_5_v_shower_main_length = new std::vector<float>;
  tagger.br3_5_v_shower_total_length = new std::vector<float>;
  tagger.br3_5_v_flag = new std::vector<float>;
  tagger.br3_6_v_angle = new std::vector<float>;
  tagger.br3_6_v_angle1 = new std::vector<float>;
  tagger.br3_6_v_flag_shower_trajectory = new std::vector<float>;
  tagger.br3_6_v_direct_length = new std::vector<float>;
  tagger.br3_6_v_length = new std::vector<float>;
  tagger.br3_6_v_n_other_vtx_segs = new std::vector<float>;
  tagger.br3_6_v_energy = new std::vector<float>;
  tagger.br3_6_v_flag = new std::vector<float>;
  tagger.tro_1_v_particle_type = new std::vector<float>;
  tagger.tro_1_v_flag_dir_weak = new std::vector<float>;
  tagger.tro_1_v_min_dis = new std::vector<float>;
  tagger.tro_1_v_sg1_length = new std::vector<float>;
  tagger.tro_1_v_shower_main_length = new std::vector<float>;
  tagger.tro_1_v_max_n_vtx_segs = new std::vector<float>;
  tagger.tro_1_v_tmp_length = new std::vector<float>;
  tagger.tro_1_v_medium_dQ_dx = new std::vector<float>;
  tagger.tro_1_v_dQ_dx_cut = new std::vector<float>;
  tagger.tro_1_v_flag_shower_topology = new std::vector<float>;
  tagger.tro_1_v_flag = new std::vector<float>;
  tagger.tro_2_v_energy = new std::vector<float>;
  tagger.tro_2_v_stem_length = new std::vector<float>;
  tagger.tro_2_v_iso_angle = new std::vector<float>;
  tagger.tro_2_v_max_length = new std::vector<float>;
  tagger.tro_2_v_angle = new std::vector<float>;
  tagger.tro_2_v_flag = new std::vector<float>;
  tagger.tro_4_v_dir2_mag = new std::vector<float>;
  tagger.tro_4_v_angle = new std::vector<float>;
  tagger.tro_4_v_angle1 = new std::vector<float>;
  tagger.tro_4_v_angle2 = new std::vector<float>;
  tagger.tro_4_v_length = new std::vector<float>;
  tagger.tro_4_v_length1 = new std::vector<float>;
  tagger.tro_4_v_medium_dQ_dx = new std::vector<float>;
  tagger.tro_4_v_end_dQ_dx = new std::vector<float>;
  tagger.tro_4_v_energy = new std::vector<float>;
  tagger.tro_4_v_shower_main_length = new std::vector<float>;
  tagger.tro_4_v_flag_shower_trajectory = new std::vector<float>;
  tagger.tro_4_v_flag = new std::vector<float>;
  tagger.tro_5_v_max_angle = new std::vector<float>;
  tagger.tro_5_v_min_angle = new std::vector<float>;
  tagger.tro_5_v_max_length = new std::vector<float>;
  tagger.tro_5_v_iso_angle = new std::vector<float>;
  tagger.tro_5_v_n_vtx_segs = new std::vector<float>;
  tagger.tro_5_v_min_count = new std::vector<float>;
  tagger.tro_5_v_max_count = new std::vector<float>;
  tagger.tro_5_v_energy = new std::vector<float>;
  tagger.tro_5_v_flag = new std::vector<float>;
  tagger.lol_1_v_energy = new std::vector<float>;
  tagger.lol_1_v_vtx_n_segs = new std::vector<float>;
  tagger.lol_1_v_nseg = new std::vector<float>;
  tagger.lol_1_v_angle = new std::vector<float>;
  tagger.lol_1_v_flag = new std::vector<float>;
  tagger.lol_2_v_length = new std::vector<float>;
  tagger.lol_2_v_angle = new std::vector<float>;
  tagger.lol_2_v_type = new std::vector<float>;
  tagger.lol_2_v_vtx_n_segs = new std::vector<float>;
  tagger.lol_2_v_energy = new std::vector<float>;
  tagger.lol_2_v_shower_main_length = new std::vector<float>;
  tagger.lol_2_v_flag_dir_weak = new std::vector<float>;
  tagger.lol_2_v_flag = new std::vector<float>;
  tagger.cosmict_flag_10 = new std::vector<float>;
  tagger.cosmict_10_flag_inside = new std::vector<float>;
  tagger.cosmict_10_vtx_z = new std::vector<float>;
  tagger.cosmict_10_flag_shower = new std::vector<float>;
  tagger.cosmict_10_flag_dir_weak = new std::vector<float>;
  tagger.cosmict_10_angle_beam = new std::vector<float>;
  tagger.cosmict_10_length = new std::vector<float>;
  tagger.numu_cc_flag_1 = new std::vector<float>;
  tagger.numu_cc_1_particle_type = new std::vector<float>;
  tagger.numu_cc_1_length = new std::vector<float>;
  tagger.numu_cc_1_medium_dQ_dx = new std::vector<float>;
  tagger.numu_cc_1_dQ_dx_cut = new std::vector<float>;
  tagger.numu_cc_1_direct_length = new std::vector<float>;
  tagger.numu_cc_1_n_daughter_tracks = new std::vector<float>;
  tagger.numu_cc_1_n_daughter_all = new std::vector<float>;
  tagger.numu_cc_flag_2 = new std::vector<float>;
  tagger.numu_cc_2_length = new std::vector<float>;
  tagger.numu_cc_2_total_length = new std::vector<float>;
  tagger.numu_cc_2_n_daughter_tracks = new std::vector<float>;
  tagger.numu_cc_2_n_daughter_all = new std::vector<float>;
  tagger.pio_2_v_dis2 = new std::vector<float>;
  tagger.pio_2_v_angle2 = new std::vector<float>;
  tagger.pio_2_v_acc_length = new std::vector<float>;
  tagger.pio_2_v_flag = new std::vector<float>;
  tagger.sig_1_v_angle = new std::vector<float>;
  tagger.sig_1_v_flag_single_shower = new std::vector<float>;
  tagger.sig_1_v_energy = new std::vector<float>;
  tagger.sig_1_v_energy_1 = new std::vector<float>;
  tagger.sig_1_v_flag = new std::vector<float>;
  tagger.sig_2_v_energy = new std::vector<float>;
  tagger.sig_2_v_shower_angle = new std::vector<float>;
  tagger.sig_2_v_flag_single_shower = new std::vector<float>;
  tagger.sig_2_v_medium_dQ_dx = new std::vector<float>;
  tagger.sig_2_v_start_dQ_dx = new std::vector<float>;
  tagger.sig_2_v_flag = new std::vector<float>;
  tagger.stw_2_v_medium_dQ_dx = new std::vector<float>;
  tagger.stw_2_v_energy = new std::vector<float>;
  tagger.stw_2_v_angle = new std::vector<float>;
  tagger.stw_2_v_dir_length = new std::vector<float>;
  tagger.stw_2_v_max_dQ_dx = new std::vector<float>;
  tagger.stw_2_v_flag = new std::vector<float>;
  tagger.stw_3_v_angle = new std::vector<float>;
  tagger.stw_3_v_dir_length = new std::vector<float>;
  tagger.stw_3_v_energy = new std::vector<float>;
  tagger.stw_3_v_medium_dQ_dx = new std::vector<float>;
  tagger.stw_3_v_flag = new std::vector<float>;
  tagger.stw_4_v_angle = new std::vector<float>;
  tagger.stw_4_v_dis = new std::vector<float>;
  tagger.stw_4_v_energy = new std::vector<float>;
  tagger.stw_4_v_flag = new std::vector<float>;
  tagger.br3_3_v_energy = new std::vector<float>;
  tagger.br3_3_v_angle = new std::vector<float>;
  tagger.br3_3_v_dir_length = new std::vector<float>;
  tagger.br3_3_v_length = new std::vector<float>;
  tagger.br3_3_v_flag = new std::vector<float>;
  tagger.br3_5_v_dir_length = new std::vector<float>;
  tagger.br3_5_v_total_length = new std::vector<float>;
  tagger.br3_5_v_flag_avoid_muon_check = new std::vector<float>;
  tagger.br3_5_v_n_seg = new std::vector<float>;
  tagger.br3_5_v_angle = new std::vector<float>;
  tagger.br3_5_v_sg_length = new std::vector<float>;
  tagger.br3_5_v_energy = new std::vector<float>;
  tagger.br3_5_v_n_main_segs = new std::vector<float>;
  tagger.br3_5_v_n_segs = new std::vector<float>;
  tagger.br3_5_v_shower_main_length = new std::vector<float>;
  tagger.br3_5_v_shower_total_length = new std::vector<float>;
  tagger.br3_5_v_flag = new std::vector<float>;
  tagger.br3_6_v_angle = new std::vector<float>;
  tagger.br3_6_v_angle1 = new std::vector<float>;
  tagger.br3_6_v_flag_shower_trajectory = new std::vector<float>;
  tagger.br3_6_v_direct_length = new std::vector<float>;
  tagger.br3_6_v_length = new std::vector<float>;
  tagger.br3_6_v_n_other_vtx_segs = new std::vector<float>;
  tagger.br3_6_v_energy = new std::vector<float>;
  tagger.br3_6_v_flag = new std::vector<float>;
  tagger.tro_1_v_particle_type = new std::vector<float>;
  tagger.tro_1_v_flag_dir_weak = new std::vector<float>;
  tagger.tro_1_v_min_dis = new std::vector<float>;
  tagger.tro_1_v_sg1_length = new std::vector<float>;
  tagger.tro_1_v_shower_main_length = new std::vector<float>;
  tagger.tro_1_v_max_n_vtx_segs = new std::vector<float>;
  tagger.tro_1_v_tmp_length = new std::vector<float>;
  tagger.tro_1_v_medium_dQ_dx = new std::vector<float>;
  tagger.tro_1_v_dQ_dx_cut = new std::vector<float>;
  tagger.tro_1_v_flag_shower_topology = new std::vector<float>;
  tagger.tro_1_v_flag = new std::vector<float>;
  tagger.tro_2_v_energy = new std::vector<float>;
  tagger.tro_2_v_stem_length = new std::vector<float>;
  tagger.tro_2_v_iso_angle = new std::vector<float>;
  tagger.tro_2_v_max_length = new std::vector<float>;
  tagger.tro_2_v_angle = new std::vector<float>;
  tagger.tro_2_v_flag = new std::vector<float>;
  tagger.tro_4_v_dir2_mag = new std::vector<float>;
  tagger.tro_4_v_angle = new std::vector<float>;
  tagger.tro_4_v_angle1 = new std::vector<float>;
  tagger.tro_4_v_angle2 = new std::vector<float>;
  tagger.tro_4_v_length = new std::vector<float>;
  tagger.tro_4_v_length1 = new std::vector<float>;
  tagger.tro_4_v_medium_dQ_dx = new std::vector<float>;
  tagger.tro_4_v_end_dQ_dx = new std::vector<float>;
  tagger.tro_4_v_energy = new std::vector<float>;
  tagger.tro_4_v_shower_main_length = new std::vector<float>;
  tagger.tro_4_v_flag_shower_trajectory = new std::vector<float>;
  tagger.tro_4_v_flag = new std::vector<float>;
  tagger.tro_5_v_max_angle = new std::vector<float>;
  tagger.tro_5_v_min_angle = new std::vector<float>;
  tagger.tro_5_v_max_length = new std::vector<float>;
  tagger.tro_5_v_iso_angle = new std::vector<float>;
  tagger.tro_5_v_n_vtx_segs = new std::vector<float>;
  tagger.tro_5_v_min_count = new std::vector<float>;
  tagger.tro_5_v_max_count = new std::vector<float>;
  tagger.tro_5_v_energy = new std::vector<float>;
  tagger.tro_5_v_flag = new std::vector<float>;
  tagger.lol_1_v_energy = new std::vector<float>;
  tagger.lol_1_v_vtx_n_segs = new std::vector<float>;
  tagger.lol_1_v_nseg = new std::vector<float>;
  tagger.lol_1_v_angle = new std::vector<float>;
  tagger.lol_1_v_flag = new std::vector<float>;
  tagger.lol_2_v_length = new std::vector<float>;
  tagger.lol_2_v_angle = new std::vector<float>;
  tagger.lol_2_v_type = new std::vector<float>;
  tagger.lol_2_v_vtx_n_segs = new std::vector<float>;
  tagger.lol_2_v_energy = new std::vector<float>;
  tagger.lol_2_v_shower_main_length = new std::vector<float>;
  tagger.lol_2_v_flag_dir_weak = new std::vector<float>;
  tagger.lol_2_v_flag = new std::vector<float>;
  tagger.cosmict_flag_10 = new std::vector<float>;
  tagger.cosmict_10_flag_inside = new std::vector<float>;
  tagger.cosmict_10_vtx_z = new std::vector<float>;
  tagger.cosmict_10_flag_shower = new std::vector<float>;
  tagger.cosmict_10_flag_dir_weak = new std::vector<float>;
  tagger.cosmict_10_angle_beam = new std::vector<float>;
  tagger.cosmict_10_length = new std::vector<float>;
  tagger.numu_cc_flag_1 = new std::vector<float>;
  tagger.numu_cc_1_particle_type = new std::vector<float>;
  tagger.numu_cc_1_length = new std::vector<float>;
  tagger.numu_cc_1_medium_dQ_dx = new std::vector<float>;
  tagger.numu_cc_1_dQ_dx_cut = new std::vector<float>;
  tagger.numu_cc_1_direct_length = new std::vector<float>;
  tagger.numu_cc_1_n_daughter_tracks = new std::vector<float>;
  tagger.numu_cc_1_n_daughter_all = new std::vector<float>;
  tagger.numu_cc_flag_2 = new std::vector<float>;
  tagger.numu_cc_2_length = new std::vector<float>;
  tagger.numu_cc_2_total_length = new std::vector<float>;
  tagger.numu_cc_2_n_daughter_tracks = new std::vector<float>;
  tagger.numu_cc_2_n_daughter_all = new std::vector<float>;

  set_tree_address(T_BDTvars, tagger,2 );
  tagger.flag_nc_gamma_bdt = true;
  put_tree_address(t4, tagger,2);

  if (flag_data){
    set_tree_address(T_eval, eval,2);
    put_tree_address(t1, eval,2);

    set_tree_address(T_PFeval, pfeval,2);
    put_tree_address(t3, pfeval,2);
  }else{
    set_tree_address(T_eval, eval);
    put_tree_address(t1, eval);

    set_tree_address(T_PFeval, pfeval);
    put_tree_address(t3, pfeval);
  }

  set_tree_address(T_pot, pot);
  put_tree_address(t2, pot);



  set_tree_address(T_KINEvars, kine);
  put_tree_address(t5, kine);
  
  
  //  bool match_isFC;
  //  T_eval->SetBranchAddress("match_isFC",&match_isFC);
  //  T_KINEvars->SetBranchAddress("kine_reco_Enu",&tagger.kine_reco_Enu);


  // BDTs ...
   // BDT stuff 
  TMVA::Reader reader_br3_3;
  float br3_3_v_energy;
  float br3_3_v_angle;
  float br3_3_v_dir_length;
  float br3_3_v_length;
  reader_br3_3.AddVariable("br3_3_v_energy",&br3_3_v_energy);
  reader_br3_3.AddVariable("br3_3_v_angle",&br3_3_v_angle);
  reader_br3_3.AddVariable("br3_3_v_dir_length",&br3_3_v_dir_length);
  reader_br3_3.AddVariable("br3_3_v_length",&br3_3_v_length);
  reader_br3_3.BookMVA( "MyBDT", "weights/br3_3_BDT.weights.xml");

  TMVA::Reader reader_br3_5;
  float br3_5_v_dir_length;
  float br3_5_v_total_length;
  float br3_5_v_flag_avoid_muon_check;
  float br3_5_v_n_seg;
  float br3_5_v_angle;
  float br3_5_v_sg_length;
  float br3_5_v_energy;
  float br3_5_v_n_main_segs;
  float br3_5_v_n_segs;
  float br3_5_v_shower_main_length;
  float br3_5_v_shower_total_length;
  reader_br3_5.AddVariable("br3_5_v_dir_length",&br3_5_v_dir_length);
  reader_br3_5.AddVariable("br3_5_v_total_length",&br3_5_v_total_length);
  reader_br3_5.AddVariable("br3_5_v_flag_avoid_muon_check",&br3_5_v_flag_avoid_muon_check);
  reader_br3_5.AddVariable("br3_5_v_n_seg",&br3_5_v_n_seg);
  reader_br3_5.AddVariable("br3_5_v_angle",&br3_5_v_angle);
  reader_br3_5.AddVariable("br3_5_v_sg_length",&br3_5_v_sg_length);
  reader_br3_5.AddVariable("br3_5_v_energy",&br3_5_v_energy);
  reader_br3_5.AddVariable("br3_5_v_n_segs",&br3_5_v_n_segs);
  reader_br3_5.AddVariable("br3_5_v_shower_main_length",&br3_5_v_shower_main_length);
  reader_br3_5.AddVariable("br3_5_v_shower_total_length",&br3_5_v_shower_total_length);
  reader_br3_5.BookMVA( "MyBDT", "weights/br3_5_BDT.weights.xml");

  TMVA::Reader reader_br3_6;
  float br3_6_v_angle;
  float br3_6_v_angle1;
  float br3_6_v_flag_shower_trajectory;
  float br3_6_v_direct_length;
  float br3_6_v_length;
  float br3_6_v_n_other_vtx_segs;
  float br3_6_v_energy;
  reader_br3_6.AddVariable("br3_6_v_angle",&br3_6_v_angle);
  reader_br3_6.AddVariable("br3_6_v_angle1",&br3_6_v_angle1);
  reader_br3_6.AddVariable("br3_6_v_flag_shower_trajectory",&br3_6_v_flag_shower_trajectory);
  reader_br3_6.AddVariable("br3_6_v_direct_length",&br3_6_v_direct_length);
  reader_br3_6.AddVariable("br3_6_v_length",&br3_6_v_length);
  reader_br3_6.AddVariable("br3_6_v_n_other_vtx_segs",&br3_6_v_n_other_vtx_segs);
  reader_br3_6.AddVariable("br3_6_v_energy",&br3_6_v_energy);
  reader_br3_6.BookMVA( "MyBDT", "weights/br3_6_BDT.weights.xml");

  TMVA::Reader reader_pio_2;
  float pio_2_v_dis2;
  float pio_2_v_angle2;
  float pio_2_v_acc_length;
  reader_pio_2.AddVariable("pio_2_v_dis2",&pio_2_v_dis2);
  reader_pio_2.AddVariable("pio_2_v_angle2",&pio_2_v_angle2);
  reader_pio_2.AddVariable("pio_2_v_acc_length",&pio_2_v_acc_length);
  reader_pio_2.AddVariable("pio_mip_id",&tagger.pio_mip_id);
  reader_pio_2.BookMVA( "MyBDT", "weights/pio_2_BDT.weights.xml");

  TMVA::Reader reader_lol_1;
  float lol_1_v_energy;
  float lol_1_v_vtx_n_segs;
  float lol_1_v_nseg;
  float lol_1_v_angle;
  reader_lol_1.AddVariable("lol_1_v_energy",&lol_1_v_energy);
  reader_lol_1.AddVariable("lol_1_v_vtx_n_segs",&lol_1_v_vtx_n_segs);
  reader_lol_1.AddVariable("lol_1_v_nseg",&lol_1_v_nseg);
  reader_lol_1.AddVariable("lol_1_v_angle",&lol_1_v_angle);
  reader_lol_1.BookMVA( "MyBDT", "weights/lol_1_BDT.weights.xml");

  TMVA::Reader reader_lol_2;
  float lol_2_v_length;
  float lol_2_v_angle;
  float lol_2_v_type;
  float lol_2_v_vtx_n_segs;
  float lol_2_v_energy;
  float lol_2_v_shower_main_length;
  float lol_2_v_flag_dir_weak;
  reader_lol_2.AddVariable("lol_2_v_length",&lol_2_v_length);
  reader_lol_2.AddVariable("lol_2_v_angle",&lol_2_v_angle);
  reader_lol_2.AddVariable("lol_2_v_type",&lol_2_v_type);
  reader_lol_2.AddVariable("lol_2_v_vtx_n_segs",&lol_2_v_vtx_n_segs);
  reader_lol_2.AddVariable("lol_2_v_energy",&lol_2_v_energy);
  reader_lol_2.AddVariable("lol_2_v_shower_main_length",&lol_2_v_shower_main_length);
  reader_lol_2.AddVariable("lol_2_v_flag_dir_weak",&lol_2_v_flag_dir_weak);
  reader_lol_2.BookMVA( "MyBDT", "weights/lol_2_BDT.weights.xml");

  TMVA::Reader reader_tro_1;
  float tro_1_v_particle_type;
  float tro_1_v_flag_dir_weak;
  float tro_1_v_min_dis;
  float tro_1_v_sg1_length;
  float tro_1_v_shower_main_length;
  float tro_1_v_max_n_vtx_segs;
  float tro_1_v_tmp_length;
  float tro_1_v_medium_dQ_dx;
  float tro_1_v_dQ_dx_cut;
  float tro_1_v_flag_shower_topology;
  reader_tro_1.AddVariable("tro_1_v_particle_type",&tro_1_v_particle_type);
  reader_tro_1.AddVariable("tro_1_v_flag_dir_weak",&tro_1_v_flag_dir_weak);
  reader_tro_1.AddVariable("tro_1_v_min_dis",&tro_1_v_min_dis);
  reader_tro_1.AddVariable("tro_1_v_sg1_length",&tro_1_v_sg1_length);
  reader_tro_1.AddVariable("tro_1_v_shower_main_length",&tro_1_v_shower_main_length);
  reader_tro_1.AddVariable("tro_1_v_max_n_vtx_segs",&tro_1_v_max_n_vtx_segs);
  reader_tro_1.AddVariable("tro_1_v_tmp_length",&tro_1_v_tmp_length);
  reader_tro_1.AddVariable("tro_1_v_medium_dQ_dx",&tro_1_v_medium_dQ_dx);
  reader_tro_1.AddVariable("tro_1_v_dQ_dx_cut", &tro_1_v_dQ_dx_cut);
  reader_tro_1.AddVariable("tro_1_v_flag_shower_topology", &tro_1_v_flag_shower_topology);
  reader_tro_1.BookMVA( "MyBDT", "weights/tro_1_BDT.weights.xml");

  TMVA::Reader reader_tro_2;
  float tro_2_v_energy;
  float tro_2_v_stem_length;
  float tro_2_v_iso_angle;
  float tro_2_v_max_length;
  float tro_2_v_angle;
  reader_tro_2.AddVariable("tro_2_v_energy",&tro_2_v_energy);
  reader_tro_2.AddVariable("tro_2_v_stem_length",&tro_2_v_stem_length);
  reader_tro_2.AddVariable("tro_2_v_iso_angle",&tro_2_v_iso_angle);
  reader_tro_2.AddVariable("tro_2_v_max_length",&tro_2_v_max_length);
  reader_tro_2.AddVariable("tro_2_v_angle",&tro_2_v_angle);
  reader_tro_2.BookMVA( "MyBDT", "weights/tro_2_BDT.weights.xml");

  TMVA::Reader reader_tro_4;

  float tro_4_v_dir2_mag;
  float tro_4_v_angle;
  float tro_4_v_angle1;
  float tro_4_v_angle2;
  float tro_4_v_length;
  float tro_4_v_length1;
  float tro_4_v_medium_dQ_dx;
  float tro_4_v_end_dQ_dx;
  float tro_4_v_energy;
  float tro_4_v_shower_main_length;
  float tro_4_v_flag_shower_trajectory;
  
  reader_tro_4.AddVariable("tro_4_v_dir2_mag",&tro_4_v_dir2_mag);
  reader_tro_4.AddVariable("tro_4_v_angle",&tro_4_v_angle);
  reader_tro_4.AddVariable("tro_4_v_angle1",&tro_4_v_angle1);
  reader_tro_4.AddVariable("tro_4_v_angle2",&tro_4_v_angle2);
  reader_tro_4.AddVariable("tro_4_v_length",&tro_4_v_length);
  reader_tro_4.AddVariable("tro_4_v_length1",&tro_4_v_length1);
  reader_tro_4.AddVariable("tro_4_v_medium_dQ_dx",&tro_4_v_medium_dQ_dx);
  reader_tro_4.AddVariable("tro_4_v_end_dQ_dx",&tro_4_v_end_dQ_dx);
  reader_tro_4.AddVariable("tro_4_v_energy",&tro_4_v_energy);
  reader_tro_4.AddVariable("tro_4_v_shower_main_length",&tro_4_v_shower_main_length);
  reader_tro_4.AddVariable("tro_4_v_flag_shower_trajectory",&tro_4_v_flag_shower_trajectory);
  reader_tro_4.BookMVA( "MyBDT", "weights/tro_4_BDT.weights.xml");

  TMVA::Reader reader_tro_5;
  float tro_5_v_max_angle;
  float tro_5_v_min_angle;
  float tro_5_v_max_length;
  float tro_5_v_iso_angle;
  float tro_5_v_n_vtx_segs;
  float tro_5_v_min_count;
  float tro_5_v_max_count;
  float tro_5_v_energy;
  reader_tro_5.AddVariable("tro_5_v_max_angle",&tro_5_v_max_angle);
  reader_tro_5.AddVariable("tro_5_v_min_angle",&tro_5_v_min_angle);
  reader_tro_5.AddVariable("tro_5_v_max_length",&tro_5_v_max_length);
  reader_tro_5.AddVariable("tro_5_v_iso_angle",&tro_5_v_iso_angle);
  reader_tro_5.AddVariable("tro_5_v_n_vtx_segs",&tro_5_v_n_vtx_segs);
  reader_tro_5.AddVariable("tro_5_v_min_count",&tro_5_v_min_count);
  reader_tro_5.AddVariable("tro_5_v_max_count",&tro_5_v_max_count);
  reader_tro_5.AddVariable("tro_5_v_energy",&tro_5_v_energy);
  reader_tro_5.BookMVA( "MyBDT", "weights/tro_5_BDT.weights.xml");

  TMVA::Reader reader_sig_1;
  float sig_1_v_angle;
  float sig_1_v_flag_single_shower;
  float sig_1_v_energy;
  float sig_1_v_energy_1;
  reader_sig_1.AddVariable("sig_1_v_angle",&sig_1_v_angle);
  reader_sig_1.AddVariable("sig_1_v_flag_single_shower",&sig_1_v_flag_single_shower);
  reader_sig_1.AddVariable("sig_1_v_energy",&sig_1_v_energy);
  reader_sig_1.AddVariable("sig_1_v_energy_1",&sig_1_v_energy_1);
  reader_sig_1.BookMVA( "MyBDT", "weights/sig_1_BDT.weights.xml");

  TMVA::Reader reader_sig_2;
  float sig_2_v_energy;
  float sig_2_v_shower_angle;
  float sig_2_v_flag_single_shower;
  float sig_2_v_medium_dQ_dx;
  float sig_2_v_start_dQ_dx;
  
  reader_sig_2.AddVariable("sig_2_v_energy",&sig_2_v_energy);
  reader_sig_2.AddVariable("sig_2_v_shower_angle",&sig_2_v_shower_angle);
  reader_sig_2.AddVariable("sig_2_v_flag_single_shower",&sig_2_v_flag_single_shower);
  reader_sig_2.AddVariable("sig_2_v_medium_dQ_dx",&sig_2_v_medium_dQ_dx);  
  reader_sig_2.AddVariable("sig_2_v_start_dQ_dx",&sig_2_v_start_dQ_dx);

  reader_sig_2.BookMVA( "MyBDT", "weights/sig_2_BDT.weights.xml");

  TMVA::Reader reader_stw_2;
  
  float stw_2_v_medium_dQ_dx;
  float stw_2_v_energy;
  float stw_2_v_angle;
  float stw_2_v_dir_length;
  float stw_2_v_max_dQ_dx;
  
  reader_stw_2.AddVariable("stw_2_v_medium_dQ_dx",&stw_2_v_medium_dQ_dx);
  reader_stw_2.AddVariable("stw_2_v_energy",&stw_2_v_energy);
  reader_stw_2.AddVariable("stw_2_v_angle",&stw_2_v_angle);
  reader_stw_2.AddVariable("stw_2_v_dir_length",&stw_2_v_dir_length);
  reader_stw_2.AddVariable("stw_2_v_max_dQ_dx",&stw_2_v_max_dQ_dx);
  
  reader_stw_2.BookMVA( "MyBDT", "weights/stw_2_BDT.weights.xml");

  TMVA::Reader reader_stw_3;

  float stw_3_v_angle;
  float stw_3_v_dir_length;
  float stw_3_v_energy;
  float stw_3_v_medium_dQ_dx;
  
  reader_stw_3.AddVariable("stw_3_v_angle",&stw_3_v_angle);
  reader_stw_3.AddVariable("stw_3_v_dir_length",&stw_3_v_dir_length);
  reader_stw_3.AddVariable("stw_3_v_energy",&stw_3_v_energy);
  reader_stw_3.AddVariable("stw_3_v_medium_dQ_dx",&stw_3_v_medium_dQ_dx);
  
  reader_stw_3.BookMVA( "MyBDT", "weights/stw_3_BDT.weights.xml");

  TMVA::Reader reader_stw_4;

  float stw_4_v_angle;
  float stw_4_v_dis;
  float stw_4_v_energy;
  
  reader_stw_4.AddVariable("stw_4_v_angle",&stw_4_v_angle);
  reader_stw_4.AddVariable("stw_4_v_dis",&stw_4_v_dis);
  reader_stw_4.AddVariable("stw_4_v_energy",&stw_4_v_energy);
  reader_stw_4.BookMVA( "MyBDT", "weights/stw_4_BDT.weights.xml");

  
  // total BDTs ... to be added ...
  TMVA::Reader reader;
  reader.AddVariable("match_isFC",&tagger.match_isFC);
  reader.AddVariable("kine_reco_Enu",&tagger.kine_reco_Enu);
  
  reader.AddVariable("cme_mu_energy",&tagger.cme_mu_energy);
  reader.AddVariable("cme_energy",&tagger.cme_energy);
  reader.AddVariable("cme_mu_length",&tagger.cme_mu_length);
  reader.AddVariable("cme_length",&tagger.cme_length);
  reader.AddVariable("cme_angle_beam",&tagger.cme_angle_beam);
  reader.AddVariable("anc_angle",&tagger.anc_angle);
  reader.AddVariable("anc_max_angle",&tagger.anc_max_angle);
  reader.AddVariable("anc_max_length",&tagger.anc_max_length);
  reader.AddVariable("anc_acc_forward_length",&tagger.anc_acc_forward_length);
  reader.AddVariable("anc_acc_backward_length",&tagger.anc_acc_backward_length);
  reader.AddVariable("anc_acc_forward_length1",&tagger.anc_acc_forward_length1);
  reader.AddVariable("anc_shower_main_length",&tagger.anc_shower_main_length);
  reader.AddVariable("anc_shower_total_length",&tagger.anc_shower_total_length);
  reader.AddVariable("anc_flag_main_outside",&tagger.anc_flag_main_outside);
  reader.AddVariable("gap_flag_prolong_u",&tagger.gap_flag_prolong_u);
  reader.AddVariable("gap_flag_prolong_v",&tagger.gap_flag_prolong_v);
  reader.AddVariable("gap_flag_prolong_w",&tagger.gap_flag_prolong_w);
  reader.AddVariable("gap_flag_parallel",&tagger.gap_flag_parallel);
  reader.AddVariable("gap_n_points",&tagger.gap_n_points);
  reader.AddVariable("gap_n_bad",&tagger.gap_n_bad);
  reader.AddVariable("gap_energy",&tagger.gap_energy);
  reader.AddVariable("gap_num_valid_tracks",&tagger.gap_num_valid_tracks);
  reader.AddVariable("gap_flag_single_shower",&tagger.gap_flag_single_shower);
  reader.AddVariable("hol_1_n_valid_tracks",&tagger.hol_1_n_valid_tracks);
  reader.AddVariable("hol_1_min_angle",&tagger.hol_1_min_angle);
  reader.AddVariable("hol_1_energy",&tagger.hol_1_energy);
  reader.AddVariable("hol_1_min_length",&tagger.hol_1_min_length);
  reader.AddVariable("hol_2_min_angle",&tagger.hol_2_min_angle);
  reader.AddVariable("hol_2_medium_dQ_dx",&tagger.hol_2_medium_dQ_dx);
  reader.AddVariable("hol_2_ncount",&tagger.hol_2_ncount);
  reader.AddVariable("lol_3_angle_beam",&tagger.lol_3_angle_beam);
  reader.AddVariable("lol_3_n_valid_tracks",&tagger.lol_3_n_valid_tracks);
  reader.AddVariable("lol_3_min_angle",&tagger.lol_3_min_angle);
  reader.AddVariable("lol_3_vtx_n_segs",&tagger.lol_3_vtx_n_segs);
  reader.AddVariable("lol_3_shower_main_length",&tagger.lol_3_shower_main_length);
  reader.AddVariable("lol_3_n_out",&tagger.lol_3_n_out);
  reader.AddVariable("lol_3_n_sum",&tagger.lol_3_n_sum);
  reader.AddVariable("hol_1_flag_all_shower",&tagger.hol_1_flag_all_shower); // naming issue
  reader.AddVariable("mgo_energy",&tagger.mgo_energy);
  reader.AddVariable("mgo_max_energy",&tagger.mgo_max_energy);
  reader.AddVariable("mgo_total_energy",&tagger.mgo_total_energy);
  reader.AddVariable("mgo_n_showers",&tagger.mgo_n_showers);
  reader.AddVariable("mgo_max_energy_1",&tagger.mgo_max_energy_1);
  reader.AddVariable("mgo_max_energy_2",&tagger.mgo_max_energy_2);
  reader.AddVariable("mgo_total_other_energy",&tagger.mgo_total_other_energy);
  reader.AddVariable("mgo_n_total_showers",&tagger.mgo_n_total_showers);
  reader.AddVariable("mgo_total_other_energy_1",&tagger.mgo_total_other_energy_1);
  reader.AddVariable("mgt_flag_single_shower",&tagger.mgt_flag_single_shower);
  reader.AddVariable("mgt_max_energy",&tagger.mgt_max_energy);
  reader.AddVariable("mgt_total_other_energy",&tagger.mgt_total_other_energy);
  reader.AddVariable("mgt_max_energy_1",&tagger.mgt_max_energy_1);
  reader.AddVariable("mgt_e_indirect_max_energy",&tagger.mgt_e_indirect_max_energy);
  reader.AddVariable("mgt_e_direct_max_energy",&tagger.mgt_e_direct_max_energy);
  reader.AddVariable("mgt_n_direct_showers",&tagger.mgt_n_direct_showers);
  reader.AddVariable("mgt_e_direct_total_energy",&tagger.mgt_e_direct_total_energy);
  reader.AddVariable("mgt_flag_indirect_max_pio",&tagger.mgt_flag_indirect_max_pio);
  reader.AddVariable("mgt_e_indirect_total_energy",&tagger.mgt_e_indirect_total_energy);
  reader.AddVariable("mip_quality_energy",&tagger.mip_quality_energy);
  reader.AddVariable("mip_quality_overlap",&tagger.mip_quality_overlap);
  reader.AddVariable("mip_quality_n_showers",&tagger.mip_quality_n_showers);
  reader.AddVariable("mip_quality_n_tracks",&tagger.mip_quality_n_tracks);
  reader.AddVariable("mip_quality_flag_inside_pi0",&tagger.mip_quality_flag_inside_pi0);
  reader.AddVariable("mip_quality_n_pi0_showers",&tagger.mip_quality_n_pi0_showers);
  reader.AddVariable("mip_quality_shortest_length",&tagger.mip_quality_shortest_length);
  reader.AddVariable("mip_quality_acc_length",&tagger.mip_quality_acc_length);
  reader.AddVariable("mip_quality_shortest_angle",&tagger.mip_quality_shortest_angle);
  reader.AddVariable("mip_quality_flag_proton",&tagger.mip_quality_flag_proton);
  reader.AddVariable("br1_1_shower_type",&tagger.br1_1_shower_type);
  reader.AddVariable("br1_1_vtx_n_segs",&tagger.br1_1_vtx_n_segs);
  reader.AddVariable("br1_1_energy",&tagger.br1_1_energy);
  reader.AddVariable("br1_1_n_segs",&tagger.br1_1_n_segs);
  reader.AddVariable("br1_1_flag_sg_topology",&tagger.br1_1_flag_sg_topology);
  reader.AddVariable("br1_1_flag_sg_trajectory",&tagger.br1_1_flag_sg_trajectory);
  reader.AddVariable("br1_1_sg_length",&tagger.br1_1_sg_length);
  reader.AddVariable("br1_2_n_connected",&tagger.br1_2_n_connected);
  reader.AddVariable("br1_2_max_length",&tagger.br1_2_max_length);
  reader.AddVariable("br1_2_n_connected_1",&tagger.br1_2_n_connected_1);
  reader.AddVariable("br1_2_n_shower_segs",&tagger.br1_2_n_shower_segs);
  reader.AddVariable("br1_2_max_length_ratio",&tagger.br1_2_max_length_ratio);
  reader.AddVariable("br1_2_shower_length",&tagger.br1_2_shower_length);
  reader.AddVariable("br1_3_n_connected_p",&tagger.br1_3_n_connected_p);
  reader.AddVariable("br1_3_max_length_p",&tagger.br1_3_max_length_p);
  reader.AddVariable("br1_3_n_shower_main_segs",&tagger.br1_3_n_shower_main_segs);
  reader.AddVariable("br3_1_energy",&tagger.br3_1_energy);
  reader.AddVariable("br3_1_n_shower_segments",&tagger.br3_1_n_shower_segments);
  reader.AddVariable("br3_1_sg_flag_trajectory",&tagger.br3_1_sg_flag_trajectory);
  reader.AddVariable("br3_1_sg_direct_length",&tagger.br3_1_sg_direct_length);
  reader.AddVariable("br3_1_sg_length",&tagger.br3_1_sg_length);
  reader.AddVariable("br3_1_total_main_length",&tagger.br3_1_total_main_length);
  reader.AddVariable("br3_1_total_length",&tagger.br3_1_total_length);
  reader.AddVariable("br3_1_iso_angle",&tagger.br3_1_iso_angle);
  reader.AddVariable("br3_1_sg_flag_topology",&tagger.br3_1_sg_flag_topology);
  reader.AddVariable("br3_2_n_ele",&tagger.br3_2_n_ele);
  reader.AddVariable("br3_2_n_other",&tagger.br3_2_n_other);
  reader.AddVariable("br3_2_other_fid",&tagger.br3_2_other_fid);
  reader.AddVariable("br3_4_acc_length",&tagger.br3_4_acc_length);
  reader.AddVariable("br3_4_total_length",&tagger.br3_4_total_length);
  reader.AddVariable("br3_7_min_angle",&tagger.br3_7_min_angle);
  reader.AddVariable("br3_8_max_dQ_dx",&tagger.br3_8_max_dQ_dx);
  reader.AddVariable("br3_8_n_main_segs",&tagger.br3_8_n_main_segs);
  reader.AddVariable("vis_1_n_vtx_segs",&tagger.vis_1_n_vtx_segs);
  reader.AddVariable("vis_1_energy",&tagger.vis_1_energy);
  reader.AddVariable("vis_1_num_good_tracks",&tagger.vis_1_num_good_tracks);
  reader.AddVariable("vis_1_max_angle",&tagger.vis_1_max_angle);
  reader.AddVariable("vis_1_max_shower_angle",&tagger.vis_1_max_shower_angle);
  reader.AddVariable("vis_1_tmp_length1",&tagger.vis_1_tmp_length1);
  reader.AddVariable("vis_1_tmp_length2",&tagger.vis_1_tmp_length2);
  reader.AddVariable("vis_2_n_vtx_segs",&tagger.vis_2_n_vtx_segs);
  reader.AddVariable("vis_2_min_angle",&tagger.vis_2_min_angle);
  reader.AddVariable("vis_2_min_weak_track",&tagger.vis_2_min_weak_track);
  reader.AddVariable("vis_2_angle_beam",&tagger.vis_2_angle_beam);
  reader.AddVariable("vis_2_min_angle1",&tagger.vis_2_min_angle1);
  reader.AddVariable("vis_2_iso_angle1",&tagger.vis_2_iso_angle1);
  reader.AddVariable("vis_2_min_medium_dQ_dx",&tagger.vis_2_min_medium_dQ_dx);
  reader.AddVariable("vis_2_min_length",&tagger.vis_2_min_length);
  reader.AddVariable("vis_2_sg_length",&tagger.vis_2_sg_length);
  reader.AddVariable("vis_2_max_angle",&tagger.vis_2_max_angle);
  reader.AddVariable("vis_2_max_weak_track",&tagger.vis_2_max_weak_track);
  reader.AddVariable("pio_1_mass",&tagger.pio_1_mass);
  reader.AddVariable("pio_1_pio_type",&tagger.pio_1_pio_type);
  reader.AddVariable("pio_1_energy_1",&tagger.pio_1_energy_1);
  reader.AddVariable("pio_1_energy_2",&tagger.pio_1_energy_2);
  reader.AddVariable("pio_1_dis_1",&tagger.pio_1_dis_1);
  reader.AddVariable("pio_1_dis_2",&tagger.pio_1_dis_2);
  reader.AddVariable("pio_mip_id",&tagger.pio_mip_id);
  reader.AddVariable("stem_dir_flag_single_shower",&tagger.stem_dir_flag_single_shower);
  reader.AddVariable("stem_dir_angle",&tagger.stem_dir_angle);
  reader.AddVariable("stem_dir_energy",&tagger.stem_dir_energy);
  reader.AddVariable("stem_dir_angle1",&tagger.stem_dir_angle1);
  reader.AddVariable("stem_dir_angle2",&tagger.stem_dir_angle2);
  reader.AddVariable("stem_dir_angle3",&tagger.stem_dir_angle3);
  reader.AddVariable("stem_dir_ratio",&tagger.stem_dir_ratio);
  reader.AddVariable("br2_num_valid_tracks",&tagger.br2_num_valid_tracks);
  reader.AddVariable("br2_n_shower_main_segs",&tagger.br2_n_shower_main_segs);
  reader.AddVariable("br2_max_angle",&tagger.br2_max_angle);
  reader.AddVariable("br2_sg_length",&tagger.br2_sg_length);
  reader.AddVariable("br2_flag_sg_trajectory",&tagger.br2_flag_sg_trajectory);
  reader.AddVariable("stem_len_energy",&tagger.stem_len_energy);
  reader.AddVariable("stem_len_length",&tagger.stem_len_length);
  reader.AddVariable("stem_len_flag_avoid_muon_check",&tagger.stem_len_flag_avoid_muon_check);
  reader.AddVariable("stem_len_num_daughters",&tagger.stem_len_num_daughters);
  reader.AddVariable("stem_len_daughter_length",&tagger.stem_len_daughter_length);
  reader.AddVariable("brm_n_mu_segs",&tagger.brm_n_mu_segs);
  reader.AddVariable("brm_Ep",&tagger.brm_Ep);
  reader.AddVariable("brm_acc_length",&tagger.brm_acc_length);
  reader.AddVariable("brm_shower_total_length",&tagger.brm_shower_total_length);
  reader.AddVariable("brm_connected_length",&tagger.brm_connected_length);
  reader.AddVariable("brm_n_size",&tagger.brm_n_size);
  reader.AddVariable("brm_n_shower_main_segs",&tagger.brm_n_shower_main_segs);
  reader.AddVariable("brm_n_mu_main",&tagger.brm_n_mu_main);
  reader.AddVariable("lem_shower_main_length",&tagger.lem_shower_main_length);
  reader.AddVariable("lem_n_3seg",&tagger.lem_n_3seg);
  reader.AddVariable("lem_e_charge",&tagger.lem_e_charge);
  reader.AddVariable("lem_e_dQdx",&tagger.lem_e_dQdx);
  reader.AddVariable("lem_shower_num_main_segs",&tagger.lem_shower_num_main_segs);
  reader.AddVariable("brm_acc_direct_length",&tagger.brm_acc_direct_length); // naming issue
  reader.AddVariable("stw_1_energy",&tagger.stw_1_energy);
  reader.AddVariable("stw_1_dis",&tagger.stw_1_dis);
  reader.AddVariable("stw_1_dQ_dx",&tagger.stw_1_dQ_dx);
  reader.AddVariable("stw_1_flag_single_shower",&tagger.stw_1_flag_single_shower);
  reader.AddVariable("stw_1_n_pi0",&tagger.stw_1_n_pi0);
  reader.AddVariable("stw_1_num_valid_tracks",&tagger.stw_1_num_valid_tracks);
  reader.AddVariable("spt_shower_main_length",&tagger.spt_shower_main_length);
  reader.AddVariable("spt_shower_total_length",&tagger.spt_shower_total_length);
  reader.AddVariable("spt_angle_beam",&tagger.spt_angle_beam);
  reader.AddVariable("spt_angle_vertical",&tagger.spt_angle_vertical);
  reader.AddVariable("spt_max_dQ_dx",&tagger.spt_max_dQ_dx);
  reader.AddVariable("spt_angle_beam_1",&tagger.spt_angle_beam_1);
  reader.AddVariable("spt_angle_drift",&tagger.spt_angle_drift);
  reader.AddVariable("spt_angle_drift_1",&tagger.spt_angle_drift_1);
  reader.AddVariable("spt_num_valid_tracks",&tagger.spt_num_valid_tracks);
  reader.AddVariable("spt_n_vtx_segs",&tagger.spt_n_vtx_segs);
  reader.AddVariable("spt_max_length",&tagger.spt_max_length);
  reader.AddVariable("mip_energy",&tagger.mip_energy);
  reader.AddVariable("mip_n_end_reduction",&tagger.mip_n_end_reduction);
  reader.AddVariable("mip_n_first_mip",&tagger.mip_n_first_mip);
  reader.AddVariable("mip_n_first_non_mip",&tagger.mip_n_first_non_mip);
  reader.AddVariable("mip_n_first_non_mip_1",&tagger.mip_n_first_non_mip_1);
  reader.AddVariable("mip_n_first_non_mip_2",&tagger.mip_n_first_non_mip_2);
  reader.AddVariable("mip_vec_dQ_dx_0",&tagger.mip_vec_dQ_dx_0);
  reader.AddVariable("mip_vec_dQ_dx_1",&tagger.mip_vec_dQ_dx_1);
  reader.AddVariable("mip_max_dQ_dx_sample",&tagger.mip_max_dQ_dx_sample);
  reader.AddVariable("mip_n_below_threshold",&tagger.mip_n_below_threshold);
  reader.AddVariable("mip_n_below_zero",&tagger.mip_n_below_zero);
  reader.AddVariable("mip_n_lowest",&tagger.mip_n_lowest);
  reader.AddVariable("mip_n_highest",&tagger.mip_n_highest);
  reader.AddVariable("mip_lowest_dQ_dx",&tagger.mip_lowest_dQ_dx);
  reader.AddVariable("mip_highest_dQ_dx",&tagger.mip_highest_dQ_dx);
  reader.AddVariable("mip_medium_dQ_dx",&tagger.mip_medium_dQ_dx);
  reader.AddVariable("mip_stem_length",&tagger.mip_stem_length);
  reader.AddVariable("mip_length_main",&tagger.mip_length_main);
  reader.AddVariable("mip_length_total",&tagger.mip_length_total);
  reader.AddVariable("mip_angle_beam",&tagger.mip_angle_beam);
  reader.AddVariable("mip_iso_angle",&tagger.mip_iso_angle);
  reader.AddVariable("mip_n_vertex",&tagger.mip_n_vertex);
  reader.AddVariable("mip_n_good_tracks",&tagger.mip_n_good_tracks);
  reader.AddVariable("mip_E_indirect_max_energy",&tagger.mip_E_indirect_max_energy);
  reader.AddVariable("mip_flag_all_above",&tagger.mip_flag_all_above);
  reader.AddVariable("mip_min_dQ_dx_5",&tagger.mip_min_dQ_dx_5);
  reader.AddVariable("mip_n_other_vertex",&tagger.mip_n_other_vertex);
  reader.AddVariable("mip_n_stem_size",&tagger.mip_n_stem_size);
  reader.AddVariable("mip_flag_stem_trajectory",&tagger.mip_flag_stem_trajectory);
  reader.AddVariable("mip_min_dis",&tagger.mip_min_dis);
  reader.AddVariable("mip_vec_dQ_dx_2",&tagger.mip_vec_dQ_dx_2);
  reader.AddVariable("mip_vec_dQ_dx_3",&tagger.mip_vec_dQ_dx_3);
  reader.AddVariable("mip_vec_dQ_dx_4",&tagger.mip_vec_dQ_dx_4);
  reader.AddVariable("mip_vec_dQ_dx_5",&tagger.mip_vec_dQ_dx_5);
  reader.AddVariable("mip_vec_dQ_dx_6",&tagger.mip_vec_dQ_dx_6);
  reader.AddVariable("mip_vec_dQ_dx_7",&tagger.mip_vec_dQ_dx_7);
  reader.AddVariable("mip_vec_dQ_dx_8",&tagger.mip_vec_dQ_dx_8);
  reader.AddVariable("mip_vec_dQ_dx_9",&tagger.mip_vec_dQ_dx_9);
  reader.AddVariable("mip_vec_dQ_dx_10",&tagger.mip_vec_dQ_dx_10);
  reader.AddVariable("mip_vec_dQ_dx_11",&tagger.mip_vec_dQ_dx_11);
  reader.AddVariable("mip_vec_dQ_dx_12",&tagger.mip_vec_dQ_dx_12);
  reader.AddVariable("mip_vec_dQ_dx_13",&tagger.mip_vec_dQ_dx_13);
  reader.AddVariable("mip_vec_dQ_dx_14",&tagger.mip_vec_dQ_dx_14);
  reader.AddVariable("mip_vec_dQ_dx_15",&tagger.mip_vec_dQ_dx_15);
  reader.AddVariable("mip_vec_dQ_dx_16",&tagger.mip_vec_dQ_dx_16);
  reader.AddVariable("mip_vec_dQ_dx_17",&tagger.mip_vec_dQ_dx_17);
  reader.AddVariable("mip_vec_dQ_dx_18",&tagger.mip_vec_dQ_dx_18);
  reader.AddVariable("mip_vec_dQ_dx_19",&tagger.mip_vec_dQ_dx_19);
  reader.AddVariable("br3_3_score",&tagger.br3_3_score);
  reader.AddVariable("br3_5_score",&tagger.br3_5_score);
  reader.AddVariable("br3_6_score",&tagger.br3_6_score);
  reader.AddVariable("pio_2_score",&tagger.pio_2_score);
  reader.AddVariable("stw_2_score",&tagger.stw_2_score);
  reader.AddVariable("stw_3_score",&tagger.stw_3_score);
  reader.AddVariable("stw_4_score",&tagger.stw_4_score);
  reader.AddVariable("sig_1_score",&tagger.sig_1_score);
  reader.AddVariable("sig_2_score",&tagger.sig_2_score);
  reader.AddVariable("lol_1_score",&tagger.lol_1_score);
  reader.AddVariable("lol_2_score",&tagger.lol_2_score);
  reader.AddVariable("tro_1_score",&tagger.tro_1_score);
  reader.AddVariable("tro_2_score",&tagger.tro_2_score);
  reader.AddVariable("tro_4_score",&tagger.tro_4_score);
  reader.AddVariable("tro_5_score",&tagger.tro_5_score);
  reader.AddVariable("br4_1_shower_main_length",&tagger.br4_1_shower_main_length);
  reader.AddVariable("br4_1_shower_total_length",&tagger.br4_1_shower_total_length);
  reader.AddVariable("br4_1_min_dis",&tagger.br4_1_min_dis);
  reader.AddVariable("br4_1_energy",&tagger.br4_1_energy);
  reader.AddVariable("br4_1_flag_avoid_muon_check",&tagger.br4_1_flag_avoid_muon_check);
  reader.AddVariable("br4_1_n_vtx_segs",&tagger.br4_1_n_vtx_segs);
  reader.AddVariable("br4_2_ratio_45",&tagger.br4_2_ratio_45);
  reader.AddVariable("br4_2_ratio_35",&tagger.br4_2_ratio_35);
  reader.AddVariable("br4_2_ratio_25",&tagger.br4_2_ratio_25);
  reader.AddVariable("br4_2_ratio_15",&tagger.br4_2_ratio_15);
  reader.AddVariable("br4_2_ratio1_45",&tagger.br4_2_ratio1_45);
  reader.AddVariable("br4_2_ratio1_35",&tagger.br4_2_ratio1_35);
  reader.AddVariable("br4_2_ratio1_25",&tagger.br4_2_ratio1_25);
  reader.AddVariable("br4_2_ratio1_15",&tagger.br4_2_ratio1_15);
  reader.AddVariable("br4_2_iso_angle",&tagger.br4_2_iso_angle);
  reader.AddVariable("br4_2_iso_angle1",&tagger.br4_2_iso_angle1);
  reader.AddVariable("br4_2_angle",&tagger.br4_2_angle);
  reader.AddVariable("tro_3_stem_length",&tagger.tro_3_stem_length);
  reader.AddVariable("tro_3_n_muon_segs",&tagger.tro_3_n_muon_segs);
  reader.AddVariable("br4_1_n_main_segs",&tagger.br4_1_n_main_segs); // naming issue

  reader.BookMVA( "MyBDT", "./weights/XGB_nue_seed2_0923.xml");
  //  reader.BookMVA( "MyBDT", "./weights/xgboost_set8seed7_kaicheng_0819.xml");

  TMVA::Reader reader_cosmict_10;
  float cosmict_10_vtx_z;
  float cosmict_10_flag_shower;
  float cosmict_10_flag_dir_weak;
  float cosmict_10_angle_beam;
  float cosmict_10_length;
  
  reader_cosmict_10.AddVariable("cosmict_10_vtx_z",&cosmict_10_vtx_z);
  reader_cosmict_10.AddVariable("cosmict_10_flag_shower",&cosmict_10_flag_shower);
  reader_cosmict_10.AddVariable("cosmict_10_flag_dir_weak",&cosmict_10_flag_dir_weak);
  reader_cosmict_10.AddVariable("cosmict_10_angle_beam",&cosmict_10_angle_beam);
  reader_cosmict_10.AddVariable("cosmict_10_length",&cosmict_10_length);
      
  reader_cosmict_10.BookMVA( "MyBDT", "weights/cos_tagger_10.weights.xml");


  TMVA::Reader reader_numu_1;
  
  float numu_cc_flag_1;
  float numu_cc_1_particle_type;
  float numu_cc_1_length;
  float numu_cc_1_medium_dQ_dx;
  float numu_cc_1_dQ_dx_cut;
  float numu_cc_1_direct_length;
  float numu_cc_1_n_daughter_tracks;
  float numu_cc_1_n_daughter_all;
  
  reader_numu_1.AddVariable("numu_cc_1_particle_type",&numu_cc_1_particle_type);
  reader_numu_1.AddVariable("numu_cc_1_length",&numu_cc_1_length);
  reader_numu_1.AddVariable("numu_cc_1_medium_dQ_dx",&numu_cc_1_medium_dQ_dx);
  reader_numu_1.AddVariable("numu_cc_1_dQ_dx_cut",&numu_cc_1_dQ_dx_cut);
  reader_numu_1.AddVariable("numu_cc_1_direct_length",&numu_cc_1_direct_length);
  reader_numu_1.AddVariable("numu_cc_1_n_daughter_tracks",&numu_cc_1_n_daughter_tracks);
  reader_numu_1.AddVariable("numu_cc_1_n_daughter_all",&numu_cc_1_n_daughter_all);
      
  reader_numu_1.BookMVA( "MyBDT", "weights/numu_tagger1.weights.xml");


  TMVA::Reader reader_numu_2;
  float numu_cc_2_length;
  float numu_cc_2_total_length;
  float numu_cc_2_n_daughter_tracks;
  float numu_cc_2_n_daughter_all;
  
  reader_numu_2.AddVariable("numu_cc_2_length",&numu_cc_2_length);
  reader_numu_2.AddVariable("numu_cc_2_total_length",&numu_cc_2_total_length);
  reader_numu_2.AddVariable("numu_cc_2_n_daughter_tracks",&numu_cc_2_n_daughter_tracks);
  reader_numu_2.AddVariable("numu_cc_2_n_daughter_all",&numu_cc_2_n_daughter_all);
  
  reader_numu_2.BookMVA( "MyBDT", "weights/numu_tagger2.weights.xml");


  TMVA::Reader reader_numu;
  
  reader_numu.AddVariable("numu_cc_flag_3", &tagger.numu_cc_flag_3);
  reader_numu.AddVariable("numu_cc_3_particle_type", &tagger.numu_cc_3_particle_type);
  reader_numu.AddVariable("numu_cc_3_max_length", &tagger.numu_cc_3_max_length);
  reader_numu.AddVariable("numu_cc_3_track_length",&tagger.numu_cc_3_acc_track_length);
  reader_numu.AddVariable("numu_cc_3_max_length_all",&tagger.numu_cc_3_max_length_all);
  reader_numu.AddVariable("numu_cc_3_max_muon_length",&tagger.numu_cc_3_max_muon_length);
  reader_numu.AddVariable("numu_cc_3_n_daughter_tracks",&tagger.numu_cc_3_n_daughter_tracks);
  reader_numu.AddVariable("numu_cc_3_n_daughter_all",&tagger.numu_cc_3_n_daughter_all);
  reader_numu.AddVariable("cosmict_flag_2", &tagger.cosmict_flag_2);
  reader_numu.AddVariable("cosmict_2_filled", &tagger.cosmict_2_filled);
  reader_numu.AddVariable("cosmict_2_particle_type",&tagger.cosmict_2_particle_type);
  reader_numu.AddVariable("cosmict_2_n_muon_tracks",&tagger.cosmict_2_n_muon_tracks);
  reader_numu.AddVariable("cosmict_2_total_shower_length",&tagger.cosmict_2_total_shower_length);
  reader_numu.AddVariable("cosmict_2_flag_inside",&tagger.cosmict_2_flag_inside);
  reader_numu.AddVariable("cosmict_2_angle_beam",&tagger.cosmict_2_angle_beam);
  reader_numu.AddVariable("cosmict_2_flag_dir_weak", &tagger.cosmict_2_flag_dir_weak);
  reader_numu.AddVariable("cosmict_2_dQ_dx_end", &tagger.cosmict_2_dQ_dx_end);
  reader_numu.AddVariable("cosmict_2_dQ_dx_front", &tagger.cosmict_2_dQ_dx_front);
  reader_numu.AddVariable("cosmict_2_theta", &tagger.cosmict_2_theta);
  reader_numu.AddVariable("cosmict_2_phi", &tagger.cosmict_2_phi);
  reader_numu.AddVariable("cosmict_2_valid_tracks", &tagger.cosmict_2_valid_tracks);
  reader_numu.AddVariable("cosmict_flag_4", &tagger.cosmict_flag_4);
  reader_numu.AddVariable("cosmict_4_filled", &tagger.cosmict_4_filled);
  reader_numu.AddVariable("cosmict_4_flag_inside", &tagger.cosmict_4_flag_inside);
  reader_numu.AddVariable("cosmict_4_angle_beam", &tagger.cosmict_4_angle_beam);
  reader_numu.AddVariable("cosmict_4_connected_showers", &tagger.cosmict_4_connected_showers);
  reader_numu.AddVariable("cosmict_flag_3", &tagger.cosmict_flag_3);
  reader_numu.AddVariable("cosmict_3_filled", &tagger.cosmict_3_filled);
  reader_numu.AddVariable("cosmict_3_flag_inside", &tagger.cosmict_3_flag_inside);
  reader_numu.AddVariable("cosmict_3_angle_beam", &tagger.cosmict_3_angle_beam);
  reader_numu.AddVariable("cosmict_3_flag_dir_weak", &tagger.cosmict_3_flag_dir_weak);
  reader_numu.AddVariable("cosmict_3_dQ_dx_end", &tagger.cosmict_3_dQ_dx_end);
  reader_numu.AddVariable("cosmict_3_dQ_dx_front", &tagger.cosmict_3_dQ_dx_front);
  reader_numu.AddVariable("cosmict_3_theta", &tagger.cosmict_3_theta);
  reader_numu.AddVariable("cosmict_3_phi", &tagger.cosmict_3_phi);
  reader_numu.AddVariable("cosmict_3_valid_tracks", &tagger.cosmict_3_valid_tracks);
  reader_numu.AddVariable("cosmict_flag_5", &tagger.cosmict_flag_5);
  reader_numu.AddVariable("cosmict_5_filled", &tagger.cosmict_5_filled);
  reader_numu.AddVariable("cosmict_5_flag_inside", &tagger.cosmict_5_flag_inside);
  reader_numu.AddVariable("cosmict_5_angle_beam", &tagger.cosmict_5_angle_beam);
  reader_numu.AddVariable("cosmict_5_connected_showers", &tagger.cosmict_5_connected_showers);
  reader_numu.AddVariable("cosmict_flag_6", &tagger.cosmict_flag_6);
  reader_numu.AddVariable("cosmict_6_filled", &tagger.cosmict_6_filled);
  reader_numu.AddVariable("cosmict_6_flag_dir_weak", &tagger.cosmict_6_flag_dir_weak);
  reader_numu.AddVariable("cosmict_6_flag_inside", &tagger.cosmict_6_flag_inside);
  reader_numu.AddVariable("cosmict_6_angle", &tagger.cosmict_6_angle);
  reader_numu.AddVariable("cosmict_flag_7", &tagger.cosmict_flag_7);
  reader_numu.AddVariable("cosmict_7_filled", &tagger.cosmict_7_filled);
  reader_numu.AddVariable("cosmict_7_flag_sec", &tagger.cosmict_7_flag_sec);
  reader_numu.AddVariable("cosmict_7_n_muon_tracks", &tagger.cosmict_7_n_muon_tracks);
  reader_numu.AddVariable("cosmict_7_total_shower_length", &tagger.cosmict_7_total_shower_length);
  reader_numu.AddVariable("cosmict_7_flag_inside", &tagger.cosmict_7_flag_inside);
  reader_numu.AddVariable("cosmict_7_angle_beam", &tagger.cosmict_7_angle_beam);
  reader_numu.AddVariable("cosmict_7_flag_dir_weak", &tagger.cosmict_7_flag_dir_weak);
  reader_numu.AddVariable("cosmict_7_dQ_dx_end", &tagger.cosmict_7_dQ_dx_end);
  reader_numu.AddVariable("cosmict_7_dQ_dx_front", &tagger.cosmict_7_dQ_dx_front);
  reader_numu.AddVariable("cosmict_7_theta", &tagger.cosmict_7_theta);
  reader_numu.AddVariable("cosmict_7_phi", &tagger.cosmict_7_phi);
  reader_numu.AddVariable("cosmict_flag_8", &tagger.cosmict_flag_8);
  reader_numu.AddVariable("cosmict_8_filled", &tagger.cosmict_8_filled);
  reader_numu.AddVariable("cosmict_8_flag_out", &tagger.cosmict_8_flag_out);
  reader_numu.AddVariable("cosmict_8_muon_length", &tagger.cosmict_8_muon_length);
  reader_numu.AddVariable("cosmict_8_acc_length", &tagger.cosmict_8_acc_length);
  reader_numu.AddVariable("cosmict_flag_9", &tagger.cosmict_flag_9);
  reader_numu.AddVariable("cosmic_flag", &tagger.cosmic_flag);
  reader_numu.AddVariable("cosmic_filled", &tagger.cosmic_filled);
  reader_numu.AddVariable("cosmict_flag", &tagger.cosmict_flag);
  reader_numu.AddVariable("numu_cc_flag", &tagger.numu_cc_flag);
  reader_numu.AddVariable("cosmict_flag_1", &tagger.cosmict_flag_1);
  reader_numu.AddVariable("kine_reco_Enu",&tagger.kine_reco_Enu);
  reader_numu.AddVariable("match_isFC",&tagger.match_isFC);
  reader_numu.AddVariable("cosmict_10_score", &tagger.cosmict_10_score);
  reader_numu.AddVariable("numu_1_score", &tagger.numu_1_score);
  reader_numu.AddVariable("numu_2_score", &tagger.numu_2_score);

  reader_numu.BookMVA( "MyBDT", "weights/numu_scalars_scores_0923.xml");

  // NC delta BDT ... by Lee @ Yale
  TMVA::Reader reader_nc_delta;

  reader_nc_delta.AddVariable("numu_cc_flag_3",&tagger.numu_cc_flag_3);
  reader_nc_delta.AddVariable("numu_cc_3_particle_type",&tagger.numu_cc_3_particle_type);
  reader_nc_delta.AddVariable("numu_cc_3_max_length",&tagger.numu_cc_3_max_length);
  reader_nc_delta.AddVariable("numu_cc_3_track_length",&tagger.numu_cc_3_acc_track_length);
  reader_nc_delta.AddVariable("numu_cc_3_max_length_all",&tagger.numu_cc_3_max_length_all);
  reader_nc_delta.AddVariable("numu_cc_3_max_muon_length",&tagger.numu_cc_3_max_muon_length);
  reader_nc_delta.AddVariable("numu_cc_3_n_daughter_tracks",&tagger.numu_cc_3_n_daughter_tracks);
  reader_nc_delta.AddVariable("numu_cc_3_n_daughter_all",&tagger.numu_cc_3_n_daughter_all);
  reader_nc_delta.AddVariable("cosmict_flag_2",&tagger.cosmict_flag_2);
  reader_nc_delta.AddVariable("cosmict_2_filled",&tagger.cosmict_2_filled);
  reader_nc_delta.AddVariable("cosmict_2_particle_type",&tagger.cosmict_2_particle_type);
  reader_nc_delta.AddVariable("cosmict_2_n_muon_tracks",&tagger.cosmict_2_n_muon_tracks);
  reader_nc_delta.AddVariable("cosmict_2_total_shower_length",&tagger.cosmict_2_total_shower_length);
  reader_nc_delta.AddVariable("cosmict_2_flag_inside",&tagger.cosmict_2_flag_inside);
  reader_nc_delta.AddVariable("cosmict_2_angle_beam",&tagger.cosmict_2_angle_beam);
  reader_nc_delta.AddVariable("cosmict_2_flag_dir_weak",&tagger.cosmict_2_flag_dir_weak);
  reader_nc_delta.AddVariable("cosmict_2_dQ_dx_end",&tagger.cosmict_2_dQ_dx_end);
  reader_nc_delta.AddVariable("cosmict_2_dQ_dx_front",&tagger.cosmict_2_dQ_dx_front);
  reader_nc_delta.AddVariable("cosmict_2_theta",&tagger.cosmict_2_theta);
  reader_nc_delta.AddVariable("cosmict_2_phi",&tagger.cosmict_2_phi);
  reader_nc_delta.AddVariable("cosmict_2_valid_tracks",&tagger.cosmict_2_valid_tracks);
  reader_nc_delta.AddVariable("cosmict_flag_4",&tagger.cosmict_flag_4);
  reader_nc_delta.AddVariable("cosmict_4_filled",&tagger.cosmict_4_filled);
  reader_nc_delta.AddVariable("cosmict_4_flag_inside",&tagger.cosmict_4_flag_inside);
  reader_nc_delta.AddVariable("cosmict_4_angle_beam",&tagger.cosmict_4_angle_beam);
  reader_nc_delta.AddVariable("cosmict_4_connected_showers",&tagger.cosmict_4_connected_showers);
  reader_nc_delta.AddVariable("cosmict_flag_3",&tagger.cosmict_flag_3);
  reader_nc_delta.AddVariable("cosmict_3_filled",&tagger.cosmict_3_filled);
  reader_nc_delta.AddVariable("cosmict_3_flag_inside",&tagger.cosmict_3_flag_inside);
  reader_nc_delta.AddVariable("cosmict_3_angle_beam",&tagger.cosmict_3_angle_beam);
  reader_nc_delta.AddVariable("cosmict_3_flag_dir_weak",&tagger.cosmict_3_flag_dir_weak);
  reader_nc_delta.AddVariable("cosmict_3_dQ_dx_end",&tagger.cosmict_3_dQ_dx_end);
  reader_nc_delta.AddVariable("cosmict_3_dQ_dx_front",&tagger.cosmict_3_dQ_dx_front);
  reader_nc_delta.AddVariable("cosmict_3_theta",&tagger.cosmict_3_theta);
  reader_nc_delta.AddVariable("cosmict_3_phi",&tagger.cosmict_3_phi);
  reader_nc_delta.AddVariable("cosmict_3_valid_tracks",&tagger.cosmict_3_valid_tracks);
  reader_nc_delta.AddVariable("cosmict_flag_5",&tagger.cosmict_flag_5);
  reader_nc_delta.AddVariable("cosmict_5_filled",&tagger.cosmict_5_filled);
  reader_nc_delta.AddVariable("cosmict_5_flag_inside",&tagger.cosmict_5_flag_inside);
  reader_nc_delta.AddVariable("cosmict_5_angle_beam",&tagger.cosmict_5_angle_beam);
  reader_nc_delta.AddVariable("cosmict_5_connected_showers",&tagger.cosmict_5_connected_showers);
  reader_nc_delta.AddVariable("cosmict_flag_6",&tagger.cosmict_flag_6);
  reader_nc_delta.AddVariable("cosmict_6_filled",&tagger.cosmict_6_filled);
  reader_nc_delta.AddVariable("cosmict_6_flag_dir_weak",&tagger.cosmict_6_flag_dir_weak);
  reader_nc_delta.AddVariable("cosmict_6_flag_inside",&tagger.cosmict_6_flag_inside);
  reader_nc_delta.AddVariable("cosmict_6_angle",&tagger.cosmict_6_angle);
  reader_nc_delta.AddVariable("cosmict_flag_7",&tagger.cosmict_flag_7);
  reader_nc_delta.AddVariable("cosmict_7_filled",&tagger.cosmict_7_filled);
  reader_nc_delta.AddVariable("cosmict_7_flag_sec",&tagger.cosmict_7_flag_sec);
  reader_nc_delta.AddVariable("cosmict_7_n_muon_tracks",&tagger.cosmict_7_n_muon_tracks);
  reader_nc_delta.AddVariable("cosmict_7_total_shower_length",&tagger.cosmict_7_total_shower_length);
  reader_nc_delta.AddVariable("cosmict_7_flag_inside",&tagger.cosmict_7_flag_inside);
  reader_nc_delta.AddVariable("cosmict_7_angle_beam",&tagger.cosmict_7_angle_beam);
  reader_nc_delta.AddVariable("cosmict_7_flag_dir_weak",&tagger.cosmict_7_flag_dir_weak);
  reader_nc_delta.AddVariable("cosmict_7_dQ_dx_end",&tagger.cosmict_7_dQ_dx_end);
  reader_nc_delta.AddVariable("cosmict_7_dQ_dx_front",&tagger.cosmict_7_dQ_dx_front);
  reader_nc_delta.AddVariable("cosmict_7_theta",&tagger.cosmict_7_theta);
  reader_nc_delta.AddVariable("cosmict_7_phi",&tagger.cosmict_7_phi);
  reader_nc_delta.AddVariable("cosmict_flag_8",&tagger.cosmict_flag_8);
  reader_nc_delta.AddVariable("cosmict_8_filled",&tagger.cosmict_8_filled);
  reader_nc_delta.AddVariable("cosmict_8_flag_out",&tagger.cosmict_8_flag_out);
  reader_nc_delta.AddVariable("cosmict_8_muon_length",&tagger.cosmict_8_muon_length);
  reader_nc_delta.AddVariable("cosmict_8_acc_length",&tagger.cosmict_8_acc_length);
  reader_nc_delta.AddVariable("cosmict_flag_9",&tagger.cosmict_flag_9);
  reader_nc_delta.AddVariable("cosmic_flag",&tagger.cosmic_flag);
  reader_nc_delta.AddVariable("cosmic_filled",&tagger.cosmic_filled);
  reader_nc_delta.AddVariable("cosmict_flag",&tagger.cosmict_flag);
  reader_nc_delta.AddVariable("numu_cc_flag",&tagger.numu_cc_flag);
  reader_nc_delta.AddVariable("cosmict_flag_1",&tagger.cosmict_flag_1);
  reader_nc_delta.AddVariable("cme_mu_energy",&tagger.cme_mu_energy);
  reader_nc_delta.AddVariable("cme_energy",&tagger.cme_energy);
  reader_nc_delta.AddVariable("cme_mu_length",&tagger.cme_mu_length);
  reader_nc_delta.AddVariable("cme_length",&tagger.cme_length);
  reader_nc_delta.AddVariable("cme_angle_beam",&tagger.cme_angle_beam);
  reader_nc_delta.AddVariable("anc_angle",&tagger.anc_angle);
  reader_nc_delta.AddVariable("anc_max_angle",&tagger.anc_max_angle);
  reader_nc_delta.AddVariable("anc_max_length",&tagger.anc_max_length);
  reader_nc_delta.AddVariable("anc_acc_forward_length",&tagger.anc_acc_forward_length);
  reader_nc_delta.AddVariable("anc_acc_backward_length",&tagger.anc_acc_backward_length);
  reader_nc_delta.AddVariable("anc_acc_forward_length1",&tagger.anc_acc_forward_length1);
  reader_nc_delta.AddVariable("anc_shower_main_length",&tagger.anc_shower_main_length);
  reader_nc_delta.AddVariable("anc_shower_total_length",&tagger.anc_shower_total_length);
  reader_nc_delta.AddVariable("anc_flag_main_outside",&tagger.anc_flag_main_outside);
  reader_nc_delta.AddVariable("gap_flag_prolong_u",&tagger.gap_flag_prolong_u);
  reader_nc_delta.AddVariable("gap_flag_prolong_v",&tagger.gap_flag_prolong_v);
  reader_nc_delta.AddVariable("gap_flag_prolong_w",&tagger.gap_flag_prolong_w);
  reader_nc_delta.AddVariable("gap_flag_parallel",&tagger.gap_flag_parallel);
  reader_nc_delta.AddVariable("gap_n_points",&tagger.gap_n_points);
  reader_nc_delta.AddVariable("gap_n_bad",&tagger.gap_n_bad);
  reader_nc_delta.AddVariable("gap_energy",&tagger.gap_energy);
  reader_nc_delta.AddVariable("gap_num_valid_tracks",&tagger.gap_num_valid_tracks);
  reader_nc_delta.AddVariable("gap_flag_single_shower",&tagger.gap_flag_single_shower);
  reader_nc_delta.AddVariable("hol_1_n_valid_tracks",&tagger.hol_1_n_valid_tracks);
  reader_nc_delta.AddVariable("hol_1_min_angle",&tagger.hol_1_min_angle);
  reader_nc_delta.AddVariable("hol_1_energy",&tagger.hol_1_energy);
  reader_nc_delta.AddVariable("hol_1_flag_all_shower",&tagger.hol_1_flag_all_shower);
  reader_nc_delta.AddVariable("hol_1_min_length",&tagger.hol_1_min_length);
  reader_nc_delta.AddVariable("hol_2_min_angle",&tagger.hol_2_min_angle);
  reader_nc_delta.AddVariable("hol_2_medium_dQ_dx",&tagger.hol_2_medium_dQ_dx);
  reader_nc_delta.AddVariable("hol_2_ncount",&tagger.hol_2_ncount);
  reader_nc_delta.AddVariable("lol_3_angle_beam",&tagger.lol_3_angle_beam);
  reader_nc_delta.AddVariable("lol_3_n_valid_tracks",&tagger.lol_3_n_valid_tracks);
  reader_nc_delta.AddVariable("lol_3_min_angle",&tagger.lol_3_min_angle);
  reader_nc_delta.AddVariable("lol_3_vtx_n_segs",&tagger.lol_3_vtx_n_segs);
  reader_nc_delta.AddVariable("lol_3_shower_main_length",&tagger.lol_3_shower_main_length);
  reader_nc_delta.AddVariable("lol_3_n_out",&tagger.lol_3_n_out);
  reader_nc_delta.AddVariable("lol_3_n_sum",&tagger.lol_3_n_sum);
  reader_nc_delta.AddVariable("mgo_energy",&tagger.mgo_energy);
  reader_nc_delta.AddVariable("mgo_max_energy",&tagger.mgo_max_energy);
  reader_nc_delta.AddVariable("mgo_total_energy",&tagger.mgo_total_energy);
  reader_nc_delta.AddVariable("mgo_n_showers",&tagger.mgo_n_showers);
  reader_nc_delta.AddVariable("mgo_max_energy_1",&tagger.mgo_max_energy_1);
  reader_nc_delta.AddVariable("mgo_max_energy_2",&tagger.mgo_max_energy_2);
  reader_nc_delta.AddVariable("mgo_total_other_energy",&tagger.mgo_total_other_energy);
  reader_nc_delta.AddVariable("mgo_n_total_showers",&tagger.mgo_n_total_showers);
  reader_nc_delta.AddVariable("mgo_total_other_energy_1",&tagger.mgo_total_other_energy_1);
  reader_nc_delta.AddVariable("mgt_flag_single_shower",&tagger.mgt_flag_single_shower);
  reader_nc_delta.AddVariable("mgt_max_energy",&tagger.mgt_max_energy);
  reader_nc_delta.AddVariable("mgt_total_other_energy",&tagger.mgt_total_other_energy);
  reader_nc_delta.AddVariable("mgt_max_energy_1",&tagger.mgt_max_energy_1);
  reader_nc_delta.AddVariable("mgt_e_indirect_max_energy",&tagger.mgt_e_indirect_max_energy);
  reader_nc_delta.AddVariable("mgt_e_direct_max_energy",&tagger.mgt_e_direct_max_energy);
  reader_nc_delta.AddVariable("mgt_n_direct_showers",&tagger.mgt_n_direct_showers);
  reader_nc_delta.AddVariable("mgt_e_direct_total_energy",&tagger.mgt_e_direct_total_energy);
  reader_nc_delta.AddVariable("mgt_flag_indirect_max_pio",&tagger.mgt_flag_indirect_max_pio);
  reader_nc_delta.AddVariable("mgt_e_indirect_total_energy",&tagger.mgt_e_indirect_total_energy);
  reader_nc_delta.AddVariable("mip_quality_energy",&tagger.mip_quality_energy);
  reader_nc_delta.AddVariable("mip_quality_overlap",&tagger.mip_quality_overlap);
  reader_nc_delta.AddVariable("mip_quality_n_showers",&tagger.mip_quality_n_showers);
  reader_nc_delta.AddVariable("mip_quality_n_tracks",&tagger.mip_quality_n_tracks);
  reader_nc_delta.AddVariable("mip_quality_flag_inside_pi0",&tagger.mip_quality_flag_inside_pi0);
  reader_nc_delta.AddVariable("mip_quality_n_pi0_showers",&tagger.mip_quality_n_pi0_showers);
  reader_nc_delta.AddVariable("mip_quality_shortest_length",&tagger.mip_quality_shortest_length);
  reader_nc_delta.AddVariable("mip_quality_acc_length",&tagger.mip_quality_acc_length);
  reader_nc_delta.AddVariable("mip_quality_shortest_angle",&tagger.mip_quality_shortest_angle);
  reader_nc_delta.AddVariable("mip_quality_flag_proton",&tagger.mip_quality_flag_proton);
  reader_nc_delta.AddVariable("br1_1_shower_type",&tagger.br1_1_shower_type);
  reader_nc_delta.AddVariable("br1_1_vtx_n_segs",&tagger.br1_1_vtx_n_segs);
  reader_nc_delta.AddVariable("br1_1_energy",&tagger.br1_1_energy);
  reader_nc_delta.AddVariable("br1_1_n_segs",&tagger.br1_1_n_segs);
  reader_nc_delta.AddVariable("br1_1_flag_sg_topology",&tagger.br1_1_flag_sg_topology);
  reader_nc_delta.AddVariable("br1_1_flag_sg_trajectory",&tagger.br1_1_flag_sg_trajectory);
  reader_nc_delta.AddVariable("br1_1_sg_length",&tagger.br1_1_sg_length);
  reader_nc_delta.AddVariable("br1_2_n_connected",&tagger.br1_2_n_connected);
  reader_nc_delta.AddVariable("br1_2_max_length",&tagger.br1_2_max_length);
  reader_nc_delta.AddVariable("br1_2_n_connected_1",&tagger.br1_2_n_connected_1);
  reader_nc_delta.AddVariable("br1_2_n_shower_segs",&tagger.br1_2_n_shower_segs);
  reader_nc_delta.AddVariable("br1_2_max_length_ratio",&tagger.br1_2_max_length_ratio);
  reader_nc_delta.AddVariable("br1_2_shower_length",&tagger.br1_2_shower_length);
  reader_nc_delta.AddVariable("br1_3_n_connected_p",&tagger.br1_3_n_connected_p);
  reader_nc_delta.AddVariable("br1_3_max_length_p",&tagger.br1_3_max_length_p);
  reader_nc_delta.AddVariable("br1_3_n_shower_main_segs",&tagger.br1_3_n_shower_main_segs);
  reader_nc_delta.AddVariable("br3_1_energy",&tagger.br3_1_energy);
  reader_nc_delta.AddVariable("br3_1_n_shower_segments",&tagger.br3_1_n_shower_segments);
  reader_nc_delta.AddVariable("br3_1_sg_flag_trajectory",&tagger.br3_1_sg_flag_trajectory);
  reader_nc_delta.AddVariable("br3_1_sg_direct_length",&tagger.br3_1_sg_direct_length);
  reader_nc_delta.AddVariable("br3_1_sg_length",&tagger.br3_1_sg_length);
  reader_nc_delta.AddVariable("br3_1_total_main_length",&tagger.br3_1_total_main_length);
  reader_nc_delta.AddVariable("br3_1_total_length",&tagger.br3_1_total_length);
  reader_nc_delta.AddVariable("br3_1_iso_angle",&tagger.br3_1_iso_angle);
  reader_nc_delta.AddVariable("br3_1_sg_flag_topology",&tagger.br3_1_sg_flag_topology);
  reader_nc_delta.AddVariable("br3_2_n_ele",&tagger.br3_2_n_ele);
  reader_nc_delta.AddVariable("br3_2_n_other",&tagger.br3_2_n_other);
  reader_nc_delta.AddVariable("br3_2_other_fid",&tagger.br3_2_other_fid);
  reader_nc_delta.AddVariable("br3_4_acc_length",&tagger.br3_4_acc_length);
  reader_nc_delta.AddVariable("br3_4_total_length",&tagger.br3_4_total_length);
  reader_nc_delta.AddVariable("br3_7_min_angle",&tagger.br3_7_min_angle);
  reader_nc_delta.AddVariable("br3_8_max_dQ_dx",&tagger.br3_8_max_dQ_dx);
  reader_nc_delta.AddVariable("br3_8_n_main_segs",&tagger.br3_8_n_main_segs);
  reader_nc_delta.AddVariable("br4_1_shower_main_length",&tagger.br4_1_shower_main_length);
  reader_nc_delta.AddVariable("br4_1_shower_total_length",&tagger.br4_1_shower_total_length);
  reader_nc_delta.AddVariable("br4_1_min_dis",&tagger.br4_1_min_dis);
  reader_nc_delta.AddVariable("br4_1_energy",&tagger.br4_1_energy);
  reader_nc_delta.AddVariable("br4_1_flag_avoid_muon_check",&tagger.br4_1_flag_avoid_muon_check);
  reader_nc_delta.AddVariable("br4_1_n_vtx_segs",&tagger.br4_1_n_vtx_segs);
  reader_nc_delta.AddVariable("br4_1_n_main_segs",&tagger.br4_1_n_main_segs);
  reader_nc_delta.AddVariable("br4_2_ratio_45",&tagger.br4_2_ratio_45);
  reader_nc_delta.AddVariable("br4_2_ratio_35",&tagger.br4_2_ratio_35);
  reader_nc_delta.AddVariable("br4_2_ratio_25",&tagger.br4_2_ratio_25);
  reader_nc_delta.AddVariable("br4_2_ratio_15",&tagger.br4_2_ratio_15);
  reader_nc_delta.AddVariable("br4_2_ratio1_45",&tagger.br4_2_ratio1_45);
  reader_nc_delta.AddVariable("br4_2_ratio1_35",&tagger.br4_2_ratio1_35);
  reader_nc_delta.AddVariable("br4_2_ratio1_25",&tagger.br4_2_ratio1_25);
  reader_nc_delta.AddVariable("br4_2_ratio1_15",&tagger.br4_2_ratio1_15);
  reader_nc_delta.AddVariable("br4_2_iso_angle",&tagger.br4_2_iso_angle);
  reader_nc_delta.AddVariable("br4_2_iso_angle1",&tagger.br4_2_iso_angle1);
  reader_nc_delta.AddVariable("br4_2_angle",&tagger.br4_2_angle);
  reader_nc_delta.AddVariable("tro_3_stem_length",&tagger.tro_3_stem_length);
  reader_nc_delta.AddVariable("tro_3_n_muon_segs",&tagger.tro_3_n_muon_segs);
  reader_nc_delta.AddVariable("stem_dir_flag_single_shower",&tagger.stem_dir_flag_single_shower);
  reader_nc_delta.AddVariable("stem_dir_angle",&tagger.stem_dir_angle);
  reader_nc_delta.AddVariable("stem_dir_energy",&tagger.stem_dir_energy);
  reader_nc_delta.AddVariable("stem_dir_angle1",&tagger.stem_dir_angle1);
  reader_nc_delta.AddVariable("stem_dir_angle2",&tagger.stem_dir_angle2);
  reader_nc_delta.AddVariable("stem_dir_angle3",&tagger.stem_dir_angle3);
  reader_nc_delta.AddVariable("stem_dir_ratio",&tagger.stem_dir_ratio);
  reader_nc_delta.AddVariable("br2_num_valid_tracks",&tagger.br2_num_valid_tracks);
  reader_nc_delta.AddVariable("br2_n_shower_main_segs",&tagger.br2_n_shower_main_segs);
  reader_nc_delta.AddVariable("br2_max_angle",&tagger.br2_max_angle);
  reader_nc_delta.AddVariable("br2_sg_length",&tagger.br2_sg_length);
  reader_nc_delta.AddVariable("br2_flag_sg_trajectory",&tagger.br2_flag_sg_trajectory);
  reader_nc_delta.AddVariable("stem_len_energy",&tagger.stem_len_energy);
  reader_nc_delta.AddVariable("stem_len_length",&tagger.stem_len_length);
  reader_nc_delta.AddVariable("stem_len_flag_avoid_muon_check",&tagger.stem_len_flag_avoid_muon_check);
  reader_nc_delta.AddVariable("stem_len_num_daughters",&tagger.stem_len_num_daughters);
  reader_nc_delta.AddVariable("stem_len_daughter_length",&tagger.stem_len_daughter_length);
  reader_nc_delta.AddVariable("brm_n_mu_segs",&tagger.brm_n_mu_segs);
  reader_nc_delta.AddVariable("brm_Ep",&tagger.brm_Ep);
  reader_nc_delta.AddVariable("brm_acc_length",&tagger.brm_acc_length);
  reader_nc_delta.AddVariable("brm_shower_total_length",&tagger.brm_shower_total_length);
  reader_nc_delta.AddVariable("brm_connected_length",&tagger.brm_connected_length);
  reader_nc_delta.AddVariable("brm_n_size",&tagger.brm_n_size);
  reader_nc_delta.AddVariable("brm_acc_direct_length",&tagger.brm_acc_direct_length);
  reader_nc_delta.AddVariable("brm_n_shower_main_segs",&tagger.brm_n_shower_main_segs);
  reader_nc_delta.AddVariable("brm_n_mu_main",&tagger.brm_n_mu_main);
  reader_nc_delta.AddVariable("lem_shower_main_length",&tagger.lem_shower_main_length);
  reader_nc_delta.AddVariable("lem_n_3seg",&tagger.lem_n_3seg);
  reader_nc_delta.AddVariable("lem_e_charge",&tagger.lem_e_charge);
  reader_nc_delta.AddVariable("lem_e_dQdx",&tagger.lem_e_dQdx);
  reader_nc_delta.AddVariable("lem_shower_num_main_segs",&tagger.lem_shower_num_main_segs);
  reader_nc_delta.AddVariable("stw_1_energy",&tagger.stw_1_energy);
  reader_nc_delta.AddVariable("stw_1_dis",&tagger.stw_1_dis);
  reader_nc_delta.AddVariable("stw_1_dQ_dx",&tagger.stw_1_dQ_dx);
  reader_nc_delta.AddVariable("stw_1_flag_single_shower",&tagger.stw_1_flag_single_shower);
  reader_nc_delta.AddVariable("stw_1_n_pi0",&tagger.stw_1_n_pi0);
  reader_nc_delta.AddVariable("stw_1_num_valid_tracks",&tagger.stw_1_num_valid_tracks);
  reader_nc_delta.AddVariable("spt_shower_main_length",&tagger.spt_shower_main_length);
  reader_nc_delta.AddVariable("spt_shower_total_length",&tagger.spt_shower_total_length);
  reader_nc_delta.AddVariable("spt_angle_beam",&tagger.spt_angle_beam);
  reader_nc_delta.AddVariable("spt_angle_vertical",&tagger.spt_angle_vertical);
  reader_nc_delta.AddVariable("spt_max_dQ_dx",&tagger.spt_max_dQ_dx);
  reader_nc_delta.AddVariable("spt_angle_beam_1",&tagger.spt_angle_beam_1);
  reader_nc_delta.AddVariable("spt_angle_drift",&tagger.spt_angle_drift);
  reader_nc_delta.AddVariable("spt_angle_drift_1",&tagger.spt_angle_drift_1);
  reader_nc_delta.AddVariable("spt_num_valid_tracks",&tagger.spt_num_valid_tracks);
  reader_nc_delta.AddVariable("spt_n_vtx_segs",&tagger.spt_n_vtx_segs);
  reader_nc_delta.AddVariable("spt_max_length",&tagger.spt_max_length);
  reader_nc_delta.AddVariable("mip_energy",&tagger.mip_energy);
  reader_nc_delta.AddVariable("mip_n_end_reduction",&tagger.mip_n_end_reduction);
  reader_nc_delta.AddVariable("mip_n_first_mip",&tagger.mip_n_first_mip);
  reader_nc_delta.AddVariable("mip_n_first_non_mip",&tagger.mip_n_first_non_mip);
  reader_nc_delta.AddVariable("mip_n_first_non_mip_1",&tagger.mip_n_first_non_mip_1);
  reader_nc_delta.AddVariable("mip_n_first_non_mip_2",&tagger.mip_n_first_non_mip_2);
  reader_nc_delta.AddVariable("mip_vec_dQ_dx_0",&tagger.mip_vec_dQ_dx_0);
  reader_nc_delta.AddVariable("mip_vec_dQ_dx_1",&tagger.mip_vec_dQ_dx_1);
  reader_nc_delta.AddVariable("mip_max_dQ_dx_sample",&tagger.mip_max_dQ_dx_sample);
  reader_nc_delta.AddVariable("mip_n_below_threshold",&tagger.mip_n_below_threshold);
  reader_nc_delta.AddVariable("mip_n_below_zero",&tagger.mip_n_below_zero);
  reader_nc_delta.AddVariable("mip_n_lowest",&tagger.mip_n_lowest);
  reader_nc_delta.AddVariable("mip_n_highest",&tagger.mip_n_highest);
  reader_nc_delta.AddVariable("mip_lowest_dQ_dx",&tagger.mip_lowest_dQ_dx);
  reader_nc_delta.AddVariable("mip_highest_dQ_dx",&tagger.mip_highest_dQ_dx);
  reader_nc_delta.AddVariable("mip_medium_dQ_dx",&tagger.mip_medium_dQ_dx);
  reader_nc_delta.AddVariable("mip_stem_length",&tagger.mip_stem_length);
  reader_nc_delta.AddVariable("mip_length_main",&tagger.mip_length_main);
  reader_nc_delta.AddVariable("mip_length_total",&tagger.mip_length_total);
  reader_nc_delta.AddVariable("mip_angle_beam",&tagger.mip_angle_beam);
  reader_nc_delta.AddVariable("mip_iso_angle",&tagger.mip_iso_angle);
  reader_nc_delta.AddVariable("mip_n_vertex",&tagger.mip_n_vertex);
  reader_nc_delta.AddVariable("mip_n_good_tracks",&tagger.mip_n_good_tracks);
  reader_nc_delta.AddVariable("mip_E_indirect_max_energy",&tagger.mip_E_indirect_max_energy);
  reader_nc_delta.AddVariable("mip_flag_all_above",&tagger.mip_flag_all_above);
  reader_nc_delta.AddVariable("mip_min_dQ_dx_5",&tagger.mip_min_dQ_dx_5);
  reader_nc_delta.AddVariable("mip_n_other_vertex",&tagger.mip_n_other_vertex);
  reader_nc_delta.AddVariable("mip_n_stem_size",&tagger.mip_n_stem_size);
  reader_nc_delta.AddVariable("mip_flag_stem_trajectory",&tagger.mip_flag_stem_trajectory);
  reader_nc_delta.AddVariable("mip_min_dis",&tagger.mip_min_dis);
  reader_nc_delta.AddVariable("vis_1_n_vtx_segs",&tagger.vis_1_n_vtx_segs);
  reader_nc_delta.AddVariable("vis_1_energy",&tagger.vis_1_energy);
  reader_nc_delta.AddVariable("vis_1_num_good_tracks",&tagger.vis_1_num_good_tracks);
  reader_nc_delta.AddVariable("vis_1_max_angle",&tagger.vis_1_max_angle);
  reader_nc_delta.AddVariable("vis_1_max_shower_angle",&tagger.vis_1_max_shower_angle);
  reader_nc_delta.AddVariable("vis_1_tmp_length1",&tagger.vis_1_tmp_length1);
  reader_nc_delta.AddVariable("vis_1_tmp_length2",&tagger.vis_1_tmp_length2);
  reader_nc_delta.AddVariable("vis_2_n_vtx_segs",&tagger.vis_2_n_vtx_segs);
  reader_nc_delta.AddVariable("vis_2_min_angle",&tagger.vis_2_min_angle);
  reader_nc_delta.AddVariable("vis_2_min_weak_track",&tagger.vis_2_min_weak_track);
  reader_nc_delta.AddVariable("vis_2_angle_beam",&tagger.vis_2_angle_beam);
  reader_nc_delta.AddVariable("vis_2_min_angle1",&tagger.vis_2_min_angle1);
  reader_nc_delta.AddVariable("vis_2_iso_angle1",&tagger.vis_2_iso_angle1);
  reader_nc_delta.AddVariable("vis_2_min_medium_dQ_dx",&tagger.vis_2_min_medium_dQ_dx);
  reader_nc_delta.AddVariable("vis_2_min_length",&tagger.vis_2_min_length);
  reader_nc_delta.AddVariable("vis_2_sg_length",&tagger.vis_2_sg_length);
  reader_nc_delta.AddVariable("vis_2_max_angle",&tagger.vis_2_max_angle);
  reader_nc_delta.AddVariable("vis_2_max_weak_track",&tagger.vis_2_max_weak_track);
  reader_nc_delta.AddVariable("pio_1_mass",&tagger.pio_1_mass);
  reader_nc_delta.AddVariable("pio_1_pio_type",&tagger.pio_1_pio_type);
  reader_nc_delta.AddVariable("pio_1_energy_1",&tagger.pio_1_energy_1);
  reader_nc_delta.AddVariable("pio_1_energy_2",&tagger.pio_1_energy_2);
  reader_nc_delta.AddVariable("pio_1_dis_1",&tagger.pio_1_dis_1);
  reader_nc_delta.AddVariable("pio_1_dis_2",&tagger.pio_1_dis_2);
  reader_nc_delta.AddVariable("pio_mip_id",&tagger.pio_mip_id);
  reader_nc_delta.AddVariable("mip_vec_dQ_dx_2",&tagger.mip_vec_dQ_dx_2);
  reader_nc_delta.AddVariable("mip_vec_dQ_dx_3",&tagger.mip_vec_dQ_dx_3);
  reader_nc_delta.AddVariable("mip_vec_dQ_dx_4",&tagger.mip_vec_dQ_dx_4);
  reader_nc_delta.AddVariable("mip_vec_dQ_dx_5",&tagger.mip_vec_dQ_dx_5);
  reader_nc_delta.AddVariable("mip_vec_dQ_dx_6",&tagger.mip_vec_dQ_dx_6);
  reader_nc_delta.AddVariable("mip_vec_dQ_dx_7",&tagger.mip_vec_dQ_dx_7);
  reader_nc_delta.AddVariable("mip_vec_dQ_dx_8",&tagger.mip_vec_dQ_dx_8);
  reader_nc_delta.AddVariable("mip_vec_dQ_dx_9",&tagger.mip_vec_dQ_dx_9);
  reader_nc_delta.AddVariable("mip_vec_dQ_dx_10",&tagger.mip_vec_dQ_dx_10);
  reader_nc_delta.AddVariable("mip_vec_dQ_dx_11",&tagger.mip_vec_dQ_dx_11);
  reader_nc_delta.AddVariable("mip_vec_dQ_dx_12",&tagger.mip_vec_dQ_dx_12);
  reader_nc_delta.AddVariable("mip_vec_dQ_dx_13",&tagger.mip_vec_dQ_dx_13);
  reader_nc_delta.AddVariable("mip_vec_dQ_dx_14",&tagger.mip_vec_dQ_dx_14);
  reader_nc_delta.AddVariable("mip_vec_dQ_dx_15",&tagger.mip_vec_dQ_dx_15);
  reader_nc_delta.AddVariable("mip_vec_dQ_dx_16",&tagger.mip_vec_dQ_dx_16);
  reader_nc_delta.AddVariable("mip_vec_dQ_dx_17",&tagger.mip_vec_dQ_dx_17);
  reader_nc_delta.AddVariable("mip_vec_dQ_dx_18",&tagger.mip_vec_dQ_dx_18);
  reader_nc_delta.AddVariable("mip_vec_dQ_dx_19",&tagger.mip_vec_dQ_dx_19);
  reader_nc_delta.AddVariable("cosmict_10_score",&tagger.cosmict_10_score);
  reader_nc_delta.AddVariable("numu_1_score",&tagger.numu_1_score);
  reader_nc_delta.AddVariable("numu_2_score",&tagger.numu_2_score);
  reader_nc_delta.AddVariable("tro_5_score",&tagger.tro_5_score);
  reader_nc_delta.AddVariable("tro_4_score",&tagger.tro_4_score);
  reader_nc_delta.AddVariable("tro_2_score",&tagger.tro_2_score);
  reader_nc_delta.AddVariable("tro_1_score",&tagger.tro_1_score);
  reader_nc_delta.AddVariable("stw_4_score",&tagger.stw_4_score);
  reader_nc_delta.AddVariable("stw_3_score",&tagger.stw_3_score);
  reader_nc_delta.AddVariable("stw_2_score",&tagger.stw_2_score);
  reader_nc_delta.AddVariable("sig_2_score",&tagger.sig_2_score);
  reader_nc_delta.AddVariable("sig_1_score",&tagger.sig_1_score);
  reader_nc_delta.AddVariable("pio_2_score",&tagger.pio_2_score);
  reader_nc_delta.AddVariable("lol_2_score",&tagger.lol_2_score);
  reader_nc_delta.AddVariable("lol_1_score",&tagger.lol_1_score);
  reader_nc_delta.AddVariable("br3_6_score",&tagger.br3_6_score);
  reader_nc_delta.AddVariable("br3_5_score",&tagger.br3_5_score);
  reader_nc_delta.AddVariable("br3_3_score",&tagger.br3_3_score);

  reader_nc_delta.AddVariable("kine_reco_add_energy",&kine.kine_reco_add_energy);
  reader_nc_delta.AddVariable("kine_pio_mass",&kine.kine_pio_mass);

  float temp_kine_pio_flag;
  reader_nc_delta.AddVariable("kine_pio_flag",&temp_kine_pio_flag);

  reader_nc_delta.AddVariable("kine_pio_vtx_dis",&kine.kine_pio_vtx_dis);
  reader_nc_delta.AddVariable("kine_pio_energy_1",&kine.kine_pio_energy_1);
  reader_nc_delta.AddVariable("kine_pio_theta_1",&kine.kine_pio_theta_1);
  reader_nc_delta.AddVariable("kine_pio_phi_1",&kine.kine_pio_phi_1);
  reader_nc_delta.AddVariable("kine_pio_dis_1",&kine.kine_pio_dis_1);
  reader_nc_delta.AddVariable("kine_pio_energy_2",&kine.kine_pio_energy_2);
  reader_nc_delta.AddVariable("kine_pio_theta_2",&kine.kine_pio_theta_2);
  reader_nc_delta.AddVariable("kine_pio_phi_2",&kine.kine_pio_phi_2);
  reader_nc_delta.AddVariable("kine_pio_dis_2",&kine.kine_pio_dis_2);
  reader_nc_delta.AddVariable("kine_pio_angle",&kine.kine_pio_angle);
  
  //  reader_nc_delta.BookMVA( "MyBDT", "weights/NC_Delta_final_weights.xml");
  reader_nc_delta.BookMVA( "MyBDT", "weights/NC_Delta_prev_training_plus_even_subrun_ncpi0_ncdelta.xml");

  // Now NCpio by Giacomo @ Yale
  TMVA::Reader reader_nc_pi0;
  reader_nc_pi0.AddVariable("cosmic_n_solid_tracks",&tagger.cosmic_n_solid_tracks);
  reader_nc_pi0.AddVariable("cosmic_energy_main_showers",&tagger.cosmic_energy_main_showers);
  reader_nc_pi0.AddVariable("cosmic_energy_direct_showers",&tagger.cosmic_energy_direct_showers);
  reader_nc_pi0.AddVariable("cosmic_energy_indirect_showers",&tagger.cosmic_energy_indirect_showers);
  reader_nc_pi0.AddVariable("cosmic_n_direct_showers",&tagger.cosmic_n_direct_showers);
  reader_nc_pi0.AddVariable("cosmic_n_indirect_showers",&tagger.cosmic_n_indirect_showers);
  reader_nc_pi0.AddVariable("cosmic_n_main_showers",&tagger.cosmic_n_main_showers);
  reader_nc_pi0.AddVariable("gap_flag_prolong_u",&tagger.gap_flag_prolong_u);
  reader_nc_pi0.AddVariable("gap_flag_prolong_v",&tagger.gap_flag_prolong_v);
  reader_nc_pi0.AddVariable("gap_flag_prolong_w",&tagger.gap_flag_prolong_w);
  reader_nc_pi0.AddVariable("gap_flag_parallel",&tagger.gap_flag_parallel);
  reader_nc_pi0.AddVariable("gap_n_points",&tagger.gap_n_points);
  reader_nc_pi0.AddVariable("gap_n_bad",&tagger.gap_n_bad);
  reader_nc_pi0.AddVariable("gap_energy",&tagger.gap_energy);
  reader_nc_pi0.AddVariable("gap_num_valid_tracks",&tagger.gap_num_valid_tracks);
  reader_nc_pi0.AddVariable("gap_flag_single_shower",&tagger.gap_flag_single_shower);
  reader_nc_pi0.AddVariable("mip_quality_overlap",&tagger.mip_quality_overlap);
  reader_nc_pi0.AddVariable("mip_quality_n_showers",&tagger.mip_quality_n_showers);
  reader_nc_pi0.AddVariable("mip_quality_n_tracks",&tagger.mip_quality_n_tracks);
  reader_nc_pi0.AddVariable("mip_quality_flag_inside_pi0",&tagger.mip_quality_flag_inside_pi0);
  reader_nc_pi0.AddVariable("mip_quality_n_pi0_showers",&tagger.mip_quality_n_pi0_showers);
  reader_nc_pi0.AddVariable("mip_quality_shortest_length",&tagger.mip_quality_shortest_length);
  reader_nc_pi0.AddVariable("mip_quality_acc_length",&tagger.mip_quality_acc_length);
  reader_nc_pi0.AddVariable("mip_quality_shortest_angle",&tagger.mip_quality_shortest_angle);
  reader_nc_pi0.AddVariable("mip_quality_flag_proton",&tagger.mip_quality_flag_proton);
  reader_nc_pi0.AddVariable("mip_energy",&tagger.mip_energy);
  reader_nc_pi0.AddVariable("mip_n_end_reduction",&tagger.mip_n_end_reduction);
  reader_nc_pi0.AddVariable("mip_n_first_mip",&tagger.mip_n_first_mip);
  reader_nc_pi0.AddVariable("mip_n_first_non_mip",&tagger.mip_n_first_non_mip);
  reader_nc_pi0.AddVariable("mip_n_first_non_mip_1",&tagger.mip_n_first_non_mip_1);
  reader_nc_pi0.AddVariable("mip_n_first_non_mip_2",&tagger.mip_n_first_non_mip_2);
  reader_nc_pi0.AddVariable("mip_vec_dQ_dx_0",&tagger.mip_vec_dQ_dx_0);
  reader_nc_pi0.AddVariable("mip_vec_dQ_dx_1",&tagger.mip_vec_dQ_dx_1);
  reader_nc_pi0.AddVariable("mip_vec_dQ_dx_2",&tagger.mip_vec_dQ_dx_2);
  reader_nc_pi0.AddVariable("mip_vec_dQ_dx_3",&tagger.mip_vec_dQ_dx_3);
  reader_nc_pi0.AddVariable("mip_vec_dQ_dx_4",&tagger.mip_vec_dQ_dx_4);
  reader_nc_pi0.AddVariable("mip_vec_dQ_dx_5",&tagger.mip_vec_dQ_dx_5);
  reader_nc_pi0.AddVariable("mip_vec_dQ_dx_6",&tagger.mip_vec_dQ_dx_6);
  reader_nc_pi0.AddVariable("mip_vec_dQ_dx_7",&tagger.mip_vec_dQ_dx_7);
  reader_nc_pi0.AddVariable("mip_vec_dQ_dx_8",&tagger.mip_vec_dQ_dx_8);
  reader_nc_pi0.AddVariable("mip_vec_dQ_dx_9",&tagger.mip_vec_dQ_dx_9);
  reader_nc_pi0.AddVariable("mip_vec_dQ_dx_10",&tagger.mip_vec_dQ_dx_10);
  reader_nc_pi0.AddVariable("mip_vec_dQ_dx_11",&tagger.mip_vec_dQ_dx_11);
  reader_nc_pi0.AddVariable("mip_vec_dQ_dx_12",&tagger.mip_vec_dQ_dx_12);
  reader_nc_pi0.AddVariable("mip_vec_dQ_dx_13",&tagger.mip_vec_dQ_dx_13);
  reader_nc_pi0.AddVariable("mip_vec_dQ_dx_14",&tagger.mip_vec_dQ_dx_14);
  reader_nc_pi0.AddVariable("mip_vec_dQ_dx_15",&tagger.mip_vec_dQ_dx_15);
  reader_nc_pi0.AddVariable("mip_vec_dQ_dx_16",&tagger.mip_vec_dQ_dx_16);
  reader_nc_pi0.AddVariable("mip_vec_dQ_dx_17",&tagger.mip_vec_dQ_dx_17);
  reader_nc_pi0.AddVariable("mip_vec_dQ_dx_18",&tagger.mip_vec_dQ_dx_18);
  reader_nc_pi0.AddVariable("mip_vec_dQ_dx_19",&tagger.mip_vec_dQ_dx_19);
  reader_nc_pi0.AddVariable("mip_max_dQ_dx_sample",&tagger.mip_max_dQ_dx_sample);
  reader_nc_pi0.AddVariable("mip_n_below_threshold",&tagger.mip_n_below_threshold);
  reader_nc_pi0.AddVariable("mip_n_below_zero",&tagger.mip_n_below_zero);
  reader_nc_pi0.AddVariable("mip_n_lowest",&tagger.mip_n_lowest);
  reader_nc_pi0.AddVariable("mip_n_highest",&tagger.mip_n_highest);
  reader_nc_pi0.AddVariable("mip_lowest_dQ_dx",&tagger.mip_lowest_dQ_dx);
  reader_nc_pi0.AddVariable("mip_highest_dQ_dx",&tagger.mip_highest_dQ_dx);
  reader_nc_pi0.AddVariable("mip_medium_dQ_dx",&tagger.mip_medium_dQ_dx);
  reader_nc_pi0.AddVariable("mip_stem_length",&tagger.mip_stem_length);
  reader_nc_pi0.AddVariable("mip_length_main",&tagger.mip_length_main);
  reader_nc_pi0.AddVariable("mip_length_total",&tagger.mip_length_total);
  reader_nc_pi0.AddVariable("mip_angle_beam",&tagger.mip_angle_beam);
  reader_nc_pi0.AddVariable("mip_iso_angle",&tagger.mip_iso_angle);
  reader_nc_pi0.AddVariable("mip_n_vertex",&tagger.mip_n_vertex);
  reader_nc_pi0.AddVariable("mip_n_good_tracks",&tagger.mip_n_good_tracks);
  reader_nc_pi0.AddVariable("mip_E_indirect_max_energy",&tagger.mip_E_indirect_max_energy);
  reader_nc_pi0.AddVariable("mip_flag_all_above",&tagger.mip_flag_all_above);
  reader_nc_pi0.AddVariable("mip_min_dQ_dx_5",&tagger.mip_min_dQ_dx_5);
  reader_nc_pi0.AddVariable("mip_n_other_vertex",&tagger.mip_n_other_vertex);
  reader_nc_pi0.AddVariable("mip_n_stem_size",&tagger.mip_n_stem_size);
  reader_nc_pi0.AddVariable("mip_flag_stem_trajectory",&tagger.mip_flag_stem_trajectory);
  reader_nc_pi0.AddVariable("mip_min_dis",&tagger.mip_min_dis);
  reader_nc_pi0.AddVariable("pio_mip_id",&tagger.pio_mip_id);
  reader_nc_pi0.AddVariable("pio_flag_pio",&tagger.pio_flag_pio);
  reader_nc_pi0.AddVariable("pio_1_mass",&tagger.pio_1_mass);
  reader_nc_pi0.AddVariable("pio_1_pio_type",&tagger.pio_1_pio_type);
  reader_nc_pi0.AddVariable("pio_1_energy_1",&tagger.pio_1_energy_1);
  reader_nc_pi0.AddVariable("pio_1_energy_2",&tagger.pio_1_energy_2);
  reader_nc_pi0.AddVariable("pio_1_dis_1",&tagger.pio_1_dis_1);
  reader_nc_pi0.AddVariable("pio_1_dis_2",&tagger.pio_1_dis_2);
  reader_nc_pi0.AddVariable("mgo_max_energy",&tagger.mgo_max_energy);
  reader_nc_pi0.AddVariable("mgo_total_energy",&tagger.mgo_total_energy);
  reader_nc_pi0.AddVariable("mgo_n_showers",&tagger.mgo_n_showers);
  reader_nc_pi0.AddVariable("mgo_max_energy_1",&tagger.mgo_max_energy_1);
  reader_nc_pi0.AddVariable("mgo_max_energy_2",&tagger.mgo_max_energy_2);
  reader_nc_pi0.AddVariable("mgo_total_other_energy",&tagger.mgo_total_other_energy);
  reader_nc_pi0.AddVariable("mgo_n_total_showers",&tagger.mgo_n_total_showers);
  reader_nc_pi0.AddVariable("mgo_total_other_energy_1",&tagger.mgo_total_other_energy_1);
  reader_nc_pi0.AddVariable("mgt_total_other_energy",&tagger.mgt_total_other_energy);
  reader_nc_pi0.AddVariable("mgt_max_energy_1",&tagger.mgt_max_energy_1);
  reader_nc_pi0.AddVariable("mgt_e_indirect_max_energy",&tagger.mgt_e_indirect_max_energy);
  reader_nc_pi0.AddVariable("mgt_e_direct_max_energy",&tagger.mgt_e_direct_max_energy);
  reader_nc_pi0.AddVariable("mgt_n_direct_showers",&tagger.mgt_n_direct_showers);
  reader_nc_pi0.AddVariable("mgt_e_direct_total_energy",&tagger.mgt_e_direct_total_energy);
  reader_nc_pi0.AddVariable("mgt_flag_indirect_max_pio",&tagger.mgt_flag_indirect_max_pio);
  reader_nc_pi0.AddVariable("mgt_e_indirect_total_energy",&tagger.mgt_e_indirect_total_energy);
  reader_nc_pi0.AddVariable("stw_1_dis",&tagger.stw_1_dis);
  reader_nc_pi0.AddVariable("stw_1_dQ_dx",&tagger.stw_1_dQ_dx);
  reader_nc_pi0.AddVariable("stw_1_n_pi0",&tagger.stw_1_n_pi0);
  reader_nc_pi0.AddVariable("stw_1_num_valid_tracks",&tagger.stw_1_num_valid_tracks);
  reader_nc_pi0.AddVariable("spt_shower_main_length",&tagger.spt_shower_main_length);
  reader_nc_pi0.AddVariable("spt_shower_total_length",&tagger.spt_shower_total_length);
  reader_nc_pi0.AddVariable("spt_angle_beam",&tagger.spt_angle_beam);
  reader_nc_pi0.AddVariable("spt_angle_vertical",&tagger.spt_angle_vertical);
  reader_nc_pi0.AddVariable("spt_angle_beam_1",&tagger.spt_angle_beam_1);
  reader_nc_pi0.AddVariable("spt_angle_drift_1",&tagger.spt_angle_drift_1);
  reader_nc_pi0.AddVariable("spt_num_valid_tracks",&tagger.spt_num_valid_tracks);
  reader_nc_pi0.AddVariable("spt_n_vtx_segs",&tagger.spt_n_vtx_segs);
  reader_nc_pi0.AddVariable("spt_max_length",&tagger.spt_max_length);
  reader_nc_pi0.AddVariable("stem_len_length",&tagger.stem_len_length);
  reader_nc_pi0.AddVariable("stem_len_flag_avoid_muon_check",&tagger.stem_len_flag_avoid_muon_check);
  reader_nc_pi0.AddVariable("stem_len_num_daughters",&tagger.stem_len_num_daughters);
  reader_nc_pi0.AddVariable("stem_len_daughter_length",&tagger.stem_len_daughter_length);
  reader_nc_pi0.AddVariable("lem_n_3seg",&tagger.lem_n_3seg);
  reader_nc_pi0.AddVariable("lem_e_charge",&tagger.lem_e_charge);
  reader_nc_pi0.AddVariable("lem_e_dQdx",&tagger.lem_e_dQdx);
  reader_nc_pi0.AddVariable("lem_shower_num_segs",&tagger.lem_shower_num_segs);
  reader_nc_pi0.AddVariable("lem_shower_num_main_segs",&tagger.lem_shower_num_main_segs);
  reader_nc_pi0.AddVariable("brm_n_mu_segs",&tagger.brm_n_mu_segs);
  reader_nc_pi0.AddVariable("brm_Ep",&tagger.brm_Ep);
  reader_nc_pi0.AddVariable("brm_acc_length",&tagger.brm_acc_length);
  reader_nc_pi0.AddVariable("brm_connected_length",&tagger.brm_connected_length);
  reader_nc_pi0.AddVariable("brm_n_size",&tagger.brm_n_size);
  reader_nc_pi0.AddVariable("brm_acc_direct_length",&tagger.brm_acc_direct_length);
  reader_nc_pi0.AddVariable("brm_n_mu_main",&tagger.brm_n_mu_main);
  reader_nc_pi0.AddVariable("cme_mu_energy",&tagger.cme_mu_energy);
  reader_nc_pi0.AddVariable("cme_mu_length",&tagger.cme_mu_length);
  reader_nc_pi0.AddVariable("cme_angle_beam",&tagger.cme_angle_beam);
  reader_nc_pi0.AddVariable("anc_max_angle",&tagger.anc_max_angle);
  reader_nc_pi0.AddVariable("anc_max_length",&tagger.anc_max_length);
  reader_nc_pi0.AddVariable("anc_acc_forward_length",&tagger.anc_acc_forward_length);
  reader_nc_pi0.AddVariable("anc_acc_backward_length",&tagger.anc_acc_backward_length);
  reader_nc_pi0.AddVariable("anc_acc_forward_length1",&tagger.anc_acc_forward_length1);
  reader_nc_pi0.AddVariable("anc_flag_main_outside",&tagger.anc_flag_main_outside);
  reader_nc_pi0.AddVariable("stem_dir_angle",&tagger.stem_dir_angle);
  reader_nc_pi0.AddVariable("stem_dir_angle1",&tagger.stem_dir_angle1);
  reader_nc_pi0.AddVariable("stem_dir_angle2",&tagger.stem_dir_angle2);
  reader_nc_pi0.AddVariable("stem_dir_angle3",&tagger.stem_dir_angle3);
  reader_nc_pi0.AddVariable("stem_dir_ratio",&tagger.stem_dir_ratio);
  reader_nc_pi0.AddVariable("vis_1_n_vtx_segs",&tagger.vis_1_n_vtx_segs);
  reader_nc_pi0.AddVariable("vis_1_energy",&tagger.vis_1_energy);
  reader_nc_pi0.AddVariable("vis_1_num_good_tracks",&tagger.vis_1_num_good_tracks);
  reader_nc_pi0.AddVariable("vis_1_max_angle",&tagger.vis_1_max_angle);
  reader_nc_pi0.AddVariable("vis_1_max_shower_angle",&tagger.vis_1_max_shower_angle);
  reader_nc_pi0.AddVariable("vis_1_tmp_length1",&tagger.vis_1_tmp_length1);
  reader_nc_pi0.AddVariable("vis_1_particle_type",&tagger.vis_1_particle_type);
  reader_nc_pi0.AddVariable("vis_2_n_vtx_segs",&tagger.vis_2_n_vtx_segs);
  reader_nc_pi0.AddVariable("vis_2_min_angle",&tagger.vis_2_min_angle);
  reader_nc_pi0.AddVariable("vis_2_min_weak_track",&tagger.vis_2_min_weak_track);
  reader_nc_pi0.AddVariable("vis_2_angle_beam",&tagger.vis_2_angle_beam);
  reader_nc_pi0.AddVariable("vis_2_min_angle1",&tagger.vis_2_min_angle1);
  reader_nc_pi0.AddVariable("vis_2_iso_angle1",&tagger.vis_2_iso_angle1);
  reader_nc_pi0.AddVariable("vis_2_min_medium_dQ_dx",&tagger.vis_2_min_medium_dQ_dx);
  reader_nc_pi0.AddVariable("vis_2_min_length",&tagger.vis_2_min_length);
  reader_nc_pi0.AddVariable("vis_2_sg_length",&tagger.vis_2_sg_length);
  reader_nc_pi0.AddVariable("vis_2_max_angle",&tagger.vis_2_max_angle);
  reader_nc_pi0.AddVariable("vis_2_max_weak_track",&tagger.vis_2_max_weak_track);
  reader_nc_pi0.AddVariable("br1_1_shower_type",&tagger.br1_1_shower_type);
  reader_nc_pi0.AddVariable("br1_1_flag_sg_topology",&tagger.br1_1_flag_sg_topology);
  reader_nc_pi0.AddVariable("br1_2_n_connected",&tagger.br1_2_n_connected);
  reader_nc_pi0.AddVariable("br1_2_max_length",&tagger.br1_2_max_length);
  reader_nc_pi0.AddVariable("br1_2_n_connected_1",&tagger.br1_2_n_connected_1);
  reader_nc_pi0.AddVariable("br1_2_max_length_ratio",&tagger.br1_2_max_length_ratio);
  reader_nc_pi0.AddVariable("br1_3_n_connected_p",&tagger.br1_3_n_connected_p);
  reader_nc_pi0.AddVariable("br1_3_max_length_p",&tagger.br1_3_max_length_p);
  reader_nc_pi0.AddVariable("br2_max_angle",&tagger.br2_max_angle);
  reader_nc_pi0.AddVariable("br3_1_sg_direct_length",&tagger.br3_1_sg_direct_length);
  reader_nc_pi0.AddVariable("br3_1_total_length",&tagger.br3_1_total_length);
  reader_nc_pi0.AddVariable("br3_1_iso_angle",&tagger.br3_1_iso_angle);
  reader_nc_pi0.AddVariable("br3_2_n_ele",&tagger.br3_2_n_ele);
  reader_nc_pi0.AddVariable("br3_2_n_other",&tagger.br3_2_n_other);
  reader_nc_pi0.AddVariable("br3_2_other_fid",&tagger.br3_2_other_fid);
  reader_nc_pi0.AddVariable("br3_4_acc_length",&tagger.br3_4_acc_length);
  reader_nc_pi0.AddVariable("br3_7_min_angle",&tagger.br3_7_min_angle);
  reader_nc_pi0.AddVariable("br3_8_max_dQ_dx",&tagger.br3_8_max_dQ_dx);
  reader_nc_pi0.AddVariable("br4_1_min_dis",&tagger.br4_1_min_dis);
  reader_nc_pi0.AddVariable("br4_2_ratio_45",&tagger.br4_2_ratio_45);
  reader_nc_pi0.AddVariable("br4_2_ratio_35",&tagger.br4_2_ratio_35);
  reader_nc_pi0.AddVariable("br4_2_ratio_25",&tagger.br4_2_ratio_25);
  reader_nc_pi0.AddVariable("br4_2_ratio_15",&tagger.br4_2_ratio_15);
  reader_nc_pi0.AddVariable("br4_2_ratio1_45",&tagger.br4_2_ratio1_45);
  reader_nc_pi0.AddVariable("br4_2_ratio1_35",&tagger.br4_2_ratio1_35);
  reader_nc_pi0.AddVariable("br4_2_ratio1_25",&tagger.br4_2_ratio1_25);
  reader_nc_pi0.AddVariable("br4_2_ratio1_15",&tagger.br4_2_ratio1_15);
  reader_nc_pi0.AddVariable("br4_2_iso_angle",&tagger.br4_2_iso_angle);
  reader_nc_pi0.AddVariable("br4_2_iso_angle1",&tagger.br4_2_iso_angle1);
  reader_nc_pi0.AddVariable("br4_2_angle",&tagger.br4_2_angle);
  reader_nc_pi0.AddVariable("tro_3_stem_length",&tagger.tro_3_stem_length);
  reader_nc_pi0.AddVariable("tro_3_n_muon_segs",&tagger.tro_3_n_muon_segs);
  reader_nc_pi0.AddVariable("hol_1_n_valid_tracks",&tagger.hol_1_n_valid_tracks);
  reader_nc_pi0.AddVariable("hol_1_min_angle",&tagger.hol_1_min_angle);
  reader_nc_pi0.AddVariable("hol_1_energy",&tagger.hol_1_energy);
  reader_nc_pi0.AddVariable("hol_1_flag_all_shower",&tagger.hol_1_flag_all_shower);
  reader_nc_pi0.AddVariable("hol_1_min_length",&tagger.hol_1_min_length);
  reader_nc_pi0.AddVariable("hol_2_min_angle",&tagger.hol_2_min_angle);
  reader_nc_pi0.AddVariable("hol_2_medium_dQ_dx",&tagger.hol_2_medium_dQ_dx);
  reader_nc_pi0.AddVariable("hol_2_ncount",&tagger.hol_2_ncount);
  reader_nc_pi0.AddVariable("lol_3_angle_beam",&tagger.lol_3_angle_beam);
  reader_nc_pi0.AddVariable("lol_3_n_valid_tracks",&tagger.lol_3_n_valid_tracks);
  reader_nc_pi0.AddVariable("lol_3_min_angle",&tagger.lol_3_min_angle);
  reader_nc_pi0.AddVariable("lol_3_n_out",&tagger.lol_3_n_out);
  reader_nc_pi0.AddVariable("lol_3_n_sum",&tagger.lol_3_n_sum);
  reader_nc_pi0.AddVariable("cosmict_2_particle_type",&tagger.cosmict_2_particle_type);
  reader_nc_pi0.AddVariable("cosmict_2_n_muon_tracks",&tagger.cosmict_2_n_muon_tracks);
  reader_nc_pi0.AddVariable("cosmict_2_flag_inside",&tagger.cosmict_2_flag_inside);
  reader_nc_pi0.AddVariable("cosmict_2_angle_beam",&tagger.cosmict_2_angle_beam);
  reader_nc_pi0.AddVariable("cosmict_2_flag_dir_weak",&tagger.cosmict_2_flag_dir_weak);
  reader_nc_pi0.AddVariable("cosmict_2_dQ_dx_end",&tagger.cosmict_2_dQ_dx_end);
  reader_nc_pi0.AddVariable("cosmict_2_dQ_dx_front",&tagger.cosmict_2_dQ_dx_front);
  reader_nc_pi0.AddVariable("cosmict_2_phi",&tagger.cosmict_2_phi);
  reader_nc_pi0.AddVariable("cosmict_2_valid_tracks",&tagger.cosmict_2_valid_tracks);
  reader_nc_pi0.AddVariable("cosmict_3_flag_inside",&tagger.cosmict_3_flag_inside);
  reader_nc_pi0.AddVariable("cosmict_3_angle_beam",&tagger.cosmict_3_angle_beam);
  reader_nc_pi0.AddVariable("cosmict_3_flag_dir_weak",&tagger.cosmict_3_flag_dir_weak);
  reader_nc_pi0.AddVariable("cosmict_3_dQ_dx_end",&tagger.cosmict_3_dQ_dx_end);
  reader_nc_pi0.AddVariable("cosmict_3_dQ_dx_front",&tagger.cosmict_3_dQ_dx_front);
  reader_nc_pi0.AddVariable("cosmict_3_phi",&tagger.cosmict_3_phi);
  reader_nc_pi0.AddVariable("cosmict_3_valid_tracks",&tagger.cosmict_3_valid_tracks);
  reader_nc_pi0.AddVariable("cosmict_4_flag_inside",&tagger.cosmict_4_flag_inside);
  reader_nc_pi0.AddVariable("cosmict_6_flag_dir_weak",&tagger.cosmict_6_flag_dir_weak);
  reader_nc_pi0.AddVariable("cosmict_6_flag_inside",&tagger.cosmict_6_flag_inside);
  reader_nc_pi0.AddVariable("cosmict_6_angle",&tagger.cosmict_6_angle);
  reader_nc_pi0.AddVariable("cosmict_7_flag_sec",&tagger.cosmict_7_flag_sec);
  reader_nc_pi0.AddVariable("cosmict_7_n_muon_tracks",&tagger.cosmict_7_n_muon_tracks);
  reader_nc_pi0.AddVariable("cosmict_7_flag_inside",&tagger.cosmict_7_flag_inside);
  reader_nc_pi0.AddVariable("cosmict_7_angle_beam",&tagger.cosmict_7_angle_beam);
  reader_nc_pi0.AddVariable("cosmict_7_flag_dir_weak",&tagger.cosmict_7_flag_dir_weak);
  reader_nc_pi0.AddVariable("cosmict_7_dQ_dx_end",&tagger.cosmict_7_dQ_dx_end);
  reader_nc_pi0.AddVariable("cosmict_7_dQ_dx_front",&tagger.cosmict_7_dQ_dx_front);
  reader_nc_pi0.AddVariable("cosmict_7_phi",&tagger.cosmict_7_phi);
  reader_nc_pi0.AddVariable("cosmict_8_flag_out",&tagger.cosmict_8_flag_out);
  reader_nc_pi0.AddVariable("cosmict_8_muon_length",&tagger.cosmict_8_muon_length);
  reader_nc_pi0.AddVariable("cosmict_8_acc_length",&tagger.cosmict_8_acc_length);
  reader_nc_pi0.AddVariable("numu_cc_3_particle_type",&tagger.numu_cc_3_particle_type);
  reader_nc_pi0.AddVariable("numu_cc_3_max_length",&tagger.numu_cc_3_max_length);
  reader_nc_pi0.AddVariable("numu_cc_3_track_length",&tagger.numu_cc_3_acc_track_length);
  reader_nc_pi0.AddVariable("numu_cc_3_max_length_all",&tagger.numu_cc_3_max_length_all);
  reader_nc_pi0.AddVariable("numu_cc_3_max_muon_length",&tagger.numu_cc_3_max_muon_length);
  reader_nc_pi0.AddVariable("numu_cc_3_n_daughter_all",&tagger.numu_cc_3_n_daughter_all);
  reader_nc_pi0.AddVariable("pio_2_score",&tagger.pio_2_score);
  reader_nc_pi0.AddVariable("sig_1_score",&tagger.sig_1_score);
  reader_nc_pi0.AddVariable("sig_2_score",&tagger.sig_2_score);
  reader_nc_pi0.AddVariable("stw_2_score",&tagger.stw_2_score);
  reader_nc_pi0.AddVariable("stw_3_score",&tagger.stw_3_score);
  reader_nc_pi0.AddVariable("stw_4_score",&tagger.stw_4_score);
  reader_nc_pi0.AddVariable("br3_3_score",&tagger.br3_3_score);
  reader_nc_pi0.AddVariable("br3_5_score",&tagger.br3_5_score);
  reader_nc_pi0.AddVariable("br3_6_score",&tagger.br3_6_score);
  reader_nc_pi0.AddVariable("lol_1_score",&tagger.lol_1_score);
  reader_nc_pi0.AddVariable("lol_2_score",&tagger.lol_2_score);
  reader_nc_pi0.AddVariable("tro_1_score",&tagger.tro_1_score);
  reader_nc_pi0.AddVariable("tro_2_score",&tagger.tro_2_score);
  reader_nc_pi0.AddVariable("tro_4_score",&tagger.tro_4_score);
  reader_nc_pi0.AddVariable("tro_5_score",&tagger.tro_5_score);
  reader_nc_pi0.AddVariable("cosmict_10_score",&tagger.cosmict_10_score);
  reader_nc_pi0.AddVariable("numu_1_score",&tagger.numu_1_score);
  reader_nc_pi0.AddVariable("numu_2_score",&tagger.numu_2_score);
  reader_nc_pi0.AddVariable("numu_score",&tagger.numu_score);
  reader_nc_pi0.AddVariable("nue_score",&tagger.nue_score);

  reader_nc_pi0.AddVariable("kine_reco_Enu",&kine.kine_reco_Enu);
  reader_nc_pi0.AddVariable("kine_reco_add_energy",&kine.kine_reco_add_energy);
  reader_nc_pi0.AddVariable("kine_pio_mass",&kine.kine_pio_mass);

  reader_nc_pi0.AddVariable("kine_pio_flag",&temp_kine_pio_flag);
  //  reader_nc_pi0.AddVariable("kine_pio_flag",&kine.kine_pio_flag);
  reader_nc_pi0.AddVariable("kine_pio_vtx_dis",&kine.kine_pio_vtx_dis);
  reader_nc_pi0.AddVariable("kine_pio_energy_1",&kine.kine_pio_energy_1);
  reader_nc_pi0.AddVariable("kine_pio_theta_1",&kine.kine_pio_theta_1);
  reader_nc_pi0.AddVariable("kine_pio_phi_1",&kine.kine_pio_phi_1);
  reader_nc_pi0.AddVariable("kine_pio_dis_1",&kine.kine_pio_dis_1);
  reader_nc_pi0.AddVariable("kine_pio_energy_2",&kine.kine_pio_energy_2);
  reader_nc_pi0.AddVariable("kine_pio_theta_2",&kine.kine_pio_theta_2);
  reader_nc_pi0.AddVariable("kine_pio_phi_2",&kine.kine_pio_phi_2);
  reader_nc_pi0.AddVariable("kine_pio_dis_2",&kine.kine_pio_dis_2);
  reader_nc_pi0.AddVariable("kine_pio_angle",&kine.kine_pio_angle);
  reader_nc_pi0.BookMVA( "MyBDT", "weights/ncpio_weights_TMVA.xml");

  
  std::map<std::pair<int, int>, int> map_rs_n;
  std::map<std::pair<int, int>, std::set<int> > map_rs_f1p5; // Reco 1.5
  std::map<std::pair<int, int>, std::set<int> > map_rs_f2stm; // Reco2 stm
  std::map<std::pair<int, int>, std::set<int> > map_rs_f2pr; // Reco2 Pattern recognition
  
  T_eval->SetBranchStatus("*",0);
  T_eval->SetBranchStatus("stm_eventtype",1); 
  T_eval->SetBranchStatus("stm_lowenergy",1); 
  T_eval->SetBranchStatus("stm_LM",1); 
  T_eval->SetBranchStatus("stm_TGM",1); 
  T_eval->SetBranchStatus("stm_STM",1); 
  T_eval->SetBranchStatus("stm_FullDead",1); 
  T_eval->SetBranchStatus("stm_clusterlength",1);
  T_eval->SetBranchStatus("match_found",1);
  T_eval->SetBranchStatus("run",1); 
  T_eval->SetBranchStatus("subrun",1); 
  T_eval->SetBranchStatus("event",1);
  if (T_eval->GetBranch("file_type")) T_eval->SetBranchStatus("file_type",1);

  if (T_eval->GetBranch("match_found_asInt")){
    T_eval->SetBranchStatus("match_found_asInt",1);
  }
  
  T_BDTvars->SetBranchStatus("*",0);
  T_BDTvars->SetBranchStatus("numu_cc_flag",1);

  std::set<std::pair<int,int> > remove_set;
  
  bool flag_presel = false;
  for (Int_t i=0;i!=T_eval->GetEntries();i++){
    
    T_eval->GetEntry(i);
    T_BDTvars->GetEntry(i);

    if (flag_check_run_subrun){
      if (flag_use_global_file_type){
	(*eval.file_type) = global_file_type;
      }
      auto it1 = map_type_run_subrun.find(*eval.file_type);
      
      if (it1 != map_type_run_subrun.end()){
	
	// hack for now ...
	if (it1->second.find(std::make_pair(eval.run, eval.subrun)) != it1->second.end()) {
	  remove_set.insert(std::make_pair(eval.run, eval.subrun));
	  continue;
	}
      }

      //      std::cout << flag_use_global_file_type << " " << *eval.file_type  << " " << eval.run << " " << eval.subrun << " " << remove_set.size() << std::endl;
    }

    /*
    // failed jobs ...
    int tmp_match_found = eval.match_found;
    if (eval.is_match_found_int) tmp_match_found = eval.match_found_asInt;
    
    flag_presel = false;
    if (tmp_match_found != 0 && eval.stm_eventtype != 0 && eval.stm_lowenergy ==0 && eval.stm_LM ==0 && eval.stm_TGM ==0 && eval.stm_STM==0 && eval.stm_FullDead == 0 && eval.stm_clusterlength >0) {
      flag_presel = true; // preselection ...
    }
    
    map_rs_n[std::make_pair(eval.run, eval.subrun)] ++;
    if (tmp_match_found == -1) map_rs_f1p5[std::make_pair(eval.run, eval.subrun)].insert(eval.event);
    if (tmp_match_found == 1 && eval.stm_lowenergy == -1) map_rs_f2stm[std::make_pair(eval.run, eval.subrun)].insert(eval.event);
    if (flag_presel && tagger.numu_cc_flag == -1) map_rs_f2pr[std::make_pair(eval.run, eval.subrun)].insert(eval.event);
    */
  }


  /*
  for (auto it = map_rs_f1p5.begin(); it!= map_rs_f1p5.end(); it++){
    if ( map_rs_f1p5[it->first].size()  > map_rs_n[it->first] * fail_percentage && map_rs_f1p5[it->first].size() != 1
	 || map_rs_f1p5[it->first].size()  > map_rs_n[it->first] * 0.33 && map_rs_f1p5[it->first].size() == 1)
      remove_set.insert(it->first);
  }
  for (auto it = map_rs_f2stm.begin(); it != map_rs_f2stm.end(); it++){
    if (map_rs_f2stm[it->first].size() > map_rs_n[it->first]* fail_percentage && map_rs_f2stm[it->first].size() != 1
	|| map_rs_f2stm[it->first].size() > map_rs_n[it->first]* 0.33 && map_rs_f2stm[it->first].size() == 1)
      remove_set.insert(it->first);
  }
  for (auto it = map_rs_f2pr.begin(); it != map_rs_f2pr.end(); it++){
    if (map_rs_f2pr[it->first].size() > map_rs_n[it->first] * fail_percentage && map_rs_f2pr[it->first].size() != 1 || map_rs_f2pr[it->first].size() > map_rs_n[it->first] * 0.33 && map_rs_f2pr[it->first].size() == 1
	)
      remove_set.insert(it->first);
  }
  */

  //  std::cout << remove_set.size() << std::endl;
  

  T_eval->SetBranchStatus("*",1);
  T_BDTvars->SetBranchStatus("*",1);
  
  for (int i=0;i!=T_BDTvars->GetEntries();i++){
    eval.weight_change = false;
    T_BDTvars->GetEntry(i);
    T_eval->GetEntry(i); tagger.match_isFC = eval.match_isFC;
    T_KINEvars->GetEntry(i); tagger.kine_reco_Enu = kine.kine_reco_Enu; temp_kine_pio_flag = kine.kine_pio_flag;
    T_PFeval->GetEntry(i);

    if (remove_set.find(std::make_pair(eval.run, eval.subrun)) != remove_set.end()) continue;
    
    tagger.br3_3_score     = cal_br3_3_bdt(0.3, tagger,  reader_br3_3, br3_3_v_energy,  br3_3_v_angle,  br3_3_v_dir_length, br3_3_v_length);
    tagger.br3_5_score     = cal_br3_5_bdt(0.42, tagger,  reader_br3_5, br3_5_v_dir_length, br3_5_v_total_length, br3_5_v_flag_avoid_muon_check, br3_5_v_n_seg, br3_5_v_angle, br3_5_v_sg_length, br3_5_v_energy, br3_5_v_n_main_segs, br3_5_v_n_segs, br3_5_v_shower_main_length, br3_5_v_shower_total_length);
    tagger.br3_6_score     = cal_br3_6_bdt(0.75, tagger, reader_br3_6, br3_6_v_angle, br3_6_v_angle1, br3_6_v_flag_shower_trajectory, br3_6_v_direct_length, br3_6_v_length, br3_6_v_n_other_vtx_segs, br3_6_v_energy);
    tagger.pio_2_score     = cal_pio_2_bdt(0.2,  tagger,  reader_pio_2, pio_2_v_dis2, pio_2_v_angle2, pio_2_v_acc_length);
    tagger.stw_2_score     = cal_stw_2_bdt(0.7, tagger, reader_stw_2, stw_2_v_medium_dQ_dx, stw_2_v_energy, stw_2_v_angle, stw_2_v_dir_length, stw_2_v_max_dQ_dx);
    tagger.stw_3_score     = cal_stw_3_bdt(0.5, tagger, reader_stw_3, stw_3_v_angle, stw_3_v_dir_length, stw_3_v_energy, stw_3_v_medium_dQ_dx);
    tagger.stw_4_score     = cal_stw_4_bdt(0.7, tagger, reader_stw_4, stw_4_v_angle, stw_4_v_dis, stw_4_v_energy);
    tagger.sig_1_score     = cal_sig_1_bdt(0.59, tagger,  reader_sig_1, sig_1_v_angle, sig_1_v_flag_single_shower, sig_1_v_energy, sig_1_v_energy_1);
    tagger.sig_2_score     = cal_sig_2_bdt(0.55, tagger, reader_sig_2, sig_2_v_energy, sig_2_v_shower_angle, sig_2_v_flag_single_shower, sig_2_v_medium_dQ_dx, sig_2_v_start_dQ_dx);
    tagger.lol_1_score     = cal_lol_1_bdt(0.85, tagger, reader_lol_1, lol_1_v_energy, lol_1_v_vtx_n_segs, lol_1_v_nseg, lol_1_v_angle);
    tagger.lol_2_score     = cal_lol_2_bdt(0.7, tagger, reader_lol_2,  lol_2_v_length, lol_2_v_angle, lol_2_v_type, lol_2_v_vtx_n_segs, lol_2_v_energy, lol_2_v_shower_main_length, lol_2_v_flag_dir_weak);
    tagger.tro_1_score     = cal_tro_1_bdt(0.28, tagger, reader_tro_1, tro_1_v_particle_type, tro_1_v_flag_dir_weak, tro_1_v_min_dis, tro_1_v_sg1_length,
					   tro_1_v_shower_main_length, tro_1_v_max_n_vtx_segs, tro_1_v_tmp_length, tro_1_v_medium_dQ_dx, tro_1_v_dQ_dx_cut, tro_1_v_flag_shower_topology);
    tagger.tro_2_score     = cal_tro_2_bdt(0.35, tagger, reader_tro_2, tro_2_v_energy, tro_2_v_stem_length, tro_2_v_iso_angle, tro_2_v_max_length, tro_2_v_angle);
    tagger.tro_4_score     = cal_tro_4_bdt(0.33, tagger, reader_tro_4, tro_4_v_dir2_mag, tro_4_v_angle, tro_4_v_angle1, tro_4_v_angle2, tro_4_v_length, tro_4_v_length1, tro_4_v_medium_dQ_dx, tro_4_v_end_dQ_dx, tro_4_v_energy, tro_4_v_shower_main_length, tro_4_v_flag_shower_trajectory);
    tagger.tro_5_score     = cal_tro_5_bdt(0.5, tagger, reader_tro_5, tro_5_v_max_angle, tro_5_v_min_angle, tro_5_v_max_length, tro_5_v_iso_angle, tro_5_v_n_vtx_segs, tro_5_v_min_count, tro_5_v_max_count, tro_5_v_energy);
    tagger.nue_score       = cal_bdts_xgboost( tagger,  reader);
    
    // BDT calculations
    tagger.numu_1_score = cal_numu_1_bdt(-0.4, tagger, reader_numu_1, numu_cc_flag_1,
					 numu_cc_1_particle_type,
					 numu_cc_1_length,
					 numu_cc_1_medium_dQ_dx,
					 numu_cc_1_dQ_dx_cut,
					 numu_cc_1_direct_length,
					 numu_cc_1_n_daughter_tracks,
					 numu_cc_1_n_daughter_all);
    tagger.numu_2_score = cal_numu_2_bdt(-0.1,tagger,reader_numu_2,
					 numu_cc_2_length,
					 numu_cc_2_total_length,
					 numu_cc_2_n_daughter_tracks,
					 numu_cc_2_n_daughter_all);
    tagger.cosmict_10_score = cal_cosmict_10_bdt(0.7, tagger, reader_cosmict_10,
						 cosmict_10_vtx_z,
						 cosmict_10_flag_shower,
						 cosmict_10_flag_dir_weak,
						 cosmict_10_angle_beam,
						 cosmict_10_length);
    if (std::isnan(tagger.cosmict_4_angle_beam)) tagger.cosmict_4_angle_beam = 0;
    if (std::isnan(tagger.cosmict_7_angle_beam)) tagger.cosmict_7_angle_beam = 0;
    if (std::isnan(tagger.cosmict_7_theta)) tagger.cosmict_7_theta = 0;
    if (std::isnan(tagger.cosmict_7_phi)) tagger.cosmict_7_phi = 0;
    
    tagger.numu_score = cal_numu_bdts_xgboost(tagger,reader_numu); 

    // NC gamma ... add a NC BDT ... Lee
    tagger.nc_delta_score = cal_nc_delta_bdts_xgboost(tagger, reader_nc_delta);
    tagger.nc_pio_score = cal_nc_pio_bdts_xgboost(tagger, reader_nc_pi0);
    // if (eval.run == 6467 && eval.event == 97
    // 	|| eval.run == 7026 && eval.event == 22180
    // 	|| eval.run == 7010 && eval.event == 25278
    // 	|| eval.run == 5531 && eval.event == 3160
    // 	|| eval.run == 7020 && eval.event == 32277
    // 	){
    // if (tagger.numu_cc_flag>=0)
    //   std::cout << i << " " << eval.run << " " << eval.event << " " << nc_pio_score << std::endl;
    // }
    //
    
    
    // limit the cut val ...
    if (std::isnan(eval.weight_spline) || std::isinf(eval.weight_spline) ||
	std::isnan(eval.weight_cv) || std::isinf(eval.weight_cv) ||
	eval.weight_spline * eval.weight_cv <=0 ||
	eval.weight_spline * eval.weight_cv > weight_cut_val){
      eval.weight_spline = 1;
      eval.weight_cv = 1;
      eval.weight_change = true;
    }

    if (flag_data && skip_cut == 0){
      if (good_runlist_set.find(eval.run) == good_runlist_set.end()) continue;
      if (low_lifetime_set.find(eval.run) != low_lifetime_set.end()) continue;
      // bad run in run 1 due to beam filter bnb
      // if (eval.run <= 5367 && eval.run >= 5320) continue;
      // ext bnb in run 1, high rate
      if (eval.run>=7004 && eval.run <=7070) continue;
      // ext bnb in run 2, high rate not in good list anyway
      //      if ((eval.run>=10287 && eval.run <= 10304) || (eval.run>=12277 && eval.run <=12350)) continue;
      // ext bnb in run 2, low rate not in good list anyway
      // if ((eval.run>=9768 && eval.run <= 10070) || (eval.run>=10102 && eval.run <=10246)) continue;
      // bnb run 2 high rate
      if (eval.run >= 8321 && eval.run <=8404) continue;
      // bnb run 3 high rate
      if (eval.run >=15369 && eval.run <= 15402) continue;
    }
    
    t4->Fill();
    t1->Fill();
    t3->Fill();
    t5->Fill();
  }

  for (Int_t i=0;i!=T_pot->GetEntries();i++){
    T_pot->GetEntry(i);
    
    if (remove_set.find(std::make_pair(pot.runNo, pot.subRunNo)) != remove_set.end()) continue;

    if (flag_data && skip_cut == 0){
      if (good_runlist_set.find(pot.runNo) == good_runlist_set.end()) continue;
      if (low_lifetime_set.find(pot.runNo) != low_lifetime_set.end()) continue;

      //bad run in run 1 due to beam filter bnb
      //if (pot.runNo <= 5367 && pot.runNo >= 5320) continue;
      // ext bnb in run 1, high rate
      if (pot.runNo >=7004 && pot.runNo <=7070) continue;
      // ext bnb in run 2, high rate not in good list anyway
      //if ((pot.runNo>=10287 && pot.runNo <= 10304) || (pot.runNo>=12277 && pot.runNo <=12350)) continue;
      // ext bnb in run 2, low rate not in good list anyway
      //if ((pot.runNo>=9768 && pot.runNo <= 10070) || (pot.runNo>=10102 && pot.runNo <=10246)) continue;
      // bnb run 2 high rate
      if (pot.runNo >= 8321 && pot.runNo <=8404) continue;
      // bnb run 3 high rate
      if (pot.runNo >=15369 && pot.runNo <= 15402) continue;
    }
    t2->Fill();
  }


  for (auto it = remove_set.begin(); it!= remove_set.end(); it++){
    std::cout <<"remove  run:" << it->first << " subrun:" << it->second << std::endl;
  }
  
  file2->Write();
  file2->Close();
  
  return 0;

  
  
}
